<%= form_with model: @inspection,
             url: inspection_path(@inspection),
             method: :patch,
             local: true,
             html: {
               class: "inspection-user-height-form",
               data: { autosave: "true" }
             } do |form| %>

  <%= form.fields_for :user_height_assessment, (@inspection.user_height_assessment || @inspection.build_user_height_assessment) do |assessment_form| %>

  <%= render 'form/section', form: assessment_form, i18n_base: 'inspections.assessments.user_height.fields' do %>
    <div class="assessment-form user-height-assessment">
      <h3><%= t('inspections.assessments.user_height.title') %></h3>

      <!-- Height Measurements Section -->
      <%= render 'form/fieldset', legend_key: 'height_measurements' do %>
        <%= render 'form/number', field: :containing_wall_height %>
        <%= render 'form/number', field: :platform_height %>
        <%= render 'form/number', field: :user_height %>
        <%= render 'form/checkbox', field: :permanent_roof %>
      <% end %>

      <!-- User Capacity Section -->
      <%= render 'form/fieldset', legend_key: 'user_capacity' do %>
        <%= render 'form/number', field: :users_at_1000mm, min: 0, step: 1 %>
        <%= render 'form/number', field: :users_at_1200mm, min: 0, step: 1 %>
        <%= render 'form/number', field: :users_at_1500mm, min: 0, step: 1 %>
        <%= render 'form/number', field: :users_at_1800mm, min: 0, step: 1 %>

        <div class="capacity-summary">
          <strong><%= t('inspections.assessments.user_height.fields.total_capacity') %>:</strong>
          <span id="total-capacity"><%= @inspection.user_height_assessment&.total_user_capacity || 0 %></span>
        </div>
      <% end %>

      <!-- Play Area Section -->
      <%= render 'form/fieldset', legend_key: 'play_area' do %>
        <%= render 'form/number', field: :play_area_length, min: 0 %>
        <%= render 'form/number', field: :play_area_width, min: 0 %>
        <%= render 'form/number', field: :negative_adjustment, min: 0 %>
      <% end %>

      <!-- Comments Section -->
      <%= render 'form/text_area', field: :user_height_comment %>

        <!-- Safety Status -->
      <%= render 'form/assessment_status', assessment: @inspection.user_height_assessment, i18n_base: 'inspections.assessments.user_height' %>

      <%= render 'form/save_assessment' %>
      </div>
    <% end %>
  <% end %>
<% end %>

<script>
  // Calculate total capacity dynamically
  document.addEventListener('DOMContentLoaded', function() {
    const capacityFields = ['inspection_user_height_assessment_users_at_1000mm', 'inspection_user_height_assessment_users_at_1200mm', 'inspection_user_height_assessment_users_at_1500mm', 'inspection_user_height_assessment_users_at_1800mm'];
    const totalCapacityElement = document.getElementById('total-capacity');

    function updateTotalCapacity() {
      let total = 0;
      capacityFields.forEach(fieldId => {
        const field = document.getElementById(fieldId);
        if (field && field.value) {
          total += parseInt(field.value) || 0;
        }
      });
      if (totalCapacityElement) {
        totalCapacityElement.textContent = total;
      }
    }

    capacityFields.forEach(fieldId => {
      const field = document.getElementById(fieldId);
      if (field) {
        field.addEventListener('input', updateTotalCapacity);
      }
    });
  });
</script>
