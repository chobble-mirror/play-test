[0m[35mdb/schema.rb[0m
[0m[32m169[0m-  create_table "slide_assessments", id: false, force: :cascade do |t|
[0m[32m170[0m-    t.string "inspection_id", limit: 12, null: false
[0m[32m171[0m:    t.decimal "slide_plat[0m[1m[31mform[0m_height", precision: 8, scale: 2
[0m[32m172[0m-    t.decimal "slide_wall_height", precision: 8, scale: 2
[0m[32m173[0m-    t.decimal "runout", precision: 8, scale: 2
--
[0m[32m178[0m-    t.boolean "slip_sheet_pass"
[0m[32m179[0m-    t.boolean "slide_permanent_roof"
[0m[32m180[0m:    t.text "slide_plat[0m[1m[31mform[0m_height_comment"
[0m[32m181[0m-    t.text "slide_wall_height_comment"
[0m[32m182[0m-    t.text "slide_first_metre_height_comment"
--
[0m[32m271[0m-    t.decimal "containing_wall_height", precision: 8, scale: 2
[0m[32m272[0m-    t.text "containing_wall_height_comment"
[0m[32m273[0m:    t.decimal "plat[0m[1m[31mform[0m_height", precision: 8, scale: 2
[0m[32m274[0m:    t.text "plat[0m[1m[31mform[0m_height_comment"
[0m[32m275[0m-    t.decimal "tallest_user_height", precision: 8, scale: 2
[0m[32m276[0m-    t.text "tallest_user_height_comment"

[0m[35mlib/test_data_helpers.rb[0m
[0m[32m2[0m-# Used by both factories and seeds for non-critical test data generation
[0m[32m3[0m-module TestDataHelpers
[0m[32m4[0m:  # Generate realistic UK mobile numbers (07xxx [0m[1m[31mform[0mat)
[0m[32m5[0m-  def self.british_phone_number
[0m[32m6[0m-    "07#{rand(100..999)} #{rand(100..999)} #{rand(1000..9999)}"

[0m[35mconfig/initializers/filter_parameter_logging.rb[0m
[0m[32m2[0m-
[0m[32m3[0m-# Configure parameters to be partially matched (e.g. passw matches password) and filtered from the log file.
[0m[32m4[0m:# Use this to limit dissemination of sensitive in[0m[1m[31mform[0mation.
[0m[32m5[0m-# See the ActiveSupport::ParameterFilter documentation for supported notations and behaviors.
[0m[32m6[0m-Rails.application.config.filter_parameters += [

[0m[35mconfig/initializers/content_security_policy.rb[0m
[0m[32m2[0m-
[0m[32m3[0m-# Define an application-wide content security policy.
[0m[32m4[0m:# See the Securing Rails Applications Guide for more in[0m[1m[31mform[0mation:
[0m[32m5[0m-# https://guides.rubyonrails.org/security.html#content-security-policy-header
[0m[32m6[0m-

[0m[35mconfig/importmap.rb[0m
[0m[32m5[0m-pin "comment_toggles"
[0m[32m6[0m-pin "details_links"
[0m[32m7[0m:pin "dirty_[0m[1m[31mform[0ms"
[0m[32m8[0m-pin "share_buttons"
[0m[32m9[0m-pin "safety_standards_tabs"

[0m[35mconfig/initializers/inflections.rb[0m
[0m[32m1[0m-# Be sure to restart your server when you modify this file.
[0m[32m2[0m-
[0m[32m3[0m:# Add new inflection rules using the following [0m[1m[31mform[0mat. Inflections
[0m[32m4[0m-# are locale specific, and you may define rules for as many different
[0m[32m5[0m-# locales as you wish. All of these examples are active by default:

[0m[35mdb/seeds/seed_data.rb[0m
[0m[32m134[0m-    {
[0m[32m135[0m-      containing_wall_height: rand(1.0..2.0).round(1),
[0m[32m136[0m:      plat[0m[1m[31mform[0m_height: rand(0.5..1.5).round(1),
[0m[32m137[0m-      tallest_user_height: rand(1.2..1.8).round(1),
[0m[32m138[0m-      users_at_1000mm: rand(0..5),
--
[0m[32m145[0m-      tallest_user_height_comment: passed ? "Capacity within safe limits based on EN 14960:2019" : "Review user capacity - exceeds recommended limits",
[0m[32m146[0m-      containing_wall_height_comment: "Measured from base to top of wall",
[0m[32m147[0m:      plat[0m[1m[31mform[0m_height_comment: "Plat[0m[1m[31mform[0m height acceptable for age group",
[0m[32m148[0m-      play_area_length_comment: "Effective play area after deducting obstacles",
[0m[32m149[0m-      play_area_width_comment: "Width measured at narrowest point"
--
[0m[32m152[0m-
[0m[32m153[0m-  def self.slide_fields(passed: true)
[0m[32m154[0m:    plat[0m[1m[31mform[0m_height = rand(2.0..6.0).round(1)
[0m[32m155[0m-
[0m[32m156[0m-    # Use the actual SafetyStandard calculation for consistency
[0m[32m157[0m:    required_runout = SafetyStandard.calculate_required_runout(plat[0m[1m[31mform[0m_height)
[0m[32m158[0m-
[0m[32m159[0m-    runout = if passed
--
[0m[32m165[0m-
[0m[32m166[0m-    {
[0m[32m167[0m:      slide_plat[0m[1m[31mform[0m_height: plat[0m[1m[31mform[0m_height,
[0m[32m168[0m-      slide_wall_height: rand(1.0..2.0).round(1),
[0m[32m169[0m-      runout: runout,
--
[0m[32m174[0m-      slip_sheet_pass: check_passed?(passed),
[0m[32m175[0m-      slide_permanent_roof: false,
[0m[32m176[0m:      slide_plat[0m[1m[31mform[0m_height_comment: passed ? "Plat[0m[1m[31mform[0m height compliant with EN 14960:2019" : "Plat[0m[1m[31mform[0m height exceeds recommended limits",
[0m[32m177[0m-      slide_wall_height_comment: "Wall height measured from slide bed",
[0m[32m178[0m-      runout_comment: passed ? "Runout area clear and adequate" : "Runout area needs extending",

[0m[35mconfig/initializers/permissions_policy.rb[0m
[0m[32m2[0m-
[0m[32m3[0m-# Define an application-wide HTTP permissions policy. For further
[0m[32m4[0m:# in[0m[1m[31mform[0mation see: https://developers.google.com/web/updates/2018/06/feature-policy
[0m[32m5[0m-
[0m[32m6[0m-# Rails.application.config.permissions_policy do |policy|

[0m[35mlib/tasks/code_standards.rake[0m
[0m[32m188[0m-    puts "TOTAL: #{all_violations.length} violations found"
[0m[32m189[0m-
[0m[32m190[0m:    puts "\nTo apply StandardRB [0m[1m[31mform[0matting: bundle exec standardrb --fix"
[0m[32m191[0m-    puts "To lint only modified files: rake code_standards:lint_modified"
[0m[32m192[0m-

[0m[35mdb/seeds/units.rb[0m
[0m[32m75[0m-  model: "Giant Slide 25",
[0m[32m76[0m-  owner: "Stefan Family Inflatables",
[0m[32m77[0m:  description: "25ft plat[0m[1m[31mform[0m height giant inflatable slide",
[0m[32m78[0m:  notes: "High plat[0m[1m[31mform[0m - safety barriers critical"
[0m[32m79[0m-)
[0m[32m80[0m-
[0m[32m81[0m-$gladiator_duel = create_unit(
[0m[32m82[0m:  name: "Gladiator Duel Plat[0m[1m[31mform[0m",
[0m[32m83[0m-  serial_prefix: "HHE-2022",
[0m[32m84[0m-  manufacturer: "Happy Hop Europe",
[0m[32m85[0m-  model: "Gladiator Arena",
[0m[32m86[0m-  owner: "Stefano's Party Hire",
[0m[32m87[0m:  description: "Inflatable gladiator duel plat[0m[1m[31mform[0m with pedestals",
[0m[32m88[0m-  notes: "Check pedestal stability and padding"
[0m[32m89[0m-)

[0m[35mconfig/puma.rb[0m
[0m[32m1[0m-# This configuration file will be evaluated by Puma. The top-level methods that
[0m[32m2[0m:# are invoked here are part of Puma's configuration DSL. For more in[0m[1m[31mform[0mation
[0m[32m3[0m-# about methods provided by the DSL, see https://puma.io/puma/Puma/DSL.html.
[0m[32m4[0m-

[0m[35mlib/tasks/safety_standards.rake[0m
[0m[32m52[0m-        text_content = filtered_strings.join(" ")
[0m[32m53[0m-
[0m[32m54[0m:        # Clean up the text and [0m[1m[31mform[0mat it properly
[0m[32m55[0m:        [0m[1m[31mform[0matted_text = text_content.gsub(/\s+/, " ").strip
[0m[32m56[0m-
[0m[32m57[0m-        puts "🔍 Debug info:"
--
[0m[32m61[0m-        puts "   Sample filtered fragments: #{filtered_strings.first(10).inspect}"
[0m[32m62[0m-
[0m[32m63[0m:        if [0m[1m[31mform[0matted_text.empty?
[0m[32m64[0m-          puts "❌ No usable text after filtering watermarks"
[0m[32m65[0m-          puts "💡 Let's try with less aggressive filtering..."
--
[0m[32m70[0m-
[0m[32m71[0m-          if alternative_text.length > 100  # If we have substantial text
[0m[32m72[0m:            [0m[1m[31mform[0matted_text = alternative_text
[0m[32m73[0m-            puts "✅ Using less aggressive filtering, found #{alternative_text.length} characters"
[0m[32m74[0m-          else
--
[0m[32m81[0m-        # Split into lines for better readability (preserve some structure)
[0m[32m82[0m-        # Try to preserve sentence structure by splitting on periods followed by spaces
[0m[32m83[0m:        lines = [0m[1m[31mform[0matted_text.split(/\.\s+/).map(&:strip).reject(&:empty?)
[0m[32m84[0m-        lines = lines.map { |line| line.end_with?(".") ? line : line + "." }
[0m[32m85[0m-
--
[0m[32m94[0m-        # Show some stats
[0m[32m95[0m-        line_count = lines.count
[0m[32m96[0m:        word_count = [0m[1m[31mform[0matted_text.split.count
[0m[32m97[0m:        char_count = [0m[1m[31mform[0matted_text.length
[0m[32m98[0m-
[0m[32m99[0m-        puts "📊 Text file statistics:"

[0m[35mconfig/locales/shared.en.yml[0m
[0m[32m21[0m-      saved_successfully: "Saved successfully"
[0m[32m22[0m-      save_failed: "Save failed"
[0m[32m23[0m:      invalid_image_[0m[1m[31mform[0mat: "Cannot display: invalid image [0m[1m[31mform[0mat"
[0m[32m24[0m-      link_copied: "Link copied to clipboard!"
[0m[32m25[0m-      pdf_not_supported: "Your browser does not support PDFs"

[0m[35mconfig/environments/production.rb[0m
[0m[32m9[0m-  # Eager load code on boot. This eager loads most of Rails and
[0m[32m10[0m-  # your application in memory, allowing both threaded web servers
[0m[32m11[0m:  # and those relying on copy on write to per[0m[1m[31mform[0m better.
[0m[32m12[0m:  # Rake tasks automatically ignore this option for per[0m[1m[31mform[0mance.
[0m[32m13[0m-  config.eager_load = true
[0m[32m14[0m-
[0m[32m15[0m-  # Full error reports are disabled and caching is turned on.
[0m[32m16[0m-  config.consider_all_requests_local = false
[0m[32m17[0m:  config.action_controller.per[0m[1m[31mform[0m_caching = true
[0m[32m18[0m-
[0m[32m19[0m-  # Ensures that a master key has been made available in ENV["RAILS_MASTER_KEY"], config/master.key, or an environment
--
[0m[32m49[0m-  # Log to STDOUT by default
[0m[32m50[0m-  config.logger = ActiveSupport::Logger.new($stdout)
[0m[32m51[0m:    .tap { |logger| logger.[0m[1m[31mform[0matter = ::Logger::Formatter.new }
[0m[32m52[0m-    .then { |logger| ActiveSupport::TaggedLogging.new(logger) }
[0m[32m53[0m-
--
[0m[32m55[0m-  config.log_tags = [:request_id]
[0m[32m56[0m-
[0m[32m57[0m:  # "info" includes generic and useful in[0m[1m[31mform[0mation about system operation, but avoids logging too much
[0m[32m58[0m:  # in[0m[1m[31mform[0mation to avoid inadvertent exposure of personally identifiable in[0m[1m[31mform[0mation (PII). If you
[0m[32m59[0m-  # want to log everything, set the level to "debug".
[0m[32m60[0m-  config.log_level = ENV.fetch("RAILS_LOG_LEVEL", "info")

[0m[35mdb/migrate/20250621192933_remove_unique_index_from_inspection_report_number.rb[0m
[0m[32m3[0m-    remove_index :inspections, name: "index_inspections_on_user_and_report_number"
[0m[32m4[0m-
[0m[32m5[0m:    # Add a regular non-unique index for per[0m[1m[31mform[0mance
[0m[32m6[0m-    add_index :inspections, [:user_id, :unique_report_number],
[0m[32m7[0m-      name: "index_inspections_on_user_and_report_number"

[0m[35mlib/tasks/locale_usage.rake[0m
[0m[32m10[0m-    # Run the test suite
[0m[32m11[0m-    puts "Running test suite..."
[0m[32m12[0m:    success = system("bundle exec rspec --[0m[1m[31mform[0mat progress")
[0m[32m13[0m-
[0m[32m14[0m-    # Read tracking results from saved file
--
[0m[32m64[0m-    # Run tests quietly
[0m[32m65[0m-    puts "Running test suite (this may take a while)..."
[0m[32m66[0m:    system("bundle exec rspec --[0m[1m[31mform[0mat progress > /dev/null 2>&1")
[0m[32m67[0m-
[0m[32m68[0m-    # Read tracking results from saved file
--
[0m[32m106[0m-    # Run tests quietly
[0m[32m107[0m-    puts "Running test suite..."
[0m[32m108[0m:    system("bundle exec rspec --[0m[1m[31mform[0mat progress > /dev/null 2>&1")
[0m[32m109[0m-
[0m[32m110[0m-    # Disable tracking

[0m[35mconfig/environments/development.rb[0m
[0m[32m21[0m-  # Run rails dev:cache to toggle caching.
[0m[32m22[0m-  if Rails.root.join("tmp/caching-dev.txt").exist?
[0m[32m23[0m:    config.action_controller.per[0m[1m[31mform[0m_caching = true
[0m[32m24[0m-    config.action_controller.enable_fragment_cache_logging = true
[0m[32m25[0m-
--
[0m[32m27[0m-    config.public_file_server.headers = {"Cache-Control" => "public, max-age=#{2.days.to_i}"}
[0m[32m28[0m-  else
[0m[32m29[0m:    config.action_controller.per[0m[1m[31mform[0m_caching = false
[0m[32m30[0m-
[0m[32m31[0m-    config.cache_store = :null_store

[0m[35mdb/migrate/20250614005014_initial_schema.rb[0m
[0m[32m203[0m-    create_table "slide_assessments", force: :cascade do |t|
[0m[32m204[0m-      t.string "inspection_id", limit: 12, null: false
[0m[32m205[0m:      t.decimal "slide_plat[0m[1m[31mform[0m_height", precision: 8, scale: 2
[0m[32m206[0m-      t.decimal "slide_wall_height", precision: 8, scale: 2
[0m[32m207[0m-      t.decimal "runout", precision: 8, scale: 2
--
[0m[32m212[0m-      t.boolean "slip_sheet_pass"
[0m[32m213[0m-      t.boolean "slide_permanent_roof"
[0m[32m214[0m:      t.text "slide_plat[0m[1m[31mform[0m_height_comment"
[0m[32m215[0m-      t.datetime "created_at", null: false
[0m[32m216[0m-      t.datetime "updated_at", null: false
--
[0m[32m293[0m-      t.decimal "containing_wall_height", precision: 8, scale: 2
[0m[32m294[0m-      t.text "containing_wall_height_comment"
[0m[32m295[0m:      t.decimal "plat[0m[1m[31mform[0m_height", precision: 8, scale: 2
[0m[32m296[0m:      t.text "plat[0m[1m[31mform[0m_height_comment"
[0m[32m297[0m-      t.decimal "tallest_user_height", precision: 8, scale: 2
[0m[32m298[0m-      t.text "tallest_user_height_comment"

[0m[35mconfig/environments/test.rb[0m
[0m[32m18[0m-  config.eager_load = ENV["CI"].present?
[0m[32m19[0m-
[0m[32m20[0m:  # Configure public file server for tests with Cache-Control for per[0m[1m[31mform[0mance.
[0m[32m21[0m-  config.public_file_server.headers = {"Cache-Control" => "public, max-age=#{1.hour.to_i}"}
[0m[32m22[0m-
[0m[32m23[0m-  # Show full error reports and disable caching.
[0m[32m24[0m-  config.consider_all_requests_local = true
[0m[32m25[0m:  config.action_controller.per[0m[1m[31mform[0m_caching = false
[0m[32m26[0m-  config.cache_store = :null_store
[0m[32m27[0m-

[0m[35mconfig/locales/safety_standards.en.yml[0m
[0m[32m25[0m-      title: "EN 14960:2019 Slide Requirements"
[0m[32m26[0m-      wall_height_requirements: "Wall Height Requirements:"
[0m[32m27[0m:      plat[0m[1m[31mform[0m_height_requirement: "EN 14960:2019 Requirement:"
[0m[32m28[0m-      minimum_runout: "Minimum runout"
[0m[32m29[0m:      runout_[0m[1m[31mform[0mula: "(50% of plat[0m[1m[31mform[0m height or 300mm minimum)"
[0m[32m30[0m-      no_walls_required: "No containing walls required"
[0m[32m31[0m:      walls_equal_height: "Walls must be at least %{height}m (equal to plat[0m[1m[31mform[0m height)"
[0m[32m32[0m:      walls_125_height: "Walls must be at least %{height}m (1.25x plat[0m[1m[31mform[0m height)"
[0m[32m33[0m-      walls_125_plus_roof: "Walls must be at least %{height}m + permanent roof required"
[0m[32m34[0m-
--
[0m[32m77[0m-      runout:
[0m[32m78[0m-        title: "Calculate Required Runout Length"
[0m[32m79[0m:        height_label: "Plat[0m[1m[31mform[0m Height (m):"
[0m[32m80[0m-        height_placeholder: "e.g. 2.5"
[0m[32m81[0m-        submit: "Calculate Runout"
[0m[32m82[0m-        result_title: "Result:"
[0m[32m83[0m:        plat[0m[1m[31mform[0m_height_result: "Plat[0m[1m[31mform[0m Height:"
[0m[32m84[0m-        required_runout_result: "Required Runout:"
[0m[32m85[0m-        calculation_breakdown: "Calculation:"

[0m[35mspec/helpers/units_helper_spec.rb[0m
[0m[32m96[0m-
[0m[32m97[0m-      expect(pdf_action).to be_present
[0m[32m98[0m:      expect(pdf_action[:url]).to eq(unit_path(unit, [0m[1m[31mform[0mat: :pdf))
[0m[32m99[0m-    end
[0m[32m100[0m-

[0m[35mconfig/locales/en.yml[0m
[0m[32m17[0m-  # Common Rails conventions
[0m[32m18[0m-  date:
[0m[32m19[0m:    [0m[1m[31mform[0mats:
[0m[32m20[0m-      default: "%Y-%m-%d"
[0m[32m21[0m-      short: "%b %d"
--
[0m[32m23[0m-
[0m[32m24[0m-  time:
[0m[32m25[0m:    [0m[1m[31mform[0mats:
[0m[32m26[0m-      default: "%a, %d %b %Y %H:%M:%S %z"
[0m[32m27[0m-      short: "%d %b %H:%M"

[0m[35mspec/helpers/users_helper_spec.rb[0m
[0m[32m15[0m-
[0m[32m16[0m-  describe "#inspection_count" do
[0m[32m17[0m:    it "returns singular [0m[1m[31mform[0m for 1 inspection" do
[0m[32m18[0m-      inspections = double("Inspections", count: 1)
[0m[32m19[0m-      user = double("User", inspections: inspections)
--
[0m[32m21[0m-    end
[0m[32m22[0m-
[0m[32m23[0m:    it "returns plural [0m[1m[31mform[0m for 0 inspections" do
[0m[32m24[0m-      inspections = double("Inspections", count: 0)
[0m[32m25[0m-      user = double("User", inspections: inspections)
--
[0m[32m27[0m-    end
[0m[32m28[0m-
[0m[32m29[0m:    it "returns plural [0m[1m[31mform[0m for multiple inspections" do
[0m[32m30[0m-      inspections = double("Inspections", count: 5)
[0m[32m31[0m-      user = double("User", inspections: inspections)
--
[0m[32m34[0m-  end
[0m[32m35[0m-
[0m[32m36[0m:  describe "#[0m[1m[31mform[0mat_job_time" do
[0m[32m37[0m-    it "returns 'Never' for nil time" do
[0m[32m38[0m:      expect(helper.[0m[1m[31mform[0mat_job_time(nil)).to eq("Never")
[0m[32m39[0m-    end
[0m[32m40[0m-
[0m[32m41[0m:    it "[0m[1m[31mform[0mats time correctly" do
[0m[32m42[0m-      time = 2.hours.ago
[0m[32m43[0m:      expect(helper.[0m[1m[31mform[0mat_job_time(time)).to eq("about 2 hours ago")
[0m[32m44[0m-    end
[0m[32m45[0m-  end

[0m[35mconfig/locales/inspections.en.yml[0m
[0m[32m35[0m-      search: "Search Inspections"
[0m[32m36[0m-
[0m[32m37[0m:    [0m[1m[31mform[0ms:
[0m[32m38[0m-      search: "Search"
[0m[32m39[0m-
--
[0m[32m88[0m-      inspector_company_id: "Inspector Company"
[0m[32m89[0m-      inspector_company_prompt: "-- Select company (optional) --"
[0m[32m90[0m:      public_in[0m[1m[31mform[0mation: "Public In[0m[1m[31mform[0mation"
[0m[32m91[0m-      rpii_registration_number: "RPII Registration Number"
[0m[32m92[0m-      unique_report_number: "Internal ID"
--
[0m[32m112[0m-      calculated_after_save: "Will be calculated after saving"
[0m[32m113[0m-      reinspection_date_help: "Automatically calculated as one year after inspection date"
[0m[32m114[0m:      inspector_help: "Determined by the user per[0m[1m[31mform[0ming the inspection"
[0m[32m115[0m-      rpii_help: "From the selected inspector company"
[0m[32m116[0m-      status_help: "Use the buttons below to change inspection status"
--
[0m[32m163[0m-      dimensions_replace_confirm: "This will re-copy all dimensions from the unit to this inspection, replacing any existing dimension values. Are you sure you want to continue?"
[0m[32m164[0m-      no_unit_for_dimensions: "No unit selected for this inspection"
[0m[32m165[0m:      no_unit_description: "This inspection doesn't have a unit associated with it. Create a unit to link equipment in[0m[1m[31mform[0mation."
[0m[32m166[0m-      create_without_unit_confirm: 'This will create an inspection without an associated unit. If you''re inspecting a unit you have seen before, it''s faster to select the unit from the "Units" tab above and start the inspection from there. Continue?'
[0m[32m167[0m-      unnamed: "Unnamed"
--
[0m[32m205[0m-      anchor_status: "Current anchors: %{current} of %{required} required"
[0m[32m206[0m-      slide_requirements: "Slide Safety Requirements"
[0m[32m207[0m:      runout_requirement: "Minimum runout: %{required}m (50% of plat[0m[1m[31mform[0m height)"
[0m[32m208[0m-      runout_status: "Current runout: %{current}m"
[0m[32m209[0m-      user_capacity: "User Capacity"
--
[0m[32m214[0m-      capacity_1800mm: "1.8m users: %{count} (3.0m² per user)"
[0m[32m215[0m-      wall_height_requirements: "Wall Height Requirements"
[0m[32m216[0m:      wall_height_status: "Plat[0m[1m[31mform[0m %{plat[0m[1m[31mform[0m}m requires %{required}"
[0m[32m217[0m-      material_requirements: "Material Requirements"
[0m[32m218[0m-      fabric_strength: "Fabric must meet tensile strength requirements"

[0m[35mconfig/locales/units.en.yml[0m
[0m[32m36[0m-      filters: "Filter Units"
[0m[32m37[0m-      search: "Search Units"
[0m[32m38[0m:      basic_in[0m[1m[31mform[0mation: "Basic In[0m[1m[31mform[0mation"
[0m[32m39[0m-      unit_details: "Unit details"
[0m[32m40[0m-      basic_dimensions: "Basic dimensions"
--
[0m[32m163[0m-      copied: "Copied!"
[0m[32m164[0m-
[0m[32m165[0m:    [0m[1m[31mform[0ms:
[0m[32m166[0m-      search: "Search units..."

[0m[35mapp/helpers/users_helper.rb[0m
[0m[32m9[0m-  end
[0m[32m10[0m-
[0m[32m11[0m:  def [0m[1m[31mform[0mat_job_time(time)
[0m[32m12[0m-    return "Never" unless time
[0m[32m13[0m-    "#{time_ago_in_words(time)} ago"

[0m[35mapp/helpers/units_helper.rb[0m
[0m[32m20[0m-      {
[0m[32m21[0m-        label: I18n.t("units.buttons.pdf_report"),
[0m[32m22[0m:        url: unit_path(unit, [0m[1m[31mform[0mat: :pdf)
[0m[32m23[0m-      }
[0m[32m24[0m-    ]

[0m[35mconfig/locales/inspector_companies.en.yml[0m
[0m[32m10[0m-    headers:
[0m[32m11[0m-      company_details: "Company Details"
[0m[32m12[0m:      contact_in[0m[1m[31mform[0mation: "Contact In[0m[1m[31mform[0mation"
[0m[32m13[0m-      company_status: "Company Status"
[0m[32m14[0m-      company_statistics: "Company Statistics"
--
[0m[32m18[0m-      search_and_filter: "Search and Filter"
[0m[32m19[0m-
[0m[32m20[0m:    [0m[1m[31mform[0ms:
[0m[32m21[0m-      search: "Search"
[0m[32m22[0m-      active: "Active"

[0m[35mconfig/locales/users.en.yml[0m
[0m[32m23[0m-      password: "Password"
[0m[32m24[0m-
[0m[32m25[0m:    [0m[1m[31mform[0ms:
[0m[32m26[0m-      email: "Email"
[0m[32m27[0m-      password: "Password"

[0m[35mapp/helpers/inspections_helper.rb[0m
[0m[32m1[0m-module InspectionsHelper
[0m[32m2[0m:  def [0m[1m[31mform[0mat_inspection_count(user)
[0m[32m3[0m-    count = user.inspections.count
[0m[32m4[0m-    t("inspections.count", count: count)
--
[0m[32m72[0m-
[0m[32m73[0m-  def tab_name_with_check(inspection, tab)
[0m[32m74[0m:    name = t("[0m[1m[31mform[0ms.#{tab}.header")
[0m[32m75[0m-    assessment_complete?(inspection, tab) ? "#{name} ✓" : name
[0m[32m76[0m-  end

[0m[35mapp/helpers/application_helper.rb[0m
[0m[32m4[0m-  def render_time(datetime) = datetime&.strftime("%b %d, %Y")
[0m[32m5[0m-
[0m[32m6[0m:  def date_for_[0m[1m[31mform[0m(datetime) = datetime&.to_date
[0m[32m7[0m-
[0m[32m8[0m-  def scrollable_table(html_options = {}, &block)
--
[0m[32m34[0m-  end
[0m[32m35[0m-
[0m[32m36[0m:  def [0m[1m[31mform[0m_field_setup(field, local_assigns)
[0m[32m37[0m-    locally_assigned_keys = (local_assigns || {}).keys
[0m[32m38[0m-    disallowed_keys = locally_assigned_keys - ALLOWED_LOCAL_ASSIGNS
--
[0m[32m43[0m-
[0m[32m44[0m-    i18n_base = @_current_i18n_base
[0m[32m45[0m:    [0m[1m[31mform[0m_object = @_current_[0m[1m[31mform[0m
[0m[32m46[0m-
[0m[32m47[0m-    raise ArgumentError, "missing i18n_base" unless i18n_base
[0m[32m48[0m:    raise ArgumentError, "missing [0m[1m[31mform[0m_object" unless [0m[1m[31mform[0m_object
[0m[32m49[0m-
[0m[32m50[0m-    fields_key = "#{i18n_base}.fields.#{field}"
--
[0m[32m61[0m-
[0m[32m62[0m-    value, prefilled = get_field_value_and_prefilled_status(
[0m[32m63[0m:      [0m[1m[31mform[0m_object,
[0m[32m64[0m-      field
[0m[32m65[0m-    )
[0m[32m66[0m-
[0m[32m67[0m-    {
[0m[32m68[0m:      [0m[1m[31mform[0m_object:,
[0m[32m69[0m-      i18n_base:,
[0m[32m70[0m-      field_label:,
--
[0m[32m76[0m-  end
[0m[32m77[0m-
[0m[32m78[0m:  def get_field_value_and_prefilled_status([0m[1m[31mform[0m_object, field)
[0m[32m79[0m:    return [nil, false] unless [0m[1m[31mform[0m_object&.object
[0m[32m80[0m:    model = [0m[1m[31mform[0m_object.object
[0m[32m81[0m-    resolved = resolve_field_value(model, field)
[0m[32m82[0m-    [resolved[:value], resolved[:prefilled]]
[0m[32m83[0m-  end
[0m[32m84[0m-
[0m[32m85[0m:  def [0m[1m[31mform[0mat_numeric_value(value)
[0m[32m86[0m-    if value.is_a?(String) &&
[0m[32m87[0m-        value.match?(/\A-?\d*\.?\d+\z/) &&
--
[0m[32m127[0m-    if actual_current_value.nil? && !previous_value.nil?
[0m[32m128[0m-      {
[0m[32m129[0m:        value: [0m[1m[31mform[0mat_numeric_value(previous_value),
[0m[32m130[0m-        prefilled: !previous_value.nil?
[0m[32m131[0m-      }
[0m[32m132[0m-    else
[0m[32m133[0m-      {
[0m[32m134[0m:        value: [0m[1m[31mform[0mat_numeric_value(actual_current_value),
[0m[32m135[0m-        prefilled: false
[0m[32m136[0m-      }
--
[0m[32m150[0m-  end
[0m[32m151[0m-
[0m[32m152[0m:  def comment_field_options([0m[1m[31mform[0m, comment_field, base_field_label)
[0m[32m153[0m:    model = [0m[1m[31mform[0m.object
[0m[32m154[0m-    comment_value, comment_prefilled =
[0m[32m155[0m-      get_field_value_and_prefilled_status(
[0m[32m156[0m:        [0m[1m[31mform[0m,
[0m[32m157[0m-        comment_field
[0m[32m158[0m-      )

[0m[35mconfig/locales/forms/inspector_companies.en.yml[0m
[0m[32m1[0m-en:
[0m[32m2[0m:  [0m[1m[31mform[0ms:
[0m[32m3[0m-    inspector_companies:
[0m[32m4[0m-      header: "Inspector Company Form"
[0m[32m5[0m-      sections:
[0m[32m6[0m-        company_details: "Company Details"
[0m[32m7[0m:        contact_in[0m[1m[31mform[0mation: "Contact In[0m[1m[31mform[0mation"
[0m[32m8[0m-        company_status: "Company Status"
[0m[32m9[0m-      fields:

[0m[35mconfig/locales/forms/user_change_password.en.yml[0m
[0m[32m1[0m-en:
[0m[32m2[0m:  [0m[1m[31mform[0ms:
[0m[32m3[0m-    user_change_password:
[0m[32m4[0m-      header: "Change Password"

[0m[35mconfig/locales/forms/enclosed.en.yml[0m
[0m[32m1[0m-en:
[0m[32m2[0m:  [0m[1m[31mform[0ms:
[0m[32m3[0m-    enclosed:
[0m[32m4[0m-      header: "Totally Enclosed"

[0m[35mconfig/locales/forms/user_height.en.yml[0m
[0m[32m1[0m-en:
[0m[32m2[0m:  [0m[1m[31mform[0ms:
[0m[32m3[0m-    user_height:
[0m[32m4[0m-      header: "User Height/Count"
--
[0m[32m9[0m-      fields:
[0m[32m10[0m-        containing_wall_height: "Containing Wall Height"
[0m[32m11[0m:        plat[0m[1m[31mform[0m_height: "Plat[0m[1m[31mform[0m Height (m)"
[0m[32m12[0m-        tallest_user_height: "Tallest User Height (m)"
[0m[32m13[0m-        users_at_1000mm: "Users at 1m"
--
[0m[32m24[0m-      hints:
[0m[32m25[0m-        containing_wall_height: "Height of the containing wall from ground level (meters)"
[0m[32m26[0m:        plat[0m[1m[31mform[0m_height: "Height of the plat[0m[1m[31mform[0m from ground level (meters)"
[0m[32m27[0m-        tallest_user_height: "Maximum tallest user height allowed (meters)"
[0m[32m28[0m-        play_area_dimension: "Internal dimensions of the play area (meters)"
--
[0m[32m38[0m-          other: "%{count} errors prevented this assessment from being saved:"
[0m[32m39[0m-        containing_wall_height_negative: "Containing wall height must be greater than or equal to 0"
[0m[32m40[0m:        plat[0m[1m[31mform[0m_height_negative: "Plat[0m[1m[31mform[0m height must be greater than or equal to 0"
[0m[32m41[0m-        tallest_user_height_negative: "Tallest user height must be greater than or equal to 0"
[0m[32m42[0m-        users_at_1000mm_negative: "Users at 1m must be greater than or equal to 0"

[0m[35mspec/helpers/application_helper_spec.rb[0m
[0m[32m16[0m-      end
[0m[32m17[0m-
[0m[32m18[0m:      it "uses default date [0m[1m[31mform[0mat" do
[0m[32m19[0m-        expect(helper.render_time(test_datetime)).to eq("Jun 06, 2025")
[0m[32m20[0m-      end
--
[0m[32m28[0m-      end
[0m[32m29[0m-
[0m[32m30[0m:      it "[0m[1m[31mform[0mats datetime with date only" do
[0m[32m31[0m-        expect(helper.render_time(test_datetime)).to eq("Jun 06, 2025")
[0m[32m32[0m-      end
--
[0m[32m34[0m-  end
[0m[32m35[0m-
[0m[32m36[0m:  describe "#date_for_[0m[1m[31mform[0m" do
[0m[32m37[0m-    context "when datetime is nil" do
[0m[32m38[0m-      it "returns nil" do
[0m[32m39[0m:        expect(helper.date_for_[0m[1m[31mform[0m(nil)).to be_nil
[0m[32m40[0m-      end
[0m[32m41[0m-    end
--
[0m[32m47[0m-
[0m[32m48[0m-      it "returns date only" do
[0m[32m49[0m:        result = helper.date_for_[0m[1m[31mform[0m(test_datetime)
[0m[32m50[0m-        expect(result).to eq(test_datetime.to_date)
[0m[32m51[0m-        expect(result).to be_a(Date)
--
[0m[32m61[0m-
[0m[32m62[0m-      it "returns date only" do
[0m[32m63[0m:        result = helper.date_for_[0m[1m[31mform[0m(test_datetime)
[0m[32m64[0m-        expect(result).to eq(test_datetime.to_date)
[0m[32m65[0m-        expect(result).to be_a(Date)
--
[0m[32m120[0m-  end
[0m[32m121[0m-
[0m[32m122[0m:  describe "#[0m[1m[31mform[0m_field_setup" do
[0m[32m123[0m:    let(:mock_[0m[1m[31mform[0m) { double("FormBuilder", object: nil) }
[0m[32m124[0m-    let(:field) { :name }
[0m[32m125[0m-    let(:local_assigns) { {} }
[0m[32m126[0m:    let(:result) { helper.[0m[1m[31mform[0m_field_setup(field, local_assigns) }
[0m[32m127[0m-
[0m[32m128[0m-    def mock_translations(label_key, label_value, hint_value = nil, placeholder_value = nil)
--
[0m[32m132[0m-    end
[0m[32m133[0m-
[0m[32m134[0m:    shared_examples "detects [0m[1m[31mform[0m object and i18n base" do |expected_i18n_base|
[0m[32m135[0m:      it "detects [0m[1m[31mform[0m object correctly" do
[0m[32m136[0m:        expect(result[:[0m[1m[31mform[0m_object]).to eq(mock_[0m[1m[31mform[0m)
[0m[32m137[0m-      end
[0m[32m138[0m-
--
[0m[32m152[0m-    context "with proper setup using instance variables" do
[0m[32m153[0m-      before do
[0m[32m154[0m:        helper.instance_variable_set(:@_current_[0m[1m[31mform[0m, mock_[0m[1m[31mform[0m)
[0m[32m155[0m:        helper.instance_variable_set(:@_current_i18n_base, "inspector_companies.[0m[1m[31mform[0ms")
[0m[32m156[0m-      end
[0m[32m157[0m-
[0m[32m158[0m:      include_examples "detects [0m[1m[31mform[0m object and i18n base", "inspector_companies.[0m[1m[31mform[0ms"
[0m[32m159[0m:      include_examples "uses correct label key and value", "inspector_companies.[0m[1m[31mform[0ms.fields.name", "Company Name"
[0m[32m160[0m-    end
[0m[32m161[0m-
[0m[32m162[0m:    context "when [0m[1m[31mform[0m is passed in local_assigns" do
[0m[32m163[0m:      let(:local_assigns) { {[0m[1m[31mform[0m: mock_[0m[1m[31mform[0m} }
[0m[32m164[0m-
[0m[32m165[0m-      before do
[0m[32m166[0m:        helper.instance_variable_set(:@_current_[0m[1m[31mform[0m, mock_[0m[1m[31mform[0m)
[0m[32m167[0m:        helper.instance_variable_set(:@_current_i18n_base, "[0m[1m[31mform[0ms.test")
[0m[32m168[0m-      end
[0m[32m169[0m-
[0m[32m170[0m-      it "raises ArgumentError about disallowed keys" do
[0m[32m171[0m:        expect { result }.to raise_error(ArgumentError, "local_assigns contains [:[0m[1m[31mform[0m]")
[0m[32m172[0m-      end
[0m[32m173[0m-    end
--
[0m[32m177[0m-
[0m[32m178[0m-      before do
[0m[32m179[0m:        helper.instance_variable_set(:@_current_[0m[1m[31mform[0m, mock_[0m[1m[31mform[0m)
[0m[32m180[0m:        helper.instance_variable_set(:@_current_i18n_base, "[0m[1m[31mform[0ms.test")
[0m[32m181[0m-      end
[0m[32m182[0m-
--
[0m[32m186[0m-    end
[0m[32m187[0m-
[0m[32m188[0m:    context "when both [0m[1m[31mform[0m and i18n_base are passed in local_assigns" do
[0m[32m189[0m:      let(:local_assigns) { {[0m[1m[31mform[0m: mock_[0m[1m[31mform[0m, i18n_base: "inspections.fields"} }
[0m[32m190[0m-
[0m[32m191[0m-      before do
[0m[32m192[0m:        helper.instance_variable_set(:@_current_[0m[1m[31mform[0m, mock_[0m[1m[31mform[0m)
[0m[32m193[0m:        helper.instance_variable_set(:@_current_i18n_base, "[0m[1m[31mform[0ms.test")
[0m[32m194[0m-      end
[0m[32m195[0m-
[0m[32m196[0m-      it "raises ArgumentError about disallowed keys" do
[0m[32m197[0m:        expect { result }.to raise_error(ArgumentError, "local_assigns contains [:[0m[1m[31mform[0m, :i18n_base]")
[0m[32m198[0m-      end
[0m[32m199[0m-    end
--
[0m[32m203[0m-
[0m[32m204[0m-      before do
[0m[32m205[0m:        helper.instance_variable_set(:@_current_[0m[1m[31mform[0m, mock_[0m[1m[31mform[0m)
[0m[32m206[0m:        helper.instance_variable_set(:@_current_i18n_base, "inspector_companies.[0m[1m[31mform[0ms")
[0m[32m207[0m-      end
[0m[32m208[0m-
--
[0m[32m214[0m-    context "hint and placeholder handling" do
[0m[32m215[0m-      before do
[0m[32m216[0m:        helper.instance_variable_set(:@_current_[0m[1m[31mform[0m, mock_[0m[1m[31mform[0m)
[0m[32m217[0m:        helper.instance_variable_set(:@_current_i18n_base, "inspector_companies.[0m[1m[31mform[0ms")
[0m[32m218[0m-      end
[0m[32m219[0m-
[0m[32m220[0m-      it "looks up hints and placeholders when present" do
[0m[32m221[0m:        mock_translations("inspector_companies.[0m[1m[31mform[0ms.fields.name", "Company Name", "Enter company name", "e.g. Acme Corp")
[0m[32m222[0m-
[0m[32m223[0m-        expect(result[:field_hint]).to eq("Enter company name")
--
[0m[32m226[0m-
[0m[32m227[0m-      it "returns nil for missing hints and placeholders" do
[0m[32m228[0m:        mock_translations("inspector_companies.[0m[1m[31mform[0ms.fields.name", "Company Name", nil, nil)
[0m[32m229[0m-
[0m[32m230[0m-        expect(result[:field_hint]).to be_nil
--
[0m[32m235[0m-    context "without @_current_i18n_base" do
[0m[32m236[0m-      before do
[0m[32m237[0m:        helper.instance_variable_set(:@_current_[0m[1m[31mform[0m, mock_[0m[1m[31mform[0m)
[0m[32m238[0m-        helper.instance_variable_set(:@_current_i18n_base, nil)
[0m[32m239[0m-      end
--
[0m[32m244[0m-    end
[0m[32m245[0m-
[0m[32m246[0m:    context "without @_current_[0m[1m[31mform[0m" do
[0m[32m247[0m-      before do
[0m[32m248[0m:        helper.instance_variable_set(:@_current_[0m[1m[31mform[0m, nil)
[0m[32m249[0m:        helper.instance_variable_set(:@_current_i18n_base, "[0m[1m[31mform[0ms.test")
[0m[32m250[0m-      end
[0m[32m251[0m-
[0m[32m252[0m-      it "raises ArgumentError" do
[0m[32m253[0m:        expect { result }.to raise_error(ArgumentError, "missing [0m[1m[31mform[0m_object")
[0m[32m254[0m-      end
[0m[32m255[0m-    end
--
[0m[32m257[0m-    context "with missing i18n translation" do
[0m[32m258[0m-      before do
[0m[32m259[0m:        helper.instance_variable_set(:@_current_[0m[1m[31mform[0m, mock_[0m[1m[31mform[0m)
[0m[32m260[0m:        helper.instance_variable_set(:@_current_i18n_base, "[0m[1m[31mform[0ms.test")
[0m[32m261[0m:        allow(helper).to receive(:t).with("[0m[1m[31mform[0ms.test.fields.name", raise: true).and_raise(I18n::MissingTranslationData.new(:en, "[0m[1m[31mform[0ms.test.fields.name"))
[0m[32m262[0m-      end
[0m[32m263[0m-
--
[0m[32m271[0m-
[0m[32m272[0m-      before do
[0m[32m273[0m:        helper.instance_variable_set(:@_current_[0m[1m[31mform[0m, mock_[0m[1m[31mform[0m)
[0m[32m274[0m:        helper.instance_variable_set(:@_current_i18n_base, "[0m[1m[31mform[0ms.test")
[0m[32m275[0m:        mock_translations("[0m[1m[31mform[0ms.test.fields.name", "Test Name")
[0m[32m276[0m-      end
[0m[32m277[0m-
--
[0m[32m282[0m-
[0m[32m283[0m-    context "with mixed allowed and disallowed keys" do
[0m[32m284[0m:      let(:local_assigns) { {min: 0, max: 100, [0m[1m[31mform[0m: mock_[0m[1m[31mform[0m} }
[0m[32m285[0m-
[0m[32m286[0m-      before do
[0m[32m287[0m:        helper.instance_variable_set(:@_current_[0m[1m[31mform[0m, mock_[0m[1m[31mform[0m)
[0m[32m288[0m:        helper.instance_variable_set(:@_current_i18n_base, "[0m[1m[31mform[0ms.test")
[0m[32m289[0m-      end
[0m[32m290[0m-
[0m[32m291[0m-      it "raises error only for disallowed keys" do
[0m[32m292[0m:        expect { result }.to raise_error(ArgumentError, "local_assigns contains [:[0m[1m[31mform[0m]")
[0m[32m293[0m-      end
[0m[32m294[0m-    end
[0m[32m295[0m-
[0m[32m296[0m-    context "with multiple disallowed keys including label" do
[0m[32m297[0m:      let(:local_assigns) { {label: "Custom", i18n_base: "test", [0m[1m[31mform[0m: mock_[0m[1m[31mform[0m} }
[0m[32m298[0m-
[0m[32m299[0m-      before do
[0m[32m300[0m:        helper.instance_variable_set(:@_current_[0m[1m[31mform[0m, mock_[0m[1m[31mform[0m)
[0m[32m301[0m:        helper.instance_variable_set(:@_current_i18n_base, "[0m[1m[31mform[0ms.test")
[0m[32m302[0m-      end
[0m[32m303[0m-
[0m[32m304[0m-      it "raises error listing all disallowed keys" do
[0m[32m305[0m:        expect { result }.to raise_error(ArgumentError, "local_assigns contains [:label, :i18n_base, :[0m[1m[31mform[0m]")
[0m[32m306[0m-      end
[0m[32m307[0m-    end
[0m[32m308[0m-  end
[0m[32m309[0m-
[0m[32m310[0m:  describe "#[0m[1m[31mform[0mat_numeric_value" do
[0m[32m311[0m-    context "with numeric values" do
[0m[32m312[0m-      it "removes trailing zeros from decimal values" do
[0m[32m313[0m:        expect(helper.[0m[1m[31mform[0mat_numeric_value(5.0)).to eq("5")
[0m[32m314[0m:        expect(helper.[0m[1m[31mform[0mat_numeric_value(5.10)).to eq("5.1")
[0m[32m315[0m:        expect(helper.[0m[1m[31mform[0mat_numeric_value(5.012000)).to eq("5.012")
[0m[32m316[0m:        expect(helper.[0m[1m[31mform[0mat_numeric_value(-3.50)).to eq("-3.5")
[0m[32m317[0m-      end
[0m[32m318[0m-
[0m[32m319[0m-      it "preserves significant digits" do
[0m[32m320[0m:        expect(helper.[0m[1m[31mform[0mat_numeric_value(5.123)).to eq("5.123")
[0m[32m321[0m:        expect(helper.[0m[1m[31mform[0mat_numeric_value(0.5)).to eq("0.5")
[0m[32m322[0m:        expect(helper.[0m[1m[31mform[0mat_numeric_value(-0.25)).to eq("-0.25")
[0m[32m323[0m-      end
[0m[32m324[0m-
[0m[32m325[0m-      it "handles integers" do
[0m[32m326[0m:        expect(helper.[0m[1m[31mform[0mat_numeric_value(5)).to eq("5")
[0m[32m327[0m:        expect(helper.[0m[1m[31mform[0mat_numeric_value(-10)).to eq("-10")
[0m[32m328[0m:        expect(helper.[0m[1m[31mform[0mat_numeric_value(0)).to eq("0")
[0m[32m329[0m-      end
[0m[32m330[0m-    end
[0m[32m331[0m-
[0m[32m332[0m-    context "with string values" do
[0m[32m333[0m:      it "[0m[1m[31mform[0mats valid numeric strings" do
[0m[32m334[0m:        expect(helper.[0m[1m[31mform[0mat_numeric_value("5.0")).to eq("5")
[0m[32m335[0m:        expect(helper.[0m[1m[31mform[0mat_numeric_value("5.012000")).to eq("5.012")
[0m[32m336[0m:        expect(helper.[0m[1m[31mform[0mat_numeric_value("-3.50")).to eq("-3.5")
[0m[32m337[0m:        expect(helper.[0m[1m[31mform[0mat_numeric_value("0.5")).to eq("0.5")
[0m[32m338[0m-      end
[0m[32m339[0m-
[0m[32m340[0m-      it "handles integer strings" do
[0m[32m341[0m:        expect(helper.[0m[1m[31mform[0mat_numeric_value("5")).to eq("5")
[0m[32m342[0m:        expect(helper.[0m[1m[31mform[0mat_numeric_value("-10")).to eq("-10")
[0m[32m343[0m-      end
[0m[32m344[0m-
[0m[32m345[0m-      it "returns non-numeric strings unchanged" do
[0m[32m346[0m:        expect(helper.[0m[1m[31mform[0mat_numeric_value("not a number")).to eq("not a number")
[0m[32m347[0m:        expect(helper.[0m[1m[31mform[0mat_numeric_value("abc123")).to eq("abc123")
[0m[32m348[0m:        expect(helper.[0m[1m[31mform[0mat_numeric_value("")).to eq("")
[0m[32m349[0m-      end
[0m[32m350[0m-    end
--
[0m[32m352[0m-    context "with nil and other types" do
[0m[32m353[0m-      it "returns nil unchanged" do
[0m[32m354[0m:        expect(helper.[0m[1m[31mform[0mat_numeric_value(nil)).to eq(nil)
[0m[32m355[0m-      end
[0m[32m356[0m-
[0m[32m357[0m-      it "returns other types unchanged" do
[0m[32m358[0m:        expect(helper.[0m[1m[31mform[0mat_numeric_value(true)).to eq(true)
[0m[32m359[0m:        expect(helper.[0m[1m[31mform[0mat_numeric_value(false)).to eq(false)
[0m[32m360[0m:        expect(helper.[0m[1m[31mform[0mat_numeric_value([])).to eq([])
[0m[32m361[0m:        expect(helper.[0m[1m[31mform[0mat_numeric_value({})).to eq({})
[0m[32m362[0m-      end
[0m[32m363[0m-    end
--
[0m[32m365[0m-    context "with edge cases" do
[0m[32m366[0m-      it "handles very small numbers" do
[0m[32m367[0m:        expect(helper.[0m[1m[31mform[0mat_numeric_value(0.001)).to eq("0.001")
[0m[32m368[0m:        expect(helper.[0m[1m[31mform[0mat_numeric_value(0.0010)).to eq("0.001")
[0m[32m369[0m-      end
[0m[32m370[0m-
[0m[32m371[0m-      it "handles very large numbers" do
[0m[32m372[0m:        expect(helper.[0m[1m[31mform[0mat_numeric_value(1000000.0)).to eq("1000000")
[0m[32m373[0m:        expect(helper.[0m[1m[31mform[0mat_numeric_value(1000000.50)).to eq("1000000.5")
[0m[32m374[0m-      end
[0m[32m375[0m-
[0m[32m376[0m-      it "handles scientific notation conversion" do
[0m[32m377[0m-        # Ruby may convert very large/small numbers to scientific notation
[0m[32m378[0m:        # Our [0m[1m[31mform[0matter should handle the string representation correctly
[0m[32m379[0m-        large_num = 1e10
[0m[32m380[0m:        expect(helper.[0m[1m[31mform[0mat_numeric_value(large_num)).to be_a(String)
[0m[32m381[0m-      end
[0m[32m382[0m-    end

[0m[35mapp/models/user.rb[0m
[0m[32m14[0m-    presence: true,
[0m[32m15[0m-    uniqueness: true,
[0m[32m16[0m:    [0m[1m[31mform[0mat: {with: URI::MailTo::EMAIL_REGEXP}
[0m[32m17[0m-
[0m[32m18[0m-  validates :password,

[0m[35mspec/helpers/sessions_helper_spec.rb[0m
[0m[32m175[0m-
[0m[32m176[0m-    it "safely handles cookie tampering attempts" do
[0m[32m177[0m:      # Set an invalid [0m[1m[31mform[0mat for the cookie that might cause errors if not handled properly
[0m[32m178[0m-      cookies.signed[:user_id] = "not_an_integer"
[0m[32m179[0m-

[0m[35mconfig/locales/forms/materials.en.yml[0m
[0m[32m1[0m-en:
[0m[32m2[0m:  [0m[1m[31mform[0ms:
[0m[32m3[0m-    materials:
[0m[32m4[0m-      header: "Materials"

[0m[35mspec/helpers/inspections_helper_spec.rb[0m
[0m[32m2[0m-
[0m[32m3[0m-RSpec.describe InspectionsHelper, type: :helper do
[0m[32m4[0m:  describe "#[0m[1m[31mform[0mat_inspection_count" do
[0m[32m5[0m:    it "[0m[1m[31mform[0mats the inspection count" do
[0m[32m6[0m-      user = double("User", inspections: double("Inspections", count: 5))
[0m[32m7[0m:      expect(helper.[0m[1m[31mform[0mat_inspection_count(user)).to eq("5 inspections")
[0m[32m8[0m-    end
[0m[32m9[0m-  end

[0m[35mconfig/locales/home.en.yml[0m
[0m[32m39[0m-    key_features:
[0m[32m40[0m-      title: "Key Features"
[0m[32m41[0m:      content: "Track equipment with serial numbers and dimensions. Per[0m[1m[31mform[0m seven comprehensive safety assessments including structure, anchorage, materials, electrical (PAT), slide safety, user height, and enclosed unit checks. Automatically calculate pass/fail status based on EN 14960:2019 requirements. Generate PDF inspection reports with QR codes for easy client access. Manage multiple inspection companies with data isolation. Access from any device with progressive web app support."
[0m[32m42[0m-    
[0m[32m43[0m-    attribution:

[0m[35mconfig/locales/forms/slide.en.yml[0m
[0m[32m1[0m-en:
[0m[32m2[0m:  [0m[1m[31mform[0ms:
[0m[32m3[0m-    slide:
[0m[32m4[0m-      header: "Slide"
--
[0m[32m6[0m-        slide_dimensions: "Slide Measurements"
[0m[32m7[0m-      fields:
[0m[32m8[0m:        slide_plat[0m[1m[31mform[0m_height: "Slide Plat[0m[1m[31mform[0m Height (m)"
[0m[32m9[0m-        slide_wall_height: "Containing Wall Height (m)"
[0m[32m10[0m-        slide_first_metre_height: "First Metre of Slide Containing Wall Height (m)"

[0m[35mconfig/locales/seed_data.en.yml[0m
[0m[32m13[0m-      soft_play: "Enclosed soft play area ideal for younger children"
[0m[32m14[0m-      assault_course: "Challenging obstacle course for active play"
[0m[32m15[0m:      gladiator: "Interactive duel plat[0m[1m[31mform[0m for competitive games"
[0m[32m16[0m-      bungee_run: "Two-lane bungee run for racing fun"
[0m[32m17[0m-      default: "Quality inflatable entertainment unit"
--
[0m[32m52[0m-      capacity_review: "Review user capacity - exceeds recommended limits"
[0m[32m53[0m-      wall_measured: "Measured from base to top of wall"
[0m[32m54[0m:      plat[0m[1m[31mform[0m_acceptable: "Plat[0m[1m[31mform[0m height acceptable for age group"
[0m[32m55[0m-      play_area_deducted: "Effective play area after deducting obstacles"
[0m[32m56[0m-      play_area_narrowest: "Width measured at narrowest point"
[0m[32m57[0m:      plat[0m[1m[31mform[0m_compliant: "Plat[0m[1m[31mform[0m height compliant with EN 14960:2019"
[0m[32m58[0m:      plat[0m[1m[31mform[0m_exceeds: "Plat[0m[1m[31mform[0m height exceeds recommended limits"
[0m[32m59[0m-      wall_from_bed: "Wall height measured from slide bed"
[0m[32m60[0m-      runout_clear: "Runout area clear and adequate"

[0m[35mconfig/locales/forms/user_new.en.yml[0m
[0m[32m1[0m-en:
[0m[32m2[0m:  [0m[1m[31mform[0ms:
[0m[32m3[0m-    user_new:
[0m[32m4[0m-      header: "Register"

[0m[35mconfig/locales/forms/inspection.en.yml[0m
[0m[32m1[0m-en:
[0m[32m2[0m:  [0m[1m[31mform[0ms:
[0m[32m3[0m-    inspection:
[0m[32m4[0m-      header: "General"
[0m[32m5[0m-      sections:
[0m[32m6[0m-        current_unit: "Current Unit"
[0m[32m7[0m:        public_in[0m[1m[31mform[0mation: "Public In[0m[1m[31mform[0mation"
[0m[32m8[0m-        inspection_details: "Inspection Details"
[0m[32m9[0m-        unit_dimensions: "Unit Dimensions"

[0m[35mapp/models/inspection.rb[0m
[0m[32m231[0m-        # Get the assessment type without "_assessment" suffix
[0m[32m232[0m-        assessment_type = assessment_key.to_s.sub("_assessment", "")
[0m[32m233[0m:        # Get the name from the [0m[1m[31mform[0m header
[0m[32m234[0m:        missing << I18n.t("[0m[1m[31mform[0ms.#{assessment_type}.header")
[0m[32m235[0m-      end
[0m[32m236[0m-    end
--
[0m[32m265[0m-  end
[0m[32m266[0m-
[0m[32m267[0m:  def field_label([0m[1m[31mform[0m, field)
[0m[32m268[0m:    key = "[0m[1m[31mform[0ms.#{[0m[1m[31mform[0m}.fields.#{field}"
[0m[32m269[0m-    # Try the field as-is first
[0m[32m270[0m-    label = I18n.t(key, default: nil)
--
[0m[32m272[0m-    if label.nil?
[0m[32m273[0m-      base_field = field.to_s.gsub(/_pass$|_comment$/, "")
[0m[32m274[0m:      label = I18n.t("[0m[1m[31mform[0ms.#{[0m[1m[31mform[0m}.fields.#{base_field}", default: nil)
[0m[32m275[0m-    end
[0m[32m276[0m-    # Try adding _pass suffix
--
[0m[32m310[0m-      output << {
[0m[32m311[0m-        tab: :inspection,
[0m[32m312[0m:        name: I18n.t("[0m[1m[31mform[0ms.inspection.header"),
[0m[32m313[0m-        fields: inspection_tab_fields
[0m[32m314[0m-      }
--
[0m[32m318[0m-      output << {
[0m[32m319[0m-        tab: :results,
[0m[32m320[0m:        name: I18n.t("[0m[1m[31mform[0ms.results.header"),
[0m[32m321[0m-        fields: results_fields
[0m[32m322[0m-      }
--
[0m[32m325[0m-    each_applicable_assessment do |assessment_key, _, assessment|
[0m[32m326[0m-      next unless assessment
[0m[32m327[0m:      [0m[1m[31mform[0m = assessment_key.to_s.gsub(/_assessment$/, "").to_sym
[0m[32m328[0m-      assessment_fields =
[0m[32m329[0m-        assessment.incomplete_fields
[0m[32m330[0m:          .map { |f| {field: f, label: field_label([0m[1m[31mform[0m, f)} }
[0m[32m331[0m-      if assessment_fields.any?
[0m[32m332[0m-        output << {
[0m[32m333[0m:          tab: [0m[1m[31mform[0m,
[0m[32m334[0m:          name: I18n.t("[0m[1m[31mform[0ms.inspection.header"),
[0m[32m335[0m-          fields: assessment_fields
[0m[32m336[0m-        }

[0m[35mconfig/locales/forms/session_new.en.yml[0m
[0m[32m1[0m-en:
[0m[32m2[0m:  [0m[1m[31mform[0ms:
[0m[32m3[0m-    session_new:
[0m[32m4[0m-      header: "Log in"

[0m[35mconfig/locales/forms/structure.en.yml[0m
[0m[32m1[0m-en:
[0m[32m2[0m:  [0m[1m[31mform[0ms:
[0m[32m3[0m-    structure:
[0m[32m4[0m-      header: "Structure"

[0m[35mconfig/locales/forms/user_edit.en.yml[0m
[0m[32m1[0m-en:
[0m[32m2[0m:  [0m[1m[31mform[0ms:
[0m[32m3[0m-    user_edit:
[0m[32m4[0m-      header: "Edit User"

[0m[35mconfig/locales/forms/safety_standards_wall_height.en.yml[0m
[0m[32m1[0m-en:
[0m[32m2[0m:  [0m[1m[31mform[0ms:
[0m[32m3[0m-    safety_standards_wall_height:
[0m[32m4[0m-      header: "Calculate Wall Height Requirements"

[0m[35mconfig/locales/forms/safety_standards_slide_runout.en.yml[0m
[0m[32m1[0m-en:
[0m[32m2[0m:  [0m[1m[31mform[0ms:
[0m[32m3[0m-    safety_standards_slide_runout:
[0m[32m4[0m-      header: "Calculate Required Runout Length"
[0m[32m5[0m-      fields:
[0m[32m6[0m:        plat[0m[1m[31mform[0m_height: "Plat[0m[1m[31mform[0m Height (m)"
[0m[32m7[0m-      submit: "Calculate Runout"

[0m[35mconfig/locales/forms/user_settings.en.yml[0m
[0m[32m1[0m-en:
[0m[32m2[0m:  [0m[1m[31mform[0ms:
[0m[32m3[0m-    user_settings:
[0m[32m4[0m-      header: "User Settings"

[0m[35mspec/views/inspector_companies/show.html.erb_spec.rb[0m
[0m[32m32[0m-    end
[0m[32m33[0m-
[0m[32m34[0m:    it "renders company in[0m[1m[31mform[0mation" do
[0m[32m35[0m-      render
[0m[32m36[0m-
--
[0m[32m63[0m-      render
[0m[32m64[0m-
[0m[32m65[0m:      expect(rendered).to have_content(I18n.t("inspector_companies.[0m[1m[31mform[0ms.notes"))
[0m[32m66[0m-      expect(rendered).to include("Test admin notes")
[0m[32m67[0m-    end
--
[0m[32m71[0m-      render
[0m[32m72[0m-
[0m[32m73[0m:      expect(rendered).not_to have_content(I18n.t("inspector_companies.[0m[1m[31mform[0ms.notes"))
[0m[32m74[0m-    end
[0m[32m75[0m-  end
--
[0m[32m80[0m-    end
[0m[32m81[0m-
[0m[32m82[0m:    it "renders company in[0m[1m[31mform[0mation without admin actions" do
[0m[32m83[0m-      render
[0m[32m84[0m-
--
[0m[32m92[0m-      render
[0m[32m93[0m-
[0m[32m94[0m:      expect(rendered).not_to have_content(I18n.t("inspector_companies.[0m[1m[31mform[0ms.notes"))
[0m[32m95[0m-      expect(rendered).not_to include("Secret admin notes")
[0m[32m96[0m-    end
--
[0m[32m100[0m-      render
[0m[32m101[0m-
[0m[32m102[0m:      expect(rendered).not_to have_content(I18n.t("inspector_companies.[0m[1m[31mform[0ms.notes"))
[0m[32m103[0m-    end
[0m[32m104[0m-  end

[0m[35mconfig/locales/forms/safety_standards_anchors.en.yml[0m
[0m[32m1[0m-en:
[0m[32m2[0m:  [0m[1m[31mform[0ms:
[0m[32m3[0m-    safety_standards_anchors:
[0m[32m4[0m-      header: "Calculate Required Anchors"

[0m[35mconfig/locales/forms/units.en.yml[0m
[0m[32m1[0m-en:
[0m[32m2[0m:  [0m[1m[31mform[0ms:
[0m[32m3[0m-    units:
[0m[32m4[0m-      header: "Unit Form"

[0m[35mconfig/locales/forms/anchorage.en.yml[0m
[0m[32m1[0m-en:
[0m[32m2[0m:  [0m[1m[31mform[0ms:
[0m[32m3[0m-    anchorage:
[0m[32m4[0m-      header: "Anchorage"

[0m[35mspec/views/inspector_companies/edit.html.erb_spec.rb[0m
[0m[32m9[0m-  end
[0m[32m10[0m-
[0m[32m11[0m:  it "renders edit inspector company [0m[1m[31mform[0m" do
[0m[32m12[0m-    render
[0m[32m13[0m-
--
[0m[32m15[0m-  end
[0m[32m16[0m-
[0m[32m17[0m:  it "pre-populates [0m[1m[31mform[0m fields with existing data" do
[0m[32m18[0m-    render
[0m[32m19[0m-
--
[0m[32m22[0m-  end
[0m[32m23[0m-
[0m[32m24[0m:  it "shows [0m[1m[31mform[0m for boolean fields" do
[0m[32m25[0m-    render
[0m[32m26[0m-
[0m[32m27[0m:    expect_[0m[1m[31mform[0m_field("inspector_company[active]", type: "checkbox")
[0m[32m28[0m-  end
[0m[32m29[0m-
[0m[32m30[0m:  it "includes [0m[1m[31mform[0m elements" do
[0m[32m31[0m-    render
[0m[32m32[0m-
[0m[32m33[0m:    expect_submit_button("[0m[1m[31mform[0ms.inspector_companies")
[0m[32m34[0m-  end
[0m[32m35[0m-
--
[0m[32m38[0m-    render
[0m[32m39[0m-
[0m[32m40[0m:    expect_i18n_content("[0m[1m[31mform[0ms.inspector_companies.fields.notes")
[0m[32m41[0m-    expect(rendered).to have_field("inspector_company[notes]", with: "Existing notes")
[0m[32m42[0m-  end

[0m[35mconfig/locales/forms/results.en.yml[0m
[0m[32m1[0m-en:
[0m[32m2[0m:  [0m[1m[31mform[0ms:
[0m[32m3[0m-    results:
[0m[32m4[0m-      header: "Results"

[0m[35mconfig/locales/forms/fan.en.yml[0m
[0m[32m1[0m-en:
[0m[32m2[0m:  [0m[1m[31mform[0ms:
[0m[32m3[0m-    fan:
[0m[32m4[0m-      header: "Fan/Blower"

[0m[35mspec/views/inspector_companies/index.html.erb_spec.rb[0m
[0m[32m47[0m-    end
[0m[32m48[0m-
[0m[32m49[0m:    it "includes search [0m[1m[31mform[0m" do
[0m[32m50[0m-      render
[0m[32m51[0m-

[0m[35mapp/models/assessments/user_height_assessment.rb[0m
[0m[32m13[0m-
[0m[32m14[0m-  validates :containing_wall_height,
[0m[32m15[0m:    :plat[0m[1m[31mform[0m_height, :tallest_user_height,
[0m[32m16[0m-    numericality: {greater_than_or_equal_to: 0},
[0m[32m17[0m-    allow_blank: true

[0m[35mspec/models/safety_standard_spec.rb[0m
[0m[32m85[0m-      end
[0m[32m86[0m-
[0m[32m87[0m:      it "returns false when plat[0m[1m[31mform[0m_height is nil" do
[0m[32m88[0m-        expect(SafetyStandard.meets_runout_requirements?(1.5, nil)).to be false
[0m[32m89[0m-      end
--
[0m[32m110[0m-  describe ".calculate_required_runout" do
[0m[32m111[0m-    context "with nil or invalid inputs" do
[0m[32m112[0m:      it "returns 0 for nil plat[0m[1m[31mform[0m_height" do
[0m[32m113[0m-        expect(SafetyStandard.calculate_required_runout(nil)).to eq(0)
[0m[32m114[0m-      end
[0m[32m115[0m-
[0m[32m116[0m:      it "returns 0 for zero or negative plat[0m[1m[31mform[0m_height" do
[0m[32m117[0m-        expect(SafetyStandard.calculate_required_runout(0)).to eq(0)
[0m[32m118[0m-        expect(SafetyStandard.calculate_required_runout(-1.0)).to eq(0)
--
[0m[32m121[0m-
[0m[32m122[0m-    context "with valid inputs" do
[0m[32m123[0m:      it "calculates 50% of plat[0m[1m[31mform[0m height" do
[0m[32m124[0m-        expect(SafetyStandard.calculate_required_runout(2.0)).to eq(1.0)
[0m[32m125[0m-        expect(SafetyStandard.calculate_required_runout(4.0)).to eq(2.0)
--
[0m[32m146[0m-
[0m[32m147[0m-    context "with valid inputs" do
[0m[32m148[0m:      it "calculates anchors using the [0m[1m[31mform[0mula (Area * 114 * 1.5) / 1600, rounded up" do
[0m[32m149[0m-        # For 25m²: (25 * 114 * 1.5) / 1600 = 4275 / 1600 = 2.671875 → 3
[0m[32m150[0m-        expect(SafetyStandard.calculate_required_anchors(25)).to eq(3)
--
[0m[32m169[0m-      # Total: (2 + 2) * 2 = 8
[0m[32m170[0m-      expect(result[:required_anchors]).to eq(8)
[0m[32m171[0m:      expect(result[:[0m[1m[31mform[0mula_breakdown]).to be_an(Array)
[0m[32m172[0m:      expect(result[:[0m[1m[31mform[0mula_breakdown].size).to eq(5)
[0m[32m173[0m-
[0m[32m174[0m-      # Check breakdown includes proper calculations
[0m[32m175[0m:      breakdown = result[:[0m[1m[31mform[0mula_breakdown]
[0m[32m176[0m-      expect(breakdown[0]).to eq(["Front/back area", "4m (W) × 3m (H) = 12m²"])
[0m[32m177[0m-      expect(breakdown[1]).to eq(["Sides area", "5m (L) × 3m (H) = 15m²"])
--
[0m[32m274[0m-  end
[0m[32m275[0m-
[0m[32m276[0m:  describe "in[0m[1m[31mform[0mational methods" do
[0m[32m277[0m-    describe ".slide_calculations" do
[0m[32m278[0m:      it "returns slide calculation in[0m[1m[31mform[0mation" do
[0m[32m279[0m-        result = SafetyStandard.slide_calculations
[0m[32m280[0m-

[0m[35mspec/views/inspector_companies/new.html.erb_spec.rb[0m
[0m[32m9[0m-  end
[0m[32m10[0m-
[0m[32m11[0m:  it "renders new inspector company [0m[1m[31mform[0m" do
[0m[32m12[0m-    render
[0m[32m13[0m-
--
[0m[32m20[0m-  end
[0m[32m21[0m-
[0m[32m22[0m:  it "includes [0m[1m[31mform[0m fields for company details" do
[0m[32m23[0m-    render
[0m[32m24[0m-
--
[0m[32m36[0m-
[0m[32m37[0m-    expect(rendered).to include("Active")
[0m[32m38[0m:    expect(rendered).to have_content(I18n.t("inspector_companies.[0m[1m[31mform[0ms.notes"))
[0m[32m39[0m-    expect(rendered).to have_field("inspector_company[notes]")
[0m[32m40[0m-  end
--
[0m[32m48[0m-  end
[0m[32m49[0m-
[0m[32m50[0m:  it "includes [0m[1m[31mform[0m actions" do
[0m[32m51[0m-    render
[0m[32m52[0m-
[0m[32m53[0m-    expect(rendered).to include('type="submit"')
[0m[32m54[0m:    expect(rendered).to include(I18n.t("[0m[1m[31mform[0ms.inspector_companies.submit"))
[0m[32m55[0m-  end
[0m[32m56[0m-

[0m[35mspec/models/user_spec.rb[0m
[0m[32m26[0m-    end
[0m[32m27[0m-
[0m[32m28[0m:    it "requires a valid email [0m[1m[31mform[0mat" do
[0m[32m29[0m-      user = build(:user, email: "invalid-email")
[0m[32m30[0m-      expect(user).not_to be_valid
--
[0m[32m95[0m-      expect(user.id).to be_a(String)
[0m[32m96[0m-
[0m[32m97[0m:      # Verify ID follows the expected [0m[1m[31mform[0mat (8 uppercase alphanumeric characters)
[0m[32m98[0m-      expect(user.id).to match(/\A[A-Z0-9]{8}\z/)
[0m[32m99[0m-

[0m[35mapp/models/assessments/slide_assessment.rb[0m
[0m[32m8[0m-  belongs_to :inspection
[0m[32m9[0m-
[0m[32m10[0m:  validates :slide_plat[0m[1m[31mform[0m_height,
[0m[32m11[0m-    :slide_wall_height,
[0m[32m12[0m-    :runout,
--
[0m[32m17[0m-
[0m[32m18[0m-  def meets_runout_requirements?
[0m[32m19[0m:    return false unless runout.present? && slide_plat[0m[1m[31mform[0m_height.present?
[0m[32m20[0m:    SafetyStandard.meets_runout_requirements?(runout, slide_plat[0m[1m[31mform[0m_height)
[0m[32m21[0m-  end
[0m[32m22[0m-
[0m[32m23[0m-  def required_runout_length
[0m[32m24[0m:    return nil unless slide_plat[0m[1m[31mform[0m_height.present?
[0m[32m25[0m:    SafetyStandard.calculate_required_runout(slide_plat[0m[1m[31mform[0m_height)
[0m[32m26[0m-  end
[0m[32m27[0m-
[0m[32m28[0m-  def runout_compliance_status
[0m[32m29[0m:    return I18n.t("[0m[1m[31mform[0ms.slide.compliance.not_assessed") unless runout.present?
[0m[32m30[0m-    if meets_runout_requirements?
[0m[32m31[0m:      I18n.t("[0m[1m[31mform[0ms.slide.compliance.compliant")
[0m[32m32[0m-    else
[0m[32m33[0m:      I18n.t("[0m[1m[31mform[0ms.slide.compliance.non_compliant", required: required_runout_length)
[0m[32m34[0m-    end
[0m[32m35[0m-  end

[0m[35mspec/controllers/inspections_controller_turbo_spec.rb[0m
[0m[32m11[0m-  end
[0m[32m12[0m-
[0m[32m13[0m:  describe "PATCH #update with Turbo Stream [0m[1m[31mform[0mat" do
[0m[32m14[0m:    context "turbo stream response [0m[1m[31mform[0mat" do
[0m[32m15[0m-      before do
[0m[32m16[0m-        request.headers["Accept"] = "text/vnd.turbo-stream.html"
--
[0m[32m80[0m-  end
[0m[32m81[0m-
[0m[32m82[0m:  describe "Multiple [0m[1m[31mform[0mat support" do
[0m[32m83[0m:    it "responds to HTML [0m[1m[31mform[0mat" do
[0m[32m84[0m-      patch :update, params: {id: inspection.id, inspection: {comments: "HTML update"}}
[0m[32m85[0m-
--
[0m[32m87[0m-    end
[0m[32m88[0m-
[0m[32m89[0m:    it "responds to JSON [0m[1m[31mform[0mat" do
[0m[32m90[0m-      request.headers["Accept"] = "application/json"
[0m[32m91[0m-
--
[0m[32m97[0m-    end
[0m[32m98[0m-
[0m[32m99[0m:    it "responds to Turbo Stream [0m[1m[31mform[0mat" do
[0m[32m100[0m-      request.headers["Accept"] = "text/vnd.turbo-stream.html"
[0m[32m101[0m-

[0m[35mapp/models/assessments/anchorage_assessment.rb[0m
[0m[32m44[0m-  def anchorage_breakdown
[0m[32m45[0m-    return [] unless inspection.volume
[0m[32m46[0m:    anchorage_result[:[0m[1m[31mform[0mula_breakdown]
[0m[32m47[0m-  end
[0m[32m48[0m-end

[0m[35mapp/models/inspector_company.rb[0m
[0m[32m9[0m-  # Validations
[0m[32m10[0m-  validates :name, presence: true
[0m[32m11[0m:  validates :email, [0m[1m[31mform[0mat: {with: URI::MailTo::EMAIL_REGEXP}, allow_blank: true
[0m[32m12[0m-  validates :phone, presence: true
[0m[32m13[0m-  validates :address, presence: true

[0m[35mspec/support/pdf_test_helpers.rb[0m
[0m[32m24[0m-  end
[0m[32m25[0m-
[0m[32m26[0m:  # Verify PDF response headers and [0m[1m[31mform[0mat
[0m[32m27[0m-  def verify_pdf_response
[0m[32m28[0m-    expect(page.driver.response.headers["Content-Type"]).to eq("application/pdf")
--
[0m[32m65[0m-      # Get the i18n key for this assessment
[0m[32m66[0m-      assessment_type = assessment_key.to_s.sub(/_assessment$/, "")
[0m[32m67[0m:      # No special mapping needed - [0m[1m[31mform[0m names match assessment types
[0m[32m68[0m-
[0m[32m69[0m-      # Check header is present
[0m[32m70[0m:      header = I18n.t("[0m[1m[31mform[0ms.#{assessment_type}.header")
[0m[32m71[0m-      expect(pdf_text).to include(header)
[0m[32m72[0m-
[0m[32m73[0m-      # Get ALL field labels from i18n and verify each one appears
[0m[32m74[0m:      fields = I18n.t("[0m[1m[31mform[0ms.#{assessment_type}.fields")
[0m[32m75[0m-
[0m[32m76[0m-      # Group fields to understand which are rendered together

[0m[35mspec/views/sessions/new.html.erb_spec.rb[0m
[0m[32m2[0m-
[0m[32m3[0m-RSpec.describe "sessions/new.html.erb", type: :view do
[0m[32m4[0m:  it "renders login [0m[1m[31mform[0m" do
[0m[32m5[0m-    render
[0m[32m6[0m-
[0m[32m7[0m:    # Use helper to verify entire [0m[1m[31mform[0m matches i18n structure
[0m[32m8[0m:    expect_standard_[0m[1m[31mform[0m_structure("[0m[1m[31mform[0ms.session_new")
[0m[32m9[0m-  end
[0m[32m10[0m-
--
[0m[32m12[0m-    render
[0m[32m13[0m-
[0m[32m14[0m:    expect(rendered).to have_content(I18n.t("[0m[1m[31mform[0ms.session_new.header"))
[0m[32m15[0m-  end
[0m[32m16[0m-
--
[0m[32m18[0m-    render
[0m[32m19[0m-
[0m[32m20[0m:    expect(rendered).to have_content(I18n.t("[0m[1m[31mform[0ms.session_new.fields.remember_me"))
[0m[32m21[0m-    expect(rendered).to have_field(type: "checkbox")
[0m[32m22[0m-  end
--
[0m[32m34[0m-  end
[0m[32m35[0m-
[0m[32m36[0m:  it "includes [0m[1m[31mform[0m structure" do
[0m[32m37[0m-    render
[0m[32m38[0m-

[0m[35mspec/support/inspection_test_helpers.rb[0m
[0m[32m5[0m-  include FormHelpers
[0m[32m6[0m-
[0m[32m7[0m:  # Button clicks - these are specific to inspections, not generic [0m[1m[31mform[0m buttons
[0m[32m8[0m-  def click_mark_complete_button
[0m[32m9[0m-    click_button I18n.t("inspections.buttons.mark_complete")
--
[0m[32m15[0m-
[0m[32m16[0m-  def click_submit_button
[0m[32m17[0m:    submit_[0m[1m[31mform[0m(:inspection)
[0m[32m18[0m-  end
[0m[32m19[0m-
--
[0m[32m34[0m-  end
[0m[32m35[0m-
[0m[32m36[0m:  # Form filling - use the generic [0m[1m[31mform[0m helpers
[0m[32m37[0m-  def fill_in_location(value)
[0m[32m38[0m:    fill_in_[0m[1m[31mform[0m(:inspection, :inspection_location, value)
[0m[32m39[0m-  end
[0m[32m40[0m-
[0m[32m41[0m-  def fill_in_report_number(value)
[0m[32m42[0m:    fill_in_[0m[1m[31mform[0m(:inspection, :unique_report_number, value)
[0m[32m43[0m-  end
[0m[32m44[0m-
[0m[32m45[0m-  def fill_in_risk_assessment(value)
[0m[32m46[0m-    # Risk assessment is now on the results tab
[0m[32m47[0m:    fill_in_[0m[1m[31mform[0m(:results, :risk_assessment, value)
[0m[32m48[0m-  end
[0m[32m49[0m-

[0m[35mspec/models/concerns/assessment_completion_spec.rb[0m
[0m[32m16[0m-        expect(incomplete).to include(
[0m[32m17[0m-          :containing_wall_height,
[0m[32m18[0m:          :plat[0m[1m[31mform[0m_height,
[0m[32m19[0m-          :tallest_user_height
[0m[32m20[0m-        )
--
[0m[32m29[0m-        assessment.update!(
[0m[32m30[0m-          containing_wall_height: 2.5,
[0m[32m31[0m:          plat[0m[1m[31mform[0m_height: 1.5,
[0m[32m32[0m-          tallest_user_height: 1.8
[0m[32m33[0m-        )
--
[0m[32m37[0m-        expect(incomplete).not_to include(
[0m[32m38[0m-          :containing_wall_height,
[0m[32m39[0m:          :plat[0m[1m[31mform[0m_height,
[0m[32m40[0m-          :tallest_user_height
[0m[32m41[0m-        )
--
[0m[32m50[0m-        assessment.update!(
[0m[32m51[0m-          containing_wall_height: 2.5,
[0m[32m52[0m:          plat[0m[1m[31mform[0m_height: 1.5,
[0m[32m53[0m-          tallest_user_height: 1.8,
[0m[32m54[0m-          users_at_1000mm: 5,

[0m[35mspec/support/view_helpers.rb[0m
[0m[32m1[0m-module ViewHelpers
[0m[32m2[0m:  # Check for [0m[1m[31mform[0m field presence by name attribute
[0m[32m3[0m:  # Usage: expect_[0m[1m[31mform[0m_field("inspector_company[name]")
[0m[32m4[0m:  #        expect_[0m[1m[31mform[0m_field("user[email]", type: "email")
[0m[32m5[0m:  def expect_[0m[1m[31mform[0m_field(field_name, type: nil)
[0m[32m6[0m-    if type
[0m[32m7[0m-      expect(rendered).to have_css("input[name='#{field_name}'][type='#{type}']")
--
[0m[32m12[0m-
[0m[32m13[0m-  # Check for submit button using i18n or explicit text
[0m[32m14[0m:  # Usage: expect_submit_button("[0m[1m[31mform[0ms.inspector_companies")
[0m[32m15[0m-  #        expect_submit_button(text: "Save Changes")
[0m[32m16[0m-  def expect_submit_button(i18n_base_or_options)
--
[0m[32m67[0m-  end
[0m[32m68[0m-
[0m[32m69[0m:  # Check [0m[1m[31mform[0m has all expected fields from i18n structure
[0m[32m70[0m:  # Usage: expect_[0m[1m[31mform[0m_fields_from_i18n("[0m[1m[31mform[0ms.inspector_companies")
[0m[32m71[0m:  def expect_[0m[1m[31mform[0m_fields_from_i18n(i18n_base)
[0m[32m72[0m-    fields = I18n.t("#{i18n_base}.fields", raise: true)
[0m[32m73[0m-
--
[0m[32m78[0m-    end
[0m[32m79[0m-  rescue I18n::MissingTranslationData
[0m[32m80[0m:    raise "Missing i18n key: #{i18n_base}.fields - [0m[1m[31mform[0m must define its fields"
[0m[32m81[0m-  end
[0m[32m82[0m-
[0m[32m83[0m:  # Check [0m[1m[31mform[0m has all expected sections from i18n structure
[0m[32m84[0m:  # Usage: expect_[0m[1m[31mform[0m_sections_from_i18n("[0m[1m[31mform[0ms.inspector_companies")
[0m[32m85[0m:  def expect_[0m[1m[31mform[0m_sections_from_i18n(i18n_base)
[0m[32m86[0m-    sections = I18n.t("#{i18n_base}.sections", default: {})
[0m[32m87[0m-
--
[0m[32m97[0m-  end
[0m[32m98[0m-
[0m[32m99[0m:  # Check multiple [0m[1m[31mform[0m fields at once
[0m[32m100[0m:  # Usage: expect_[0m[1m[31mform[0m_fields_present("user", %w[name email password])
[0m[32m101[0m:  def expect_[0m[1m[31mform[0m_fields_present(model_name, field_names)
[0m[32m102[0m-    field_names.each do |field|
[0m[32m103[0m:      expect_[0m[1m[31mform[0m_field("#{model_name}[#{field}]")
[0m[32m104[0m-    end
[0m[32m105[0m-  end
[0m[32m106[0m-
[0m[32m107[0m:  # Check that model's attributes are displayed (not in [0m[1m[31mform[0m fields)
[0m[32m108[0m-  # Usage: expect_model_attributes_displayed(company, :name, :email, :phone)
[0m[32m109[0m-  def expect_model_attributes_displayed(model, *attributes)
--
[0m[32m114[0m-  end
[0m[32m115[0m-
[0m[32m116[0m:  # Mock [0m[1m[31mform[0m builder for partial specs
[0m[32m117[0m:  # Usage: mock_[0m[1m[31mform[0m = mock_[0m[1m[31mform[0m_builder
[0m[32m118[0m:  def mock_[0m[1m[31mform[0m_builder
[0m[32m119[0m:    [0m[1m[31mform[0m = double("FormBuilder")
[0m[32m120[0m-
[0m[32m121[0m:    # Common [0m[1m[31mform[0m builder methods
[0m[32m122[0m-    %i[text_field email_field password_field text_area select check_box
[0m[32m123[0m-      number_field telephone_field file_field hidden_field radio_button
[0m[32m124[0m-      submit label].each do |method|
[0m[32m125[0m:      allow([0m[1m[31mform[0m).to receive(method).and_return("<#{method} />".html_safe)
[0m[32m126[0m-    end
[0m[32m127[0m-
[0m[32m128[0m:    [0m[1m[31mform[0m
[0m[32m129[0m-  end
[0m[32m130[0m-
[0m[32m131[0m:  # Setup standard [0m[1m[31mform[0m field configuration for partial specs
[0m[32m132[0m:  # Usage: setup_[0m[1m[31mform[0m_field_config(field: :name, label: "Name")
[0m[32m133[0m:  def setup_[0m[1m[31mform[0m_field_config(field:, label: nil, **options)
[0m[32m134[0m:    i18n_base = options[:i18n_base] || "test.[0m[1m[31mform[0ms"
[0m[32m135[0m-    config = {
[0m[32m136[0m:      [0m[1m[31mform[0m_object: @mock_[0m[1m[31mform[0m || mock_[0m[1m[31mform[0m_builder,
[0m[32m137[0m-      i18n_base: i18n_base,
[0m[32m138[0m-      field_label: label || field.to_s.humanize,
--
[0m[32m141[0m-    }
[0m[32m142[0m-
[0m[32m143[0m:    allow(view).to receive(:[0m[1m[31mform[0m_field_setup).and_return(config)
[0m[32m144[0m-    view.instance_variable_set(:@_current_i18n_base, i18n_base)
[0m[32m145[0m-
--
[0m[32m147[0m-  end
[0m[32m148[0m-
[0m[32m149[0m:  # Setup mock [0m[1m[31mform[0m builder with specific field rendering
[0m[32m150[0m-  # Usage: setup_mock_field(:text_field, :name, '<input type="text" />')
[0m[32m151[0m-  def setup_mock_field(field_type, field_name, rendered_html)
[0m[32m152[0m:    @mock_[0m[1m[31mform[0m ||= mock_[0m[1m[31mform[0m_builder
[0m[32m153[0m:    allow(@mock_[0m[1m[31mform[0m).to receive(field_type)
[0m[32m154[0m-      .with(field_name, anything)
[0m[32m155[0m-      .and_return(rendered_html.html_safe)
--
[0m[32m159[0m-  # Usage: setup_mock_label(:name, "Name")
[0m[32m160[0m-  def setup_mock_label(field_name, label_text)
[0m[32m161[0m:    @mock_[0m[1m[31mform[0m ||= mock_[0m[1m[31mform[0m_builder
[0m[32m162[0m:    allow(@mock_[0m[1m[31mform[0m).to receive(:label)
[0m[32m163[0m-      .with(field_name, anything)
[0m[32m164[0m-      .and_return(%(<label for="#{field_name}">#{label_text}</label>).html_safe)
[0m[32m165[0m-  end
[0m[32m166[0m-
[0m[32m167[0m:  # Render a [0m[1m[31mform[0m partial with standard setup
[0m[32m168[0m:  # Usage: render_[0m[1m[31mform[0m_partial("text_field", field: :name)
[0m[32m169[0m:  def render_[0m[1m[31mform[0m_partial(partial_name, locals = {})
[0m[32m170[0m:    render partial: "[0m[1m[31mform[0m/#{partial_name}", locals: locals
[0m[32m171[0m-  end
[0m[32m172[0m-
[0m[32m173[0m:  # Check for labeled [0m[1m[31mform[0m field structure
[0m[32m174[0m-  # Usage: expect_labeled_field(:name, "Name", type: "text")
[0m[32m175[0m-  def expect_labeled_field(field_name, label_text, type: "text")
--
[0m[32m178[0m-  end
[0m[32m179[0m-
[0m[32m180[0m:  # Check [0m[1m[31mform[0m partial renders with correct field type
[0m[32m181[0m-  # Usage: expect_field_type_rendered(:email_field, "email")
[0m[32m182[0m-  def expect_field_type_rendered(field_method, input_type)
--
[0m[32m204[0m-  end
[0m[32m205[0m-
[0m[32m206[0m:  # Check [0m[1m[31mform[0m structure matches i18n conventions
[0m[32m207[0m:  # Usage: expect_standard_[0m[1m[31mform[0m_structure("[0m[1m[31mform[0ms.inspector_companies")
[0m[32m208[0m:  def expect_standard_[0m[1m[31mform[0m_structure(i18n_base)
[0m[32m209[0m-    # Check header if defined
[0m[32m210[0m-    header = I18n.t("#{i18n_base}.header", default: nil)
--
[0m[32m212[0m-
[0m[32m213[0m-    # Check sections and fields
[0m[32m214[0m:    expect_[0m[1m[31mform[0m_sections_from_i18n(i18n_base)
[0m[32m215[0m:    expect_[0m[1m[31mform[0m_fields_from_i18n(i18n_base)
[0m[32m216[0m-
[0m[32m217[0m-    # Check submit button

[0m[35mspec/support/shared_examples/assessment_form_save.rb[0m
[0m[32m1[0m:RSpec.shared_examples "assessment [0m[1m[31mform[0m save" do |assessment_type, sample_data|
[0m[32m2[0m:  describe "#{assessment_type} assessment [0m[1m[31mform[0m" do
[0m[32m3[0m-    let(:user) { create(:user) }
[0m[32m4[0m-    let(:unit) { create(:unit, user: user) }
--
[0m[32m30[0m-
[0m[32m31[0m-    def fill_assessment_fields(type, data)
[0m[32m32[0m:      i18n_base = "[0m[1m[31mform[0ms.#{type}"
[0m[32m33[0m-      fields = I18n.t("#{i18n_base}.fields")
[0m[32m34[0m-
--
[0m[32m42[0m-
[0m[32m43[0m-    def submit_and_verify(type, data)
[0m[32m44[0m:      click_button I18n.t("[0m[1m[31mform[0ms.#{type}.submit")
[0m[32m45[0m-      expect_updated_message
[0m[32m46[0m-      verify_saved_values(inspection, type, data)
--
[0m[32m119[0m-
[0m[32m120[0m-    def fill_comment_in_context(base_key, base_label, value)
[0m[32m121[0m:      containers = ["[0m[1m[31mform[0m-grid", "radio-comment", "number-radio-comment"]
[0m[32m122[0m-      filled = false
[0m[32m123[0m-

[0m[35mspec/models/inspection_spec.rb[0m
[0m[32m127[0m-
[0m[32m128[0m-      missing = inspection.get_missing_assessments
[0m[32m129[0m:      expect(missing).to include(I18n.t("[0m[1m[31mform[0ms.user_height.header"))
[0m[32m130[0m-    end
[0m[32m131[0m-

[0m[35mspec/support/safety_standards_test_helpers.rb[0m
[0m[32m12[0m-  }.freeze
[0m[32m13[0m-
[0m[32m14[0m:  def fill_calculator_[0m[1m[31mform[0m(type, **fields)
[0m[32m15[0m:    [0m[1m[31mform[0m_name = FORM_TYPES[type]
[0m[32m16[0m-    fields.each do |field, value|
[0m[32m17[0m:      fill_in_[0m[1m[31mform[0m_within([0m[1m[31mform[0m_name, field, value)
[0m[32m18[0m-    end
[0m[32m19[0m-  end
[0m[32m20[0m-
[0m[32m21[0m:  def submit_calculator_[0m[1m[31mform[0m(type)
[0m[32m22[0m:    submit_[0m[1m[31mform[0m_within(FORM_TYPES[type])
[0m[32m23[0m-  end
[0m[32m24[0m-
[0m[32m25[0m:  def fill_anchor_[0m[1m[31mform[0m(length:, width:, height:)
[0m[32m26[0m:    fill_calculator_[0m[1m[31mform[0m(:anchors, length: length, width: width, height: height)
[0m[32m27[0m-  end
[0m[32m28[0m-
[0m[32m29[0m:  def fill_runout_[0m[1m[31mform[0m(height:)
[0m[32m30[0m:    fill_calculator_[0m[1m[31mform[0m(:runout, plat[0m[1m[31mform[0m_height: height)
[0m[32m31[0m-  end
[0m[32m32[0m-
[0m[32m33[0m:  def fill_wall_height_[0m[1m[31mform[0m(height:)
[0m[32m34[0m:    fill_calculator_[0m[1m[31mform[0m(:wall_height, user_height: height)
[0m[32m35[0m-  end
[0m[32m36[0m-
[0m[32m37[0m:  def submit_anchor_[0m[1m[31mform[0m = submit_calculator_[0m[1m[31mform[0m(:anchors)
[0m[32m38[0m-
[0m[32m39[0m:  def submit_runout_[0m[1m[31mform[0m = submit_calculator_[0m[1m[31mform[0m(:runout)
[0m[32m40[0m-
[0m[32m41[0m:  def submit_wall_height_[0m[1m[31mform[0m = submit_calculator_[0m[1m[31mform[0m(:wall_height)
[0m[32m42[0m-
[0m[32m43[0m-  def within_result(type, &block)

[0m[35mspec/factories/inspector_companies.rb[0m
[0m[32m23[0m-    end
[0m[32m24[0m-
[0m[32m25[0m:    trait :[0m[1m[31mform[0matted_phone do
[0m[32m26[0m-      phone { "(123) 456-7890" }
[0m[32m27[0m-    end

[0m[35mspec/support/shared_examples/assessment_behaviors.rb[0m
[0m[32m196[0m-end
[0m[32m197[0m-
[0m[32m198[0m:# Shared examples for assessment [0m[1m[31mform[0m feature tests
[0m[32m199[0m:RSpec.shared_examples "an assessment [0m[1m[31mform[0m" do |assessment_type|
[0m[32m200[0m:  describe "common assessment [0m[1m[31mform[0m behaviors" do
[0m[32m201[0m-    it "displays the assessment tab in navigation" do
[0m[32m202[0m-      visit edit_inspection_path(inspection)
--
[0m[32m204[0m-    end
[0m[32m205[0m-
[0m[32m206[0m:    it "navigates to the assessment [0m[1m[31mform[0m when clicking the tab" do
[0m[32m207[0m-      visit edit_inspection_path(inspection)
[0m[32m208[0m-      click_assessment_tab(assessment_type)
[0m[32m209[0m-
[0m[32m210[0m-      expect(page).to have_current_path(edit_inspection_path(inspection, tab: assessment_type))
[0m[32m211[0m:      expect(page).to have_content(I18n.t("[0m[1m[31mform[0ms.#{assessment_type}.header"))
[0m[32m212[0m-    end
[0m[32m213[0m-
[0m[32m214[0m:    it "displays the assessment [0m[1m[31mform[0m without errors" do
[0m[32m215[0m-      visit edit_inspection_path(inspection, tab: assessment_type)
[0m[32m216[0m-
[0m[32m217[0m:      expect(page).to have_content(I18n.t("[0m[1m[31mform[0ms.#{assessment_type}.header"))
[0m[32m218[0m-
[0m[32m219[0m-      expect(page).not_to have_content("translation missing")
--
[0m[32m222[0m-    end
[0m[32m223[0m-
[0m[32m224[0m:    it "saves the assessment when [0m[1m[31mform[0m is submitted" do
[0m[32m225[0m-      visit edit_inspection_path(inspection, tab: assessment_type)
[0m[32m226[0m-

[0m[35mspec/models/inspector_company_spec.rb[0m
[0m[32m29[0m-    end
[0m[32m30[0m-
[0m[32m31[0m:    it "validates email [0m[1m[31mform[0mat when present" do
[0m[32m32[0m-      company = build(:inspector_company, email: "invalid-email")
[0m[32m33[0m-      expect(company).not_to be_valid
--
[0m[32m58[0m-  end
[0m[32m59[0m-
[0m[32m60[0m:  describe "phone [0m[1m[31mform[0matting" do
[0m[32m61[0m-    it "normalizes phone numbers by removing non-digits" do
[0m[32m62[0m-      company = create(:inspector_company, phone: "(123) 456-7890")

[0m[35mspec/support/radio_button_helpers.rb[0m
[0m[32m40[0m-    begin
[0m[32m41[0m-      # First, try to find by the main label
[0m[32m42[0m:      container = find(:xpath, "//div[@class='[0m[1m[31mform[0m-grid radio-comment'][.//label[@class='label'][normalize-space(.)='#{label}']]")
[0m[32m43[0m-
[0m[32m44[0m-      # Then find the pass-fail div and click the appropriate radio
--
[0m[32m96[0m-  def find_field_by_label(field_label)
[0m[32m97[0m-    BOOLEANS_BY_FORM.each do |model, fields|
[0m[32m98[0m:      [0m[1m[31mform[0m_type = (model == :inspection) ? :inspection : :slide
[0m[32m99[0m-      fields.each do |field|
[0m[32m100[0m:        i18n_key = "[0m[1m[31mform[0ms.#{[0m[1m[31mform[0m_type}.fields.#{field}"
[0m[32m101[0m-        return yield(field, model) if field_label == I18n.t(i18n_key)
[0m[32m102[0m-      end

[0m[35mspec/support/login_helpers.rb[0m
[0m[32m6[0m-  end
[0m[32m7[0m-
[0m[32m8[0m:  def login_user_via_[0m[1m[31mform[0m(user)
[0m[32m9[0m-    visit login_path
[0m[32m10[0m:    fill_in_[0m[1m[31mform[0m(:session_new, :email, user.email)
[0m[32m11[0m:    fill_in_[0m[1m[31mform[0m(:session_new, :password, user.password)
[0m[32m12[0m:    submit_[0m[1m[31mform[0m(:session_new)
[0m[32m13[0m-  end
[0m[32m14[0m-
[0m[32m15[0m-  def sign_in(user)
[0m[32m16[0m-    visit login_path
[0m[32m17[0m:    fill_in_[0m[1m[31mform[0m(:session_new, :email, user.email)
[0m[32m18[0m:    fill_in_[0m[1m[31mform[0m(:session_new, :password, user.password)
[0m[32m19[0m:    submit_[0m[1m[31mform[0m(:session_new)
[0m[32m20[0m-  end
[0m[32m21[0m-

[0m[35mspec/features/details_links_spec.rb[0m
[0m[32m34[0m-
[0m[32m35[0m-    within("details#incomplete_fields") do
[0m[32m36[0m:      find("a", text: I18n.t("[0m[1m[31mform[0ms.inspection.header")).click
[0m[32m37[0m-    end
[0m[32m38[0m-
--
[0m[32m41[0m-    find("summary.incomplete-fields-summary").click
[0m[32m42[0m-    within("details#incomplete_fields") do
[0m[32m43[0m:      find("a", text: I18n.t("[0m[1m[31mform[0ms.user_height.header")).click
[0m[32m44[0m-    end
[0m[32m45[0m-

[0m[35mspec/models/safety_standard_constants_spec.rb[0m
[0m[32m26[0m-      constants = SafetyStandard::RUNOUT_CALCULATION_CONSTANTS
[0m[32m27[0m-
[0m[32m28[0m:      expect(constants[:plat[0m[1m[31mform[0m_height_ratio]).to eq(0.5)
[0m[32m29[0m-      expect(constants[:minimum_runout_meters]).to eq(0.3)
[0m[32m30[0m-    end
[0m[32m31[0m-
[0m[32m32[0m-    it "is used in runout calculations" do
[0m[32m33[0m:      plat[0m[1m[31mform[0m_height = 2.5
[0m[32m34[0m:      expected = [plat[0m[1m[31mform[0m_height * 0.5, 0.3].max
[0m[32m35[0m-
[0m[32m36[0m:      result = SafetyStandard.calculate_required_runout(plat[0m[1m[31mform[0m_height)
[0m[32m37[0m-      expect(result).to eq(expected)
[0m[32m38[0m-      expect(result).to eq(1.25)
--
[0m[32m138[0m-    end
[0m[32m139[0m-
[0m[32m140[0m:    it "generates consistent [0m[1m[31mform[0mula descriptions from constants" do
[0m[32m141[0m-      anchor_metadata = SafetyStandard.calculation_metadata[:anchors]
[0m[32m142[0m-      runout_metadata = SafetyStandard.calculation_metadata[:slide_runout]
[0m[32m143[0m-
[0m[32m144[0m-      # Formula text should include actual constant values
[0m[32m145[0m:      expect(anchor_metadata[:[0m[1m[31mform[0mula_text]).to include("114.0")
[0m[32m146[0m:      expect(anchor_metadata[:[0m[1m[31mform[0mula_text]).to include("1600.0")
[0m[32m147[0m:      expect(anchor_metadata[:[0m[1m[31mform[0mula_text]).to include("1.5")
[0m[32m148[0m-
[0m[32m149[0m:      expect(runout_metadata[:[0m[1m[31mform[0mula_text]).to include("50%")
[0m[32m150[0m:      expect(runout_metadata[:[0m[1m[31mform[0mula_text]).to include("300mm")
[0m[32m151[0m-    end
[0m[32m152[0m-  end

[0m[35mspec/support/form_helpers.rb[0m
[0m[32m1[0m-module FormHelpers
[0m[32m2[0m:  def fill_in_[0m[1m[31mform[0m([0m[1m[31mform[0m_name, field_name, value)
[0m[32m3[0m:    field_label = I18n.t("[0m[1m[31mform[0ms.#{[0m[1m[31mform[0m_name}.fields.#{field_name}")
[0m[32m4[0m-    fill_in field_label, with: value
[0m[32m5[0m-  end
[0m[32m6[0m-
[0m[32m7[0m:  def within_[0m[1m[31mform[0m([0m[1m[31mform[0m_name, &block)
[0m[32m8[0m:    [0m[1m[31mform[0m_header = I18n.t("[0m[1m[31mform[0ms.#{[0m[1m[31mform[0m_name}.header")
[0m[32m9[0m:    within(".calculator-[0m[1m[31mform[0m", text: [0m[1m[31mform[0m_header, &block)
[0m[32m10[0m-  end
[0m[32m11[0m-
[0m[32m12[0m:  def fill_in_[0m[1m[31mform[0m_within([0m[1m[31mform[0m_name, field_name, value)
[0m[32m13[0m:    within_[0m[1m[31mform[0m([0m[1m[31mform[0m_name) do
[0m[32m14[0m:      fill_in_[0m[1m[31mform[0m([0m[1m[31mform[0m_name, field_name, value)
[0m[32m15[0m-    end
[0m[32m16[0m-  end
[0m[32m17[0m-
[0m[32m18[0m:  def submit_[0m[1m[31mform[0m([0m[1m[31mform[0m_name)
[0m[32m19[0m:    submit_text = I18n.t("[0m[1m[31mform[0ms.#{[0m[1m[31mform[0m_name}.submit")
[0m[32m20[0m-    click_button submit_text
[0m[32m21[0m-  end
[0m[32m22[0m-
[0m[32m23[0m:  def submit_[0m[1m[31mform[0m_within([0m[1m[31mform[0m_name)
[0m[32m24[0m:    within_[0m[1m[31mform[0m([0m[1m[31mform[0m_name) do
[0m[32m25[0m:      submit_[0m[1m[31mform[0m([0m[1m[31mform[0m_name)
[0m[32m26[0m-    end
[0m[32m27[0m-  end
[0m[32m28[0m-
[0m[32m29[0m:  def check_[0m[1m[31mform[0m([0m[1m[31mform[0m_name, field_name)
[0m[32m30[0m:    field_label = I18n.t("[0m[1m[31mform[0ms.#{[0m[1m[31mform[0m_name}.fields.#{field_name}")
[0m[32m31[0m-    check field_label
[0m[32m32[0m-  end
[0m[32m33[0m-
[0m[32m34[0m:  def uncheck_[0m[1m[31mform[0m([0m[1m[31mform[0m_name, field_name)
[0m[32m35[0m:    field_label = I18n.t("[0m[1m[31mform[0ms.#{[0m[1m[31mform[0m_name}.fields.#{field_name}")
[0m[32m36[0m-    uncheck field_label
[0m[32m37[0m-  end
[0m[32m38[0m-
[0m[32m39[0m:  def check_[0m[1m[31mform[0m_radio([0m[1m[31mform[0m_name, field_name)
[0m[32m40[0m:    field_label = I18n.t("[0m[1m[31mform[0ms.#{[0m[1m[31mform[0m_name}.fields.#{field_name}")
[0m[32m41[0m-    check_radio field_label
[0m[32m42[0m-  end
[0m[32m43[0m-
[0m[32m44[0m:  def uncheck_[0m[1m[31mform[0m_radio([0m[1m[31mform[0m_name, field_name)
[0m[32m45[0m:    field_label = I18n.t("[0m[1m[31mform[0ms.#{[0m[1m[31mform[0m_name}.fields.#{field_name}")
[0m[32m46[0m-    uncheck_radio field_label
[0m[32m47[0m-  end
[0m[32m48[0m-
[0m[32m49[0m:  def find_[0m[1m[31mform[0m_field([0m[1m[31mform[0m_name, field_name)
[0m[32m50[0m:    expect_field_present([0m[1m[31mform[0m_name, field_name)
[0m[32m51[0m:    find_field(I18n.t("[0m[1m[31mform[0ms.#{[0m[1m[31mform[0m_name}.fields.#{field_name}"))
[0m[32m52[0m-  end
[0m[32m53[0m-
[0m[32m54[0m:  def expect_field_present([0m[1m[31mform[0m_name, field_name)
[0m[32m55[0m:    field_label = I18n.t("[0m[1m[31mform[0ms.#{[0m[1m[31mform[0m_name}.fields.#{field_name}")
[0m[32m56[0m-    expect(page).to have_field(field_label)
[0m[32m57[0m-  end
[0m[32m58[0m-
[0m[32m59[0m:  def expect_field_not_present([0m[1m[31mform[0m_name, field_name)
[0m[32m60[0m:    field_label = I18n.t("[0m[1m[31mform[0ms.#{[0m[1m[31mform[0m_name}.fields.#{field_name}")
[0m[32m61[0m-    expect(page).not_to have_field(field_label)
[0m[32m62[0m-  end
[0m[32m63[0m-
[0m[32m64[0m:  def expect_[0m[1m[31mform[0m_sections_present(i18n_base)
[0m[32m65[0m-    sections = I18n.t("#{i18n_base}.sections", raise: true)
[0m[32m66[0m-
--
[0m[32m70[0m-    end
[0m[32m71[0m-  rescue I18n::MissingTranslationData
[0m[32m72[0m:    raise "Missing i18n key: #{i18n_base}.sections - every [0m[1m[31mform[0m must define its sections"
[0m[32m73[0m-  end
[0m[32m74[0m-
[0m[32m75[0m:  def expect_[0m[1m[31mform[0m_fields_present(i18n_base)
[0m[32m76[0m-    fields = I18n.t("#{i18n_base}.fields", raise: true)
[0m[32m77[0m-
--
[0m[32m102[0m-    end
[0m[32m103[0m-  rescue I18n::MissingTranslationData
[0m[32m104[0m:    raise "Missing i18n key: #{i18n_base}.fields - every [0m[1m[31mform[0m must define its fields"
[0m[32m105[0m-  end
[0m[32m106[0m-
[0m[32m107[0m:  def expect_[0m[1m[31mform[0m_matches_i18n(i18n_base)
[0m[32m108[0m-    header = I18n.t("#{i18n_base}.header", default: nil)
[0m[32m109[0m-    expect(page).to have_content(header) if header
[0m[32m110[0m-
[0m[32m111[0m:    expect_[0m[1m[31mform[0m_sections_present(i18n_base)
[0m[32m112[0m-
[0m[32m113[0m:    expect_[0m[1m[31mform[0m_fields_present(i18n_base)
[0m[32m114[0m-
[0m[32m115[0m:    expect_[0m[1m[31mform[0m_has_fieldsets(i18n_base)
[0m[32m116[0m-  end
[0m[32m117[0m-
[0m[32m118[0m:  def verify_all_[0m[1m[31mform[0m_fields_have_i18n([0m[1m[31mform[0m_selector, i18n_base)
[0m[32m119[0m:    within([0m[1m[31mform[0m_selector) do
[0m[32m120[0m-      all("label").each do |label|
[0m[32m121[0m-        label_text = label.text.strip
--
[0m[32m136[0m-  end
[0m[32m137[0m-
[0m[32m138[0m:  def expect_[0m[1m[31mform[0m_errors([0m[1m[31mform[0m_name, count: nil)
[0m[32m139[0m-    if count
[0m[32m140[0m:      error_header = I18n.t("[0m[1m[31mform[0ms.#{[0m[1m[31mform[0m_name}.errors.header", count: count)
[0m[32m141[0m-      expect(page).to have_content(error_header)
[0m[32m142[0m-    end
[0m[32m143[0m:    expect(page).to have_css(".[0m[1m[31mform[0m-errors")
[0m[32m144[0m-  end
[0m[32m145[0m-
[0m[32m146[0m:  def expect_[0m[1m[31mform[0m_has_fieldsets(i18n_base)
[0m[32m147[0m-    expect(page).to have_css("fieldset")
[0m[32m148[0m-
--
[0m[32m154[0m-
[0m[32m155[0m-  def click_assessment_tab(tab_name)
[0m[32m156[0m:    tab_text = I18n.t("[0m[1m[31mform[0ms.#{tab_name}.header")
[0m[32m157[0m-    click_link tab_text
[0m[32m158[0m-  end
[0m[32m159[0m-
[0m[32m160[0m-  def expect_assessment_tab(tab_name)
[0m[32m161[0m:    tab_text = I18n.t("[0m[1m[31mform[0ms.#{tab_name}.header")
[0m[32m162[0m-    expect(page).to have_link(tab_text)
[0m[32m163[0m-  end
[0m[32m164[0m-
[0m[32m165[0m-  def expect_no_assessment_tab(tab_name)
[0m[32m166[0m:    tab_text = I18n.t("[0m[1m[31mform[0ms.#{tab_name}.header")
[0m[32m167[0m-    expect(page).not_to have_link(tab_text)
[0m[32m168[0m-  end
[0m[32m169[0m-
[0m[32m170[0m-  def expect_assessment_tab_active(tab_name)
[0m[32m171[0m:    tab_text = I18n.t("[0m[1m[31mform[0ms.#{tab_name}.header")
[0m[32m172[0m-    expect(page).to have_css("nav.tabs span", text: tab_text)
[0m[32m173[0m-  end

[0m[35mspec/factories/user_height_assessments.rb[0m
[0m[32m4[0m-
[0m[32m5[0m-    containing_wall_height { nil }
[0m[32m6[0m:    plat[0m[1m[31mform[0m_height { nil }
[0m[32m7[0m-    tallest_user_height { nil }
[0m[32m8[0m-    users_at_1000mm { nil }
--
[0m[32m17[0m-      containing_wall_height { 1.2 }
[0m[32m18[0m-      containing_wall_height_comment { "Wall height adequate for age group" }
[0m[32m19[0m:      plat[0m[1m[31mform[0m_height { 1.0 }
[0m[32m20[0m:      plat[0m[1m[31mform[0m_height_comment { "Plat[0m[1m[31mform[0m height meets standards" }
[0m[32m21[0m-      tallest_user_height { 1.8 }
[0m[32m22[0m-      tallest_user_height_comment { "User height appropriate" }
--
[0m[32m35[0m-    trait :incomplete do
[0m[32m36[0m-      containing_wall_height { nil }
[0m[32m37[0m:      plat[0m[1m[31mform[0m_height { nil }
[0m[32m38[0m-    end
[0m[32m39[0m-
[0m[32m40[0m-    trait :standard_test_values do
[0m[32m41[0m-      containing_wall_height { 2.5 }
[0m[32m42[0m:      plat[0m[1m[31mform[0m_height { 1.0 }
[0m[32m43[0m-      tallest_user_height { 1.8 }
[0m[32m44[0m-      users_at_1000mm { 5 }
--
[0m[32m54[0m-    trait :with_basic_data do
[0m[32m55[0m-      containing_wall_height { 1.5 }
[0m[32m56[0m:      plat[0m[1m[31mform[0m_height { 1.0 }
[0m[32m57[0m-      tallest_user_height { 1.2 }
[0m[32m58[0m-      users_at_1000mm { 10 }
--
[0m[32m67[0m-    trait :extreme_values do
[0m[32m68[0m-      containing_wall_height { 999.999999 }
[0m[32m69[0m:      plat[0m[1m[31mform[0m_height { 0.000001 }
[0m[32m70[0m-      tallest_user_height { 1.23456789 }
[0m[32m71[0m-      play_area_length { 999999.123456 }
--
[0m[32m75[0m-    trait :edge_case_values do
[0m[32m76[0m-      containing_wall_height { nil }
[0m[32m77[0m:      plat[0m[1m[31mform[0m_height { "" }
[0m[32m78[0m-      tallest_user_height { 0 }
[0m[32m79[0m-      users_at_1000mm { nil }

[0m[35mapp/services/pdf_generator_service/assessment_renderer.rb[0m
[0m[32m50[0m-
[0m[32m51[0m-    def has_i18n_label?(field)
[0m[32m52[0m:      I18n.exists?("[0m[1m[31mform[0ms.#{@current_assessment_type}.fields.#{field}")
[0m[32m53[0m-    end
[0m[32m54[0m-
--
[0m[32m59[0m-    end
[0m[32m60[0m-
[0m[32m61[0m:    def [0m[1m[31mform[0mat_field_line(label, value, pass_value, is_pass_field)
[0m[32m62[0m-      parts = []
[0m[32m63[0m-      # For boolean fields that aren't pass/fail fields, don't show pass/fail indicator
--
[0m[32m89[0m-    def italic(text) = "<i>#{text}</i>"
[0m[32m90[0m-
[0m[32m91[0m:    def field_label(field_name) = I18n.t!("[0m[1m[31mform[0ms.#{@current_assessment_type}.fields.#{field_name}")
[0m[32m92[0m-
[0m[32m93[0m-    def pass_fail(value) = I18n.t(value ? "shared.pass_pdf" : "shared.fail_pdf")
--
[0m[32m127[0m-      pass_value = determine_pass_value(fields, main_field, value)
[0m[32m128[0m-
[0m[32m129[0m:      [0m[1m[31mform[0mat_field_line(label, value, pass_value, main_field.to_s.end_with?("_pass"))
[0m[32m130[0m-    end
[0m[32m131[0m-
--
[0m[32m148[0m-
[0m[32m149[0m-      @current_assessment_blocks << {
[0m[32m150[0m:        title: I18n.t("[0m[1m[31mform[0ms.#{assessment_type}.header"),
[0m[32m151[0m-        fields: @current_assessment_fields
[0m[32m152[0m-      }
--
[0m[32m172[0m-      pdf.move_down ASSESSMENT_MARGIN_AFTER_TITLE
[0m[32m173[0m-
[0m[32m174[0m:      block[:fields].each { |field| pdf.text field, size: FIELD_TEXT_SIZE, inline_[0m[1m[31mform[0mat: true }
[0m[32m175[0m-      pdf.move_down ASSESSMENT_MARGIN_AFTER
[0m[32m176[0m-    end

[0m[35mspec/spec_helper.rb[0m
[0m[32m33[0m-# will add to the boot time of your test suite on EVERY test run, even for an
[0m[32m34[0m-# individual file that may not need all of that loaded. Instead, consider making
[0m[32m35[0m:# a separate helper file that requires the additional dependencies and per[0m[1m[31mform[0ms
[0m[32m36[0m-# the additional setup, and require it from the spec files that actually need
[0m[32m37[0m-# it.
--
[0m[32m92[0m-  #   # individual spec file.
[0m[32m93[0m-  #   if config.files_to_run.one?
[0m[32m94[0m:  #     # Use the documentation [0m[1m[31mform[0matter for detailed output,
[0m[32m95[0m:  #     # unless a [0m[1m[31mform[0matter has already been configured
[0m[32m96[0m-  #     # (e.g. via a command-line flag).
[0m[32m97[0m:  #     config.default_[0m[1m[31mform[0matter = "doc"
[0m[32m98[0m-  #   end
[0m[32m99[0m-  #

[0m[35mspec/lib/i18n_usage_tracker_spec.rb[0m
[0m[32m79[0m-          "activemodel.errors.messages.invalid",
[0m[32m80[0m-          "helpers.submit.create",
[0m[32m81[0m:          "number.currency.[0m[1m[31mform[0mat.unit",
[0m[32m82[0m:          "date.[0m[1m[31mform[0mats.default",
[0m[32m83[0m:          "time.[0m[1m[31mform[0mats.short",
[0m[32m84[0m-          "support.array.last_word_connector"
[0m[32m85[0m-        ]

[0m[35mspec/features/admin/admin_unassign_user_company_spec.rb[0m
[0m[32m16[0m-    visit edit_user_path(regular_user)
[0m[32m17[0m-    fill_in "user_active_until", with: (Date.current - 1.day).strftime("%Y-%m-%d")
[0m[32m18[0m:    select I18n.t("users.[0m[1m[31mform[0ms.no_company"), from: I18n.t("users.[0m[1m[31mform[0ms.inspection_company_id")
[0m[32m19[0m-    click_button I18n.t("users.buttons.update_user")
[0m[32m20[0m-
--
[0m[32m33[0m-    select_element = find("select[name='user[inspection_company_id]']")
[0m[32m34[0m-    options = select_element.all("option").map(&:text)
[0m[32m35[0m:    expect(options).to include(I18n.t("users.[0m[1m[31mform[0ms.no_company"))
[0m[32m36[0m-    expect(options).to include("Test Company")
[0m[32m37[0m-    expect(options).to include("Another Company")
--
[0m[32m43[0m-    visit edit_user_path(regular_user)
[0m[32m44[0m-
[0m[32m45[0m:    expect(page).to have_content(I18n.t("[0m[1m[31mform[0ms.session_new.status.admin_required"))
[0m[32m46[0m-    expect(current_path).to eq(root_path)
[0m[32m47[0m-  end

[0m[35mapp/services/rpii_verification_service.rb[0m
[0m[32m18[0m-      request = Net::HTTP::Post.new(uri.path)
[0m[32m19[0m-      request["User-Agent"] = USER_AGENT
[0m[32m20[0m:      request["Content-Type"] = "application/x-www-[0m[1m[31mform[0m-urlencoded; charset=UTF-8"
[0m[32m21[0m-      request["X-Requested-With"] = "XMLHttpRequest"
[0m[32m22[0m-
[0m[32m23[0m:      request.body = URI.encode_www_[0m[1m[31mform[0m({
[0m[32m24[0m-        action: "check_inspector_ajax",
[0m[32m25[0m-        search: inspector_number.to_s.strip

[0m[35mapp/services/pdf_generator_service/field_formatter.rb[0m
[0m[32m12[0m-
[0m[32m13[0m-      # Get the label
[0m[32m14[0m:      label = custom_label || I18n.t("[0m[1m[31mform[0ms.#{assessment_type}.fields.#{field_name}")
[0m[32m15[0m-
[0m[32m16[0m-      # Get the value
--
[0m[32m18[0m-
[0m[32m19[0m-      # Format the value based on field type
[0m[32m20[0m:      [0m[1m[31mform[0matted_value = if custom_text
[0m[32m21[0m-        custom_text
[0m[32m22[0m-      elsif unit
[0m[32m23[0m:        Utilities.[0m[1m[31mform[0mat_measurement(value, unit)
[0m[32m24[0m-      elsif field_name.to_s.include?("_pass")
[0m[32m25[0m:        Utilities.[0m[1m[31mform[0mat_pass_fail(value)
[0m[32m26[0m-      elsif [true, false].include?(value)
[0m[32m27[0m-        value ? I18n.t("shared.yes") : I18n.t("shared.no")
--
[0m[32m33[0m-      text_parts = []
[0m[32m34[0m-      text_parts << "#{label}:" unless custom_text
[0m[32m35[0m:      text_parts << [0m[1m[31mform[0matted_value
[0m[32m36[0m-
[0m[32m37[0m-      # Add pass/fail if specified
--
[0m[32m39[0m-        pass_fail = assessment.send(pass_field)
[0m[32m40[0m-        text_parts << "-"
[0m[32m41[0m:        text_parts << Utilities.[0m[1m[31mform[0mat_pass_fail(pass_fail)
[0m[32m42[0m-      end
[0m[32m43[0m-
--
[0m[32m88[0m-      base_field_name = pass_field.to_s.gsub(/_pass$/, "")
[0m[32m89[0m-      comment = assessment.send("#{base_field_name}_comment") if assessment.respond_to?("#{base_field_name}_comment")
[0m[32m90[0m:      full_text = "#{text} - #{Utilities.[0m[1m[31mform[0mat_pass_fail(pass_fail)} #{comment}".strip
[0m[32m91[0m-      fields_array << full_text
[0m[32m92[0m-    end

[0m[35mspec/views/users/change_settings.html.erb_spec.rb[0m
[0m[32m9[0m-  end
[0m[32m10[0m-
[0m[32m11[0m:  it "renders settings change [0m[1m[31mform[0m" do
[0m[32m12[0m-    render
[0m[32m13[0m-

[0m[35mapp/services/qr_code_service.rb[0m
[0m[32m3[0m-    require "rqrcode"
[0m[32m4[0m-
[0m[32m5[0m:    # Create QR code for the report URL using the shorter [0m[1m[31mform[0mat
[0m[32m6[0m-    if record.is_a?(Inspection)
[0m[32m7[0m-      generate_inspection_qr_code(record)

[0m[35mspec/factories/slide_assessments.rb[0m
[0m[32m4[0m-
[0m[32m5[0m-    # Minimal defaults to allow tests to control values
[0m[32m6[0m:    slide_plat[0m[1m[31mform[0m_height { nil }
[0m[32m7[0m-    slide_wall_height { nil }
[0m[32m8[0m-    runout { nil }
--
[0m[32m14[0m-
[0m[32m15[0m-    trait :complete do
[0m[32m16[0m:      slide_plat[0m[1m[31mform[0m_height { 2.0 }
[0m[32m17[0m-      slide_wall_height { 1.8 }
[0m[32m18[0m-      runout { 3.0 }
--
[0m[32m23[0m-      runout_pass { true }
[0m[32m24[0m-      slip_sheet_pass { true }
[0m[32m25[0m:      slide_plat[0m[1m[31mform[0m_height_comment { "Plat[0m[1m[31mform[0m height appropriate for age group" }
[0m[32m26[0m-      slide_wall_height_comment { "Wall height meets safety requirements" }
[0m[32m27[0m-      slide_first_metre_height_comment { "First metre height compliant" }
--
[0m[32m39[0m-
[0m[32m40[0m-    trait :incomplete do
[0m[32m41[0m:      slide_plat[0m[1m[31mform[0m_height { nil }
[0m[32m42[0m-      runout { nil }
[0m[32m43[0m-    end

[0m[35mspec/lib/form_i18n_structure_spec.rb[0m
[0m[32m4[0m-
[0m[32m5[0m-RSpec.describe "Form I18n Structure" do
[0m[32m6[0m:  def check_[0m[1m[31mform[0m_locale_file(file_path)
[0m[32m7[0m-    locale_data = YAML.load_file(file_path)
[0m[32m8[0m:    [0m[1m[31mform[0m_name = File.basename(file_path, ".en.yml")
[0m[32m9[0m-
[0m[32m10[0m:    # Navigate to the [0m[1m[31mform[0m data
[0m[32m11[0m:    [0m[1m[31mform[0m_data = locale_data.dig("en", "[0m[1m[31mform[0ms", [0m[1m[31mform[0m_name)
[0m[32m12[0m:    return [] unless [0m[1m[31mform[0m_data
[0m[32m13[0m-
[0m[32m14[0m-    # Get all top-level keys
[0m[32m15[0m:    actual_keys = [0m[1m[31mform[0m_data.keys
[0m[32m16[0m-
[0m[32m17[0m-    # Find any keys that aren't in the allowed list
[0m[32m18[0m-    invalid_keys = actual_keys - ALLOWED_TOP_LEVEL_KEYS
[0m[32m19[0m-
[0m[32m20[0m:    invalid_keys.map { |key| "#{[0m[1m[31mform[0m_name}: #{key}" }
[0m[32m21[0m-  end
[0m[32m22[0m-
[0m[32m23[0m:  it "only contains allowed top-level keys in [0m[1m[31mform[0m locale files" do
[0m[32m24[0m:    [0m[1m[31mform[0m_locale_dir = Rails.root.join("config/locales/[0m[1m[31mform[0ms")
[0m[32m25[0m:    [0m[1m[31mform[0m_files = Dir.glob([0m[1m[31mform[0m_locale_dir.join("*.en.yml"))
[0m[32m26[0m-
[0m[32m27[0m-    all_invalid_keys = []
[0m[32m28[0m-
[0m[32m29[0m:    [0m[1m[31mform[0m_files.each do |file|
[0m[32m30[0m:      invalid_keys = check_[0m[1m[31mform[0m_locale_file(file)
[0m[32m31[0m-      all_invalid_keys.concat(invalid_keys)
[0m[32m32[0m-    end
[0m[32m33[0m-
[0m[32m34[0m-    if all_invalid_keys.any?
[0m[32m35[0m:      fail_message = "Found invalid top-level keys in [0m[1m[31mform[0m locale files:\n"
[0m[32m36[0m-      fail_message += all_invalid_keys.map { |key| "  - #{key}" }.join("\n")
[0m[32m37[0m-      fail_message += "\n\nAllowed keys: #{ALLOWED_TOP_LEVEL_KEYS.join(", ")}"
--
[0m[32m41[0m-  end
[0m[32m42[0m-
[0m[32m43[0m:  it "lists all top-level keys found in [0m[1m[31mform[0m locale files" do
[0m[32m44[0m:    [0m[1m[31mform[0m_locale_dir = Rails.root.join("config/locales/[0m[1m[31mform[0ms")
[0m[32m45[0m:    [0m[1m[31mform[0m_files = Dir.glob([0m[1m[31mform[0m_locale_dir.join("*.en.yml"))
[0m[32m46[0m-
[0m[32m47[0m-    all_keys = {}
[0m[32m48[0m-
[0m[32m49[0m:    [0m[1m[31mform[0m_files.each do |file|
[0m[32m50[0m-      locale_data = YAML.load_file(file)
[0m[32m51[0m:      [0m[1m[31mform[0m_name = File.basename(file, ".en.yml")
[0m[32m52[0m:      [0m[1m[31mform[0m_data = locale_data.dig("en", "[0m[1m[31mform[0ms", [0m[1m[31mform[0m_name)
[0m[32m53[0m-
[0m[32m54[0m:      next unless [0m[1m[31mform[0m_data
[0m[32m55[0m-
[0m[32m56[0m:      all_keys[[0m[1m[31mform[0m_name] = [0m[1m[31mform[0m_data.keys.sort
[0m[32m57[0m-    end
[0m[32m58[0m-
[0m[32m59[0m:    # Verify each [0m[1m[31mform[0m has the required structure
[0m[32m60[0m:    all_keys.each do |[0m[1m[31mform[0m, keys|
[0m[32m61[0m:      # All [0m[1m[31mform[0ms should have at least 'fields' and 'header'
[0m[32m62[0m-      expect(keys).to include("fields", "header"),
[0m[32m63[0m:        "Form '#{[0m[1m[31mform[0m}' is missing required keys. Has: #{keys.join(", ")}"
[0m[32m64[0m-
[0m[32m65[0m-      # Forms should have a submit key
[0m[32m66[0m-      expect(keys).to include("submit"),
[0m[32m67[0m:        "Form '#{[0m[1m[31mform[0m}' is missing 'submit' key"
[0m[32m68[0m-    end
[0m[32m69[0m-  end

[0m[35mspec/features/assessment_forms/structure_assessment_form_spec.rb[0m
[0m[32m9[0m-
[0m[32m10[0m-  def field_prefix
[0m[32m11[0m:    "[0m[1m[31mform[0ms.structure.fields"
[0m[32m12[0m-  end
[0m[32m13[0m-
--
[0m[32m26[0m-  end
[0m[32m27[0m-
[0m[32m28[0m:  scenario "user can fill and save structure assessment [0m[1m[31mform[0m" do
[0m[32m29[0m-    visit edit_inspection_path(inspection, tab: "structure")
[0m[32m30[0m-
--
[0m[32m59[0m-    choose_structure_field :grounding_pass, true
[0m[32m60[0m-
[0m[32m61[0m:    click_button I18n.t("[0m[1m[31mform[0ms.structure.submit")
[0m[32m62[0m-
[0m[32m63[0m-    expect_updated_message

[0m[35mapp/services/pdf_generator_service/table_builder.rb[0m
[0m[32m149[0m-
[0m[32m150[0m-      if last_inspection
[0m[32m151[0m:        dimensions << "#{I18n.t("pdf.dimensions.width")}: #{Utilities.[0m[1m[31mform[0mat_dimension(last_inspection.width)}" if last_inspection.width.present?
[0m[32m152[0m:        dimensions << "#{I18n.t("pdf.dimensions.length")}: #{Utilities.[0m[1m[31mform[0mat_dimension(last_inspection.length)}" if last_inspection.length.present?
[0m[32m153[0m:        dimensions << "#{I18n.t("pdf.dimensions.height")}: #{Utilities.[0m[1m[31mform[0mat_dimension(last_inspection.height)}" if last_inspection.height.present?
[0m[32m154[0m-      end
[0m[32m155[0m-      dimensions_text = dimensions.any? ? dimensions.join(" ") : ""
--
[0m[32m159[0m-      totally_enclosed = last_inspection&.is_totally_enclosed? ? I18n.t("shared.yes") : I18n.t("shared.no")
[0m[32m160[0m-
[0m[32m161[0m:      # Use the same [0m[1m[31mform[0mat for both inspection and unit PDFs (the inspection [0m[1m[31mform[0mat is better)
[0m[32m162[0m-      [
[0m[32m163[0m-        [

[0m[35mspec/views/users/change_password.html.erb_spec.rb[0m
[0m[32m9[0m-  end
[0m[32m10[0m-
[0m[32m11[0m:  it "renders password change [0m[1m[31mform[0m" do
[0m[32m12[0m-    render
[0m[32m13[0m-
[0m[32m14[0m-    expect(rendered).to have_content(I18n.t("users.titles.change_password"))
[0m[32m15[0m:    expect(rendered).to have_field(I18n.t("users.[0m[1m[31mform[0ms.current_password"))
[0m[32m16[0m:    expect(rendered).to have_field(I18n.t("users.[0m[1m[31mform[0ms.password"))
[0m[32m17[0m:    expect(rendered).to have_field(I18n.t("users.[0m[1m[31mform[0ms.password_confirmation"))
[0m[32m18[0m-    expect(rendered).to have_button(I18n.t("users.buttons.update_password"))
[0m[32m19[0m-  end
--
[0m[32m33[0m-    render
[0m[32m34[0m-
[0m[32m35[0m:    expect(rendered).to have_field(I18n.t("users.[0m[1m[31mform[0ms.current_password"), type: "password")
[0m[32m36[0m:    expect(rendered).to have_field(I18n.t("users.[0m[1m[31mform[0ms.password"), type: "password")
[0m[32m37[0m:    expect(rendered).to have_field(I18n.t("users.[0m[1m[31mform[0ms.password_confirmation"), type: "password")
[0m[32m38[0m-  end
[0m[32m39[0m-
--
[0m[32m42[0m-
[0m[32m43[0m-    # Password fields should be empty (nil or empty string)
[0m[32m44[0m:    expect(rendered).to have_field(I18n.t("users.[0m[1m[31mform[0ms.current_password"))
[0m[32m45[0m:    expect(rendered).to have_field(I18n.t("users.[0m[1m[31mform[0ms.password"))
[0m[32m46[0m:    expect(rendered).to have_field(I18n.t("users.[0m[1m[31mform[0ms.password_confirmation"))
[0m[32m47[0m-
[0m[32m48[0m-    # Verify they don't have any pre-filled values
[0m[32m49[0m:    expect(rendered).not_to have_field(I18n.t("users.[0m[1m[31mform[0ms.current_password"), with: /\S/)
[0m[32m50[0m:    expect(rendered).not_to have_field(I18n.t("users.[0m[1m[31mform[0ms.password"), with: /\S/)
[0m[32m51[0m:    expect(rendered).not_to have_field(I18n.t("users.[0m[1m[31mform[0ms.password_confirmation"), with: /\S/)
[0m[32m52[0m-  end
[0m[32m53[0m-end

[0m[35mspec/lib/test_data_helpers_spec.rb[0m
[0m[32m3[0m-RSpec.describe TestDataHelpers do
[0m[32m4[0m-  describe ".british_phone_number" do
[0m[32m5[0m:    it "generates valid UK mobile number [0m[1m[31mform[0mat" do
[0m[32m6[0m-      phone = described_class.british_phone_number
[0m[32m7[0m-
--
[0m[32m31[0m-
[0m[32m32[0m-  describe ".british_postcode" do
[0m[32m33[0m:    it "generates valid UK postcode [0m[1m[31mform[0mat" do
[0m[32m34[0m-      postcode = described_class.british_postcode
[0m[32m35[0m-
[0m[32m36[0m:      # UK postcode [0m[1m[31mform[0mat: letters + numbers + space + number + two letters
[0m[32m37[0m-      expect(postcode).to match(/\A[A-Z]{1,2}\d{1,2} \d[A-Z]{2}\z/)
[0m[32m38[0m-    end

[0m[35mapp/services/json_serializer_service.rb[0m
[0m[32m1[0m-class JsonSerializerService
[0m[32m2[0m:  def self.[0m[1m[31mform[0mat_value(value)
[0m[32m3[0m-    case value
[0m[32m4[0m-    when Date, Time, DateTime
--
[0m[32m17[0m-    unit_fields.each do |field|
[0m[32m18[0m-      value = unit.send(field)
[0m[32m19[0m:      data[field.to_sym] = [0m[1m[31mform[0mat_value(value) unless value.nil?
[0m[32m20[0m-    end
[0m[32m21[0m-
--
[0m[32m26[0m-        data[:inspection_history] = completed_inspections.map do |inspection|
[0m[32m27[0m-          {
[0m[32m28[0m:            inspection_date: [0m[1m[31mform[0mat_value(inspection.inspection_date),
[0m[32m29[0m-            passed: inspection.passed,
[0m[32m30[0m-            complete: inspection.complete?,
--
[0m[32m36[0m-
[0m[32m37[0m-        data[:total_inspections] = completed_inspections.count
[0m[32m38[0m:        data[:last_inspection_date] = [0m[1m[31mform[0mat_value(completed_inspections.first&.inspection_date)
[0m[32m39[0m-        data[:last_inspection_passed] = completed_inspections.first&.passed
[0m[32m40[0m-      end
--
[0m[32m59[0m-    inspection_fields.each do |field|
[0m[32m60[0m-      value = inspection.send(field)
[0m[32m61[0m:      data[field.to_sym] = [0m[1m[31mform[0mat_value(value) unless value.nil?
[0m[32m62[0m-    end
[0m[32m63[0m-
--
[0m[32m106[0m-    assessment_fields.each do |field|
[0m[32m107[0m-      value = assessment.send(field)
[0m[32m108[0m:      data[field.to_sym] = [0m[1m[31mform[0mat_value(value) unless value.nil?
[0m[32m109[0m-    end
[0m[32m110[0m-

[0m[35mspec/views/form/_fieldset.html.erb_spec.rb[0m
[0m[32m1[0m-require "rails_helper"
[0m[32m2[0m-
[0m[32m3[0m:RSpec.describe "[0m[1m[31mform[0m/_fieldset.html.erb", type: :view do
[0m[32m4[0m:  let(:base_i18n_key) { "test.[0m[1m[31mform[0ms.fields" }
[0m[32m5[0m-
[0m[32m6[0m-  before do
--
[0m[32m8[0m-    I18n.backend.store_translations(:en, {
[0m[32m9[0m-      test: {
[0m[32m10[0m:        [0m[1m[31mform[0ms: {
[0m[32m11[0m-          sections: {
[0m[32m12[0m:            structure: "Structure In[0m[1m[31mform[0mation",
[0m[32m13[0m-            safety: "Safety Requirements",
[0m[32m14[0m-            materials: "Material Specifications"
--
[0m[32m22[0m-    it "renders a semantic fieldset element" do
[0m[32m23[0m-      assign(:content, "Sample field content")
[0m[32m24[0m:      stub_template "[0m[1m[31mform[0m/_fieldset.html.erb" => <<~ERB
[0m[32m25[0m-        <%
[0m[32m26[0m:          # Set [0m[1m[31mform[0m and i18n context for child [0m[1m[31mform[0m controls
[0m[32m27[0m:          @_current_[0m[1m[31mform[0m = local_assigns[:[0m[1m[31mform[0m] || @_current_[0m[1m[31mform[0m
[0m[32m28[0m-          i18n_base = local_assigns[:i18n_base]
[0m[32m29[0m:          raise ArgumentError, "i18n_base is required for [0m[1m[31mform[0m fieldsets" if i18n_base.nil?
[0m[32m30[0m-          @_current_i18n_base = i18n_base
[0m[32m31[0m-          
--
[0m[32m51[0m-      ERB
[0m[32m52[0m-
[0m[32m53[0m:      render partial: "[0m[1m[31mform[0m/fieldset", locals: {i18n_base: base_i18n_key, legend: "Test"}
[0m[32m54[0m-
[0m[32m55[0m-      expect(rendered).to have_css("fieldset")
--
[0m[32m64[0m-        allow(view).to receive(:render).and_return(rendered_html.html_safe)
[0m[32m65[0m-
[0m[32m66[0m:        render partial: "[0m[1m[31mform[0m/fieldset", locals: {i18n_base: base_i18n_key, legend: "Custom Legend"}
[0m[32m67[0m-
[0m[32m68[0m-        expect(rendered).to include("Custom Legend")
--
[0m[32m73[0m-        allow(view).to receive(:render).and_return(rendered_html.html_safe)
[0m[32m74[0m-
[0m[32m75[0m:        render partial: "[0m[1m[31mform[0m/fieldset", locals: {i18n_base: base_i18n_key, legend: ""}
[0m[32m76[0m-
[0m[32m77[0m-        expect(rendered).not_to include("<legend>")
--
[0m[32m81[0m-    context "with legend_key and i18n lookup" do
[0m[32m82[0m-      it "looks up legend text using i18n key" do
[0m[32m83[0m:        rendered_html = "<fieldset><legend>Structure In[0m[1m[31mform[0mation</legend>Content</fieldset>"
[0m[32m84[0m-        allow(view).to receive(:render).and_return(rendered_html.html_safe)
[0m[32m85[0m-
[0m[32m86[0m:        render partial: "[0m[1m[31mform[0m/fieldset", locals: {i18n_base: "test.[0m[1m[31mform[0ms.fields", legend_key: "structure"}
[0m[32m87[0m-
[0m[32m88[0m:        expect(rendered).to include("Structure In[0m[1m[31mform[0mation")
[0m[32m89[0m-      end
[0m[32m90[0m-
--
[0m[32m93[0m-        allow(view).to receive(:render).and_return(rendered_html.html_safe)
[0m[32m94[0m-
[0m[32m95[0m:        render partial: "[0m[1m[31mform[0m/fieldset", locals: {i18n_base: base_i18n_key, legend_key: "unknown_section"}
[0m[32m96[0m-
[0m[32m97[0m-        expect(rendered).to include("Unknown section")
--
[0m[32m105[0m-      allow(view).to receive(:render).and_return(rendered_html.html_safe)
[0m[32m106[0m-
[0m[32m107[0m:      render partial: "[0m[1m[31mform[0m/fieldset", locals: {i18n_base: base_i18n_key, legend: "Test"}
[0m[32m108[0m-
[0m[32m109[0m-      expect(rendered).not_to include("class=")
--
[0m[32m118[0m-      # we'll verify the partial expects this parameter
[0m[32m119[0m-      expect {
[0m[32m120[0m:        render partial: "[0m[1m[31mform[0m/fieldset", locals: {}
[0m[32m121[0m-      }.to raise_error(ActionView::Template::Error)
[0m[32m122[0m-    end
--
[0m[32m128[0m-      # Create a test wrapper template that uses the fieldset
[0m[32m129[0m-      stub_template "test_wrapper.html.erb" => <<~ERB
[0m[32m130[0m:        <%= render '[0m[1m[31mform[0m/fieldset', i18n_base: 'test.[0m[1m[31mform[0ms.fields', legend: 'Test Legend' do %>
[0m[32m131[0m-          <div>Test Content</div>
[0m[32m132[0m-        <% end %>
--
[0m[32m141[0m-    it "sets instance variables for child components" do
[0m[32m142[0m-      stub_template "test_wrapper.html.erb" => <<~ERB
[0m[32m143[0m:        <%= render '[0m[1m[31mform[0m/fieldset', i18n_base: 'custom.base', [0m[1m[31mform[0m: 'test_[0m[1m[31mform[0m' do %>
[0m[32m144[0m-          <div>Content</div>
[0m[32m145[0m-        <% end %>
--
[0m[32m153[0m-    it "handles legend_key with i18n lookup" do
[0m[32m154[0m-      stub_template "test_wrapper.html.erb" => <<~ERB
[0m[32m155[0m:        <%= render '[0m[1m[31mform[0m/fieldset', i18n_base: 'test.[0m[1m[31mform[0ms.fields', legend_key: 'structure' do %>
[0m[32m156[0m-          <div>Structure Content</div>
[0m[32m157[0m-        <% end %>
--
[0m[32m160[0m-      render template: "test_wrapper"
[0m[32m161[0m-
[0m[32m162[0m:      expect(rendered).to have_css("fieldset legend", text: "Structure In[0m[1m[31mform[0mation")
[0m[32m163[0m-      expect(rendered).to have_css("fieldset div", text: "Structure Content")
[0m[32m164[0m-    end
--
[0m[32m166[0m-    it "handles missing legend gracefully" do
[0m[32m167[0m-      stub_template "test_wrapper.html.erb" => <<~ERB
[0m[32m168[0m:        <%= render '[0m[1m[31mform[0m/fieldset', i18n_base: 'test.[0m[1m[31mform[0ms.fields' do %>
[0m[32m169[0m-          <div>No Legend Content</div>
[0m[32m170[0m-        <% end %>

[0m[35mapp/services/pdf_generator_service/utilities.rb[0m
[0m[32m8[0m-    end
[0m[32m9[0m-
[0m[32m10[0m:    def self.[0m[1m[31mform[0mat_dimension(value)
[0m[32m11[0m-      return "" if value.nil?
[0m[32m12[0m-      value.to_s.sub(/\.0$/, "")
[0m[32m13[0m-    end
[0m[32m14[0m-
[0m[32m15[0m:    def self.[0m[1m[31mform[0mat_pass_fail(value)
[0m[32m16[0m-      case value
[0m[32m17[0m-      when true then I18n.t("shared.pass_pdf")
--
[0m[32m21[0m-    end
[0m[32m22[0m-
[0m[32m23[0m:    def self.[0m[1m[31mform[0mat_measurement(value, unit = "")
[0m[32m24[0m-      return I18n.t("pdf.inspection.fields.na") if value.nil?
[0m[32m25[0m-      "#{value}#{unit}"

[0m[35mapp/services/image_processor_service.rb[0m
[0m[32m8[0m-
[0m[32m9[0m-    image.variant(
[0m[32m10[0m:      [0m[1m[31mform[0mat: :jpeg,
[0m[32m11[0m-      resize_to_limit: [FULL_SIZE, FULL_SIZE],
[0m[32m12[0m-      saver: {quality: 75}
--
[0m[32m18[0m-
[0m[32m19[0m-    image.variant(
[0m[32m20[0m:      [0m[1m[31mform[0mat: :jpeg,
[0m[32m21[0m-      resize_to_limit: [THUMBNAIL_SIZE, THUMBNAIL_SIZE],
[0m[32m22[0m-      saver: {quality: 75}
--
[0m[32m28[0m-
[0m[32m29[0m-    image.variant(
[0m[32m30[0m:      [0m[1m[31mform[0mat: :jpeg,
[0m[32m31[0m-      resize_to_limit: [DEFAULT_SIZE, DEFAULT_SIZE],
[0m[32m32[0m-      saver: {quality: 75}

[0m[35mspec/features/assessment_forms/structure_assessment_trough_fields_spec.rb[0m
[0m[32m8[0m-  before { sign_in(user) }
[0m[32m9[0m-
[0m[32m10[0m:  describe "structure assessment [0m[1m[31mform[0m" do
[0m[32m11[0m-    before { visit edit_inspection_path(inspection) }
[0m[32m12[0m-
--
[0m[32m21[0m-      visit edit_inspection_path(inspection, tab: "structure")
[0m[32m22[0m-
[0m[32m23[0m:      fill_in_[0m[1m[31mform[0m :structure, :trough_depth, "150"
[0m[32m24[0m:      fill_in_[0m[1m[31mform[0m :structure, :trough_adjacent_panel_width, "75"
[0m[32m25[0m-
[0m[32m26[0m:      click_button I18n.t("[0m[1m[31mform[0ms.structure.submit")
[0m[32m27[0m-
[0m[32m28[0m-      expect_updated_message

[0m[35mspec/services/pdf_generator_service/table_builder_spec.rb[0m
[0m[32m137[0m-    let(:data) { [["Description", "Test Unit", "Serial", "ABC123"]] }
[0m[32m138[0m-
[0m[32m139[0m:    it "adds title and [0m[1m[31mform[0matting" do
[0m[32m140[0m-      described_class.create_unit_details_table(pdf_double, title, data)
[0m[32m141[0m-
--
[0m[32m226[0m-    end
[0m[32m227[0m-
[0m[32m228[0m:    it "adds title and [0m[1m[31mform[0matting" do
[0m[32m229[0m-      described_class.create_inspection_history_table(pdf_double, title, inspections)
[0m[32m230[0m-
--
[0m[32m259[0m-    end
[0m[32m260[0m-
[0m[32m261[0m:    it "[0m[1m[31mform[0mats inspection data correctly" do
[0m[32m262[0m-      expected_data = [
[0m[32m263[0m-        [
--
[0m[32m346[0m-      let(:unit) { create(:unit, :with_all_fields) }
[0m[32m347[0m-
[0m[32m348[0m:      it "[0m[1m[31mform[0mats complete unit data correctly" do
[0m[32m349[0m-        result = described_class.build_unit_details_table(unit, "inspection")
[0m[32m350[0m-

[0m[35mspec/requests/companies/inspector_companies_spec.rb[0m
[0m[32m76[0m-      get inspector_companies_path
[0m[32m77[0m-      expect(response).to redirect_to(root_path)
[0m[32m78[0m:      expect(flash[:alert]).to include(I18n.t("[0m[1m[31mform[0ms.session_new.status.admin_required"))
[0m[32m79[0m-    end
[0m[32m80[0m-
--
[0m[32m208[0m-          expect(response).to have_http_status(:success)
[0m[32m209[0m-          expect(response.content_type).to include("text/vnd.turbo-stream.html")
[0m[32m210[0m:          expect(response.body).to include("[0m[1m[31mform[0m_save_message")
[0m[32m211[0m-          expect(response.body).to include(I18n.t("inspector_companies.messages.updated"))
[0m[32m212[0m-        end
--
[0m[32m221[0m-          expect(response).to have_http_status(:success)
[0m[32m222[0m-          expect(response.content_type).to include("text/vnd.turbo-stream.html")
[0m[32m223[0m:          expect(response.body).to include("[0m[1m[31mform[0m_save_message")
[0m[32m224[0m-          expect(response.body).to include(I18n.t("shared.messages.save_failed"))
[0m[32m225[0m-        end

[0m[35mspec/features/security/inactive_user_restrictions_spec.rb[0m
[0m[32m45[0m-    it "has full access without restrictions" do
[0m[32m46[0m-      visit new_unit_path
[0m[32m47[0m:      expect(page).to have_content(I18n.t("[0m[1m[31mform[0ms.units.header"))
[0m[32m48[0m-      expect(page).not_to have_content(I18n.t("users.messages.user_inactive"))
[0m[32m49[0m-
[0m[32m50[0m-      visit edit_unit_path(unit)
[0m[32m51[0m:      expect(page).to have_content(I18n.t("[0m[1m[31mform[0ms.units.header"))
[0m[32m52[0m-    end
[0m[32m53[0m-  end

[0m[35mspec/features/ui/filter_visibility_spec.rb[0m
[0m[32m11[0m-  describe "inspections index page" do
[0m[32m12[0m-    context "when user has no inspections and no units" do
[0m[32m13[0m:      scenario "does not show filter [0m[1m[31mform[0m" do
[0m[32m14[0m-        visit inspections_path
[0m[32m15[0m-
[0m[32m16[0m:        expect_no_filter_[0m[1m[31mform[0m_for_inspections
[0m[32m17[0m-      end
[0m[32m18[0m-    end
--
[0m[32m23[0m-      end
[0m[32m24[0m-
[0m[32m25[0m:      scenario "shows filter [0m[1m[31mform[0m to allow filtering by unit" do
[0m[32m26[0m-        visit inspections_path
[0m[32m27[0m-
[0m[32m28[0m:        expect_inspections_filter_[0m[1m[31mform[0m_present
[0m[32m29[0m-      end
[0m[32m30[0m-    end
--
[0m[32m35[0m-      end
[0m[32m36[0m-
[0m[32m37[0m:      scenario "shows filter [0m[1m[31mform[0m" do
[0m[32m38[0m-        visit inspections_path
[0m[32m39[0m-
[0m[32m40[0m:        expect_inspections_filter_[0m[1m[31mform[0m_present
[0m[32m41[0m-      end
[0m[32m42[0m-    end
--
[0m[32m49[0m-      end
[0m[32m50[0m-
[0m[32m51[0m:      scenario "shows filter [0m[1m[31mform[0m with unit selector" do
[0m[32m52[0m-        visit inspections_path
[0m[32m53[0m-
[0m[32m54[0m:        expect_inspections_filter_[0m[1m[31mform[0m_present
[0m[32m55[0m-        expect(page).to have_select("unit_id")
[0m[32m56[0m-      end
--
[0m[32m60[0m-  describe "units index page" do
[0m[32m61[0m-    context "when user has no units" do
[0m[32m62[0m:      scenario "does not show filter [0m[1m[31mform[0m" do
[0m[32m63[0m-        visit units_path
[0m[32m64[0m-
[0m[32m65[0m:        expect_no_filter_[0m[1m[31mform[0m_for_units
[0m[32m66[0m-        expect(page).to have_content(I18n.t("units.messages.no_units_found"))
[0m[32m67[0m-      end
--
[0m[32m74[0m-      end
[0m[32m75[0m-
[0m[32m76[0m:      scenario "shows filter [0m[1m[31mform[0m" do
[0m[32m77[0m-        visit units_path
[0m[32m78[0m-
[0m[32m79[0m:        expect_units_filter_[0m[1m[31mform[0m_present
[0m[32m80[0m-      end
[0m[32m81[0m-
--
[0m[32m98[0m-      end
[0m[32m99[0m-
[0m[32m100[0m:      scenario "shows filter [0m[1m[31mform[0m to allow clearing filters" do
[0m[32m101[0m-        visit units_path(manufacturer: "NonExistent Corp")
[0m[32m102[0m-
[0m[32m103[0m:        expect_units_filter_[0m[1m[31mform[0m_present
[0m[32m104[0m-        expect(page).to have_content(I18n.t("units.messages.no_units_found"))
[0m[32m105[0m-        expect(page).to have_link(I18n.t("ui.buttons.clear_filters"))
--
[0m[32m119[0m-    end
[0m[32m120[0m-
[0m[32m121[0m:    scenario "does not show filter [0m[1m[31mform[0m based on other user's data" do
[0m[32m122[0m-      visit inspections_path
[0m[32m123[0m:      expect_no_filter_[0m[1m[31mform[0m_for_inspections
[0m[32m124[0m-
[0m[32m125[0m-      visit units_path
[0m[32m126[0m:      expect_no_filter_[0m[1m[31mform[0m_for_units
[0m[32m127[0m-    end
[0m[32m128[0m-  end
--
[0m[32m130[0m-  private
[0m[32m131[0m-
[0m[32m132[0m:  def expect_no_filter_[0m[1m[31mform[0m_for_inspections
[0m[32m133[0m:    expect(page).not_to have_css("[0m[1m[31mform[0m[action='#{inspections_path}'][method='get']")
[0m[32m134[0m-    expect(page).not_to have_field("query")
[0m[32m135[0m-    expect(page).not_to have_select("result")
--
[0m[32m137[0m-  end
[0m[32m138[0m-
[0m[32m139[0m:  def expect_inspections_filter_[0m[1m[31mform[0m_present
[0m[32m140[0m:    expect(page).to have_css("[0m[1m[31mform[0m[action='#{inspections_path}'][method='get']")
[0m[32m141[0m-    expect(page).to have_field("query")
[0m[32m142[0m-    expect(page).to have_select("result")
[0m[32m143[0m-  end
[0m[32m144[0m-
[0m[32m145[0m:  def expect_no_filter_[0m[1m[31mform[0m_for_units
[0m[32m146[0m:    expect(page).not_to have_css("[0m[1m[31mform[0m[action='#{units_path}'][method='get']")
[0m[32m147[0m-    expect(page).not_to have_field("query")
[0m[32m148[0m-    expect(page).not_to have_select("status")
--
[0m[32m151[0m-  end
[0m[32m152[0m-
[0m[32m153[0m:  def expect_units_filter_[0m[1m[31mform[0m_present
[0m[32m154[0m:    expect(page).to have_css("[0m[1m[31mform[0m[action='#{units_path}'][method='get']")
[0m[32m155[0m-    expect(page).to have_field("query")
[0m[32m156[0m-    expect(page).to have_select("status")

[0m[35mspec/services/image_processor_service_spec.rb[0m
[0m[32m19[0m-
[0m[32m20[0m-        expect(variant).to be_a(ActiveStorage::VariantWithRecord)
[0m[32m21[0m:        expect(variant.variation.trans[0m[1m[31mform[0mations).to include(
[0m[32m22[0m-          resize_to_limit: [1200, 1200],
[0m[32m23[0m:          [0m[1m[31mform[0mat: :jpeg,
[0m[32m24[0m-          saver: {quality: 75}
[0m[32m25[0m-        )
--
[0m[32m30[0m-        expected_size = [ImageProcessorService::FULL_SIZE, ImageProcessorService::FULL_SIZE]
[0m[32m31[0m-
[0m[32m32[0m:        expect(variant.variation.trans[0m[1m[31mform[0mations[:resize_to_limit]).to eq(expected_size)
[0m[32m33[0m-      end
[0m[32m34[0m-    end
--
[0m[32m55[0m-
[0m[32m56[0m-        expect(variant).to be_a(ActiveStorage::VariantWithRecord)
[0m[32m57[0m:        expect(variant.variation.trans[0m[1m[31mform[0mations).to include(
[0m[32m58[0m-          resize_to_limit: [200, 200],
[0m[32m59[0m:          [0m[1m[31mform[0mat: :jpeg,
[0m[32m60[0m-          saver: {quality: 75}
[0m[32m61[0m-        )
--
[0m[32m66[0m-        expected_size = [ImageProcessorService::THUMBNAIL_SIZE, ImageProcessorService::THUMBNAIL_SIZE]
[0m[32m67[0m-
[0m[32m68[0m:        expect(variant.variation.trans[0m[1m[31mform[0mations[:resize_to_limit]).to eq(expected_size)
[0m[32m69[0m-      end
[0m[32m70[0m-    end
--
[0m[32m85[0m-
[0m[32m86[0m-        expect(variant).to be_a(ActiveStorage::VariantWithRecord)
[0m[32m87[0m:        expect(variant.variation.trans[0m[1m[31mform[0mations).to include(
[0m[32m88[0m-          resize_to_limit: [800, 800],
[0m[32m89[0m:          [0m[1m[31mform[0mat: :jpeg,
[0m[32m90[0m-          saver: {quality: 75}
[0m[32m91[0m-        )
--
[0m[32m96[0m-        expected_size = [ImageProcessorService::DEFAULT_SIZE, ImageProcessorService::DEFAULT_SIZE]
[0m[32m97[0m-
[0m[32m98[0m:        expect(variant.variation.trans[0m[1m[31mform[0mations[:resize_to_limit]).to eq(expected_size)
[0m[32m99[0m-      end
[0m[32m100[0m-    end

[0m[35mapp/services/pdf_generator_service.rb[0m
[0m[32m4[0m-  require_relative "pdf_generator_service/header_generator"
[0m[32m5[0m-  require_relative "pdf_generator_service/table_builder"
[0m[32m6[0m:  require_relative "pdf_generator_service/field_[0m[1m[31mform[0matter"
[0m[32m7[0m-  require_relative "pdf_generator_service/assessment_renderer"
[0m[32m8[0m-  require_relative "pdf_generator_service/position_calculator"
--
[0m[32m117[0m-  end
[0m[32m118[0m-
[0m[32m119[0m:  def self.[0m[1m[31mform[0mat_pass_fail(value)
[0m[32m120[0m:    Utilities.[0m[1m[31mform[0mat_pass_fail(value)
[0m[32m121[0m-  end
[0m[32m122[0m-
[0m[32m123[0m:  def self.[0m[1m[31mform[0mat_measurement(value, unit = "")
[0m[32m124[0m:    Utilities.[0m[1m[31mform[0mat_measurement(value, unit)
[0m[32m125[0m-  end
[0m[32m126[0m-end

[0m[35mspec/views/users/edit.html.erb_spec.rb[0m
[0m[32m10[0m-  end
[0m[32m11[0m-
[0m[32m12[0m:  it "renders edit user [0m[1m[31mform[0m" do
[0m[32m13[0m-    render
[0m[32m14[0m-
--
[0m[32m44[0m-  end
[0m[32m45[0m-
[0m[32m46[0m:  it "preserves [0m[1m[31mform[0m values on validation failure" do
[0m[32m47[0m-    user_to_edit.email = "invalid-email"
[0m[32m48[0m-    assign(:user, user_to_edit)

[0m[35mspec/views/form/_errors.html.erb_spec.rb[0m
[0m[32m1[0m-require "rails_helper"
[0m[32m2[0m-
[0m[32m3[0m:RSpec.describe "[0m[1m[31mform[0m/_errors.html.erb", type: :view do
[0m[32m4[0m-  let(:mock_model) { double("Model") }
[0m[32m5[0m-  let(:error_double) { double("Error") }
--
[0m[32m7[0m-  # Default render method with common setup
[0m[32m8[0m-  def render_errors(locals = {})
[0m[32m9[0m:    render partial: "[0m[1m[31mform[0m/errors", locals: {model: mock_model}.merge(locals)
[0m[32m10[0m-  end
[0m[32m11[0m-
--
[0m[32m17[0m-    allow(view).to receive(:pluralize).and_call_original
[0m[32m18[0m-
[0m[32m19[0m:    # Set up [0m[1m[31mform[0m context that errors partial expects
[0m[32m20[0m:    view.instance_variable_set(:@_current_i18n_base, "[0m[1m[31mform[0ms.inspection")
[0m[32m21[0m-
[0m[32m22[0m:    # Add i18n translations for [0m[1m[31mform[0m errors (this should exist in real [0m[1m[31mform[0ms)
[0m[32m23[0m-    I18n.backend.store_translations(:en, {
[0m[32m24[0m:      [0m[1m[31mform[0ms: {
[0m[32m25[0m-        inspections: {
[0m[32m26[0m-          errors: {
--
[0m[32m58[0m-        render_errors
[0m[32m59[0m-
[0m[32m60[0m:        expect(rendered).to have_css('aside.[0m[1m[31mform[0m-errors[role="alert"]')
[0m[32m61[0m-        expect(rendered).to have_css("h3")
[0m[32m62[0m-        expect(rendered).to have_css("ul")
--
[0m[32m90[0m-      it "attempts model-specific translation first" do
[0m[32m91[0m-        allow(view).to receive(:t)
[0m[32m92[0m:          .with("[0m[1m[31mform[0ms.inspection.errors.header", hash_including(count: 2, raise: true))
[0m[32m93[0m-          .and_return("Test Model Error Header")
[0m[32m94[0m-
--
[0m[32m99[0m-      it "falls back to generic errors.header translation" do
[0m[32m100[0m-        allow(view).to receive(:t)
[0m[32m101[0m:          .with("[0m[1m[31mform[0ms.inspection.errors.header", hash_including(count: 2, raise: true))
[0m[32m102[0m-          .and_return("Generic Error Header")
[0m[32m103[0m-
--
[0m[32m108[0m-      it "raises error when translation is missing (no fallback)" do
[0m[32m109[0m-        allow(view).to receive(:t)
[0m[32m110[0m:          .with("[0m[1m[31mform[0ms.inspection.errors.header", hash_including(count: 2, raise: true))
[0m[32m111[0m:          .and_raise(I18n::MissingTranslationData.new(:en, "[0m[1m[31mform[0ms.inspection.errors.header"))
[0m[32m112[0m-
[0m[32m113[0m-        expect { render_errors }.to raise_error(ActionView::Template::Error)
--
[0m[32m163[0m-      it "works with #{model_class_name} model" do
[0m[32m164[0m-        render_errors
[0m[32m165[0m:        expect(rendered).to have_css("aside.[0m[1m[31mform[0m-errors")
[0m[32m166[0m-        expect(rendered).to include("Test error")
[0m[32m167[0m-      end
--
[0m[32m177[0m-  describe "parameter validation" do
[0m[32m178[0m-    it "raises error when no model provided" do
[0m[32m179[0m:      expect { render partial: "[0m[1m[31mform[0m/errors", locals: {} }.to raise_error(ActionView::Template::Error, "model object is required for [0m[1m[31mform[0m errors")
[0m[32m180[0m-    end
[0m[32m181[0m-
[0m[32m182[0m-    it "raises error when model is nil" do
[0m[32m183[0m:      expect { render partial: "[0m[1m[31mform[0m/errors", locals: {model: nil} }.to raise_error(ActionView::Template::Error, "model object is required for [0m[1m[31mform[0m errors")
[0m[32m184[0m-    end
[0m[32m185[0m-
--
[0m[32m187[0m-      allow(mock_model).to receive(:errors).and_return(double("Errors", any?: false, count: 0))
[0m[32m188[0m-
[0m[32m189[0m:      expect { render partial: "[0m[1m[31mform[0m/errors", locals: {object: mock_model} }.not_to raise_error
[0m[32m190[0m-    end
[0m[32m191[0m-  end
--
[0m[32m208[0m-      render_errors
[0m[32m209[0m-
[0m[32m210[0m:      expect(rendered).to have_css("aside.[0m[1m[31mform[0m-errors")
[0m[32m211[0m-      expect(rendered).to have_css("h3")  # Heading for context
[0m[32m212[0m-      expect(rendered).to have_css("ul")  # Unordered list for errors

[0m[35mspec/views/users/index.html.erb_spec.rb[0m
[0m[32m22[0m-  end
[0m[32m23[0m-
[0m[32m24[0m:  it "displays user in[0m[1m[31mform[0mation in table" do
[0m[32m25[0m-    render
[0m[32m26[0m-

[0m[35mapp/services/seed_data_service.rb[0m
[0m[32m81[0m-        {name: "Assault Course Challenge", manufacturer: "Inflatable World Ltd", width: 3.0, length: 12.0, height: 3.5, has_slide: true},
[0m[32m82[0m-        {name: "Mega Slide Experience", manufacturer: "Airquee Manufacturing Ltd", width: 5.0, length: 15.0, height: 7.5, has_slide: true},
[0m[32m83[0m:        {name: "Gladiator Duel Plat[0m[1m[31mform[0m", manufacturer: "Happy Hop Europe", width: 6.0, length: 6.0, height: 1.5},
[0m[32m84[0m-        {name: "Double Bungee Run", manufacturer: "Party Castle Manufacturers", width: 4.0, length: 10.0, height: 2.5}
[0m[32m85[0m-      ]
--
[0m[32m210[0m-          "Critical safety deficiencies noted during inspection. Structural integrity compromised in several areas. Unit poses unacceptable risk to users and must be withdrawn from service.",
[0m[32m211[0m-          "Significant hazards identified including inadequate anchoring and material degradation. Risk level unacceptable for public use. Comprehensive repairs required before recertification.",
[0m[32m212[0m:          "Safety assessment failed. Multiple non-con[0m[1m[31mform[0mances with EN 14960:2019 identified. Unit presents substantial risk of injury. Recommend immediate decommissioning or major refurbishment.",
[0m[32m213[0m-          "High risk factors present including compromised seams and insufficient inflation. Unit unsafe for operation. Client advised to cease use pending extensive remedial work.",
[0m[32m214[0m-          "Risk evaluation reveals dangerous conditions. Emergency exits partially obstructed, significant wear to load-bearing elements. Unit fails safety standards and requires urgent attention.",

[0m[35mapp/services/safety_standard.rb[0m
[0m[32m20[0m-  # Anchor calculation constants (EN 14960:2019)
[0m[32m21[0m-  ANCHOR_CALCULATION_CONSTANTS = {
[0m[32m22[0m:    area_coefficient: 114.0,     # Area coefficient in anchor [0m[1m[31mform[0mula
[0m[32m23[0m-    base_divisor: 1600.0,        # Base divisor for anchor calculation
[0m[32m24[0m-    safety_factor: 1.5           # Safety factor multiplier
--
[0m[32m27[0m-  # Slide runout calculation constants (EN 14960:2019)
[0m[32m28[0m-  RUNOUT_CALCULATION_CONSTANTS = {
[0m[32m29[0m:    plat[0m[1m[31mform[0m_height_ratio: 0.5, # 50% of plat[0m[1m[31mform[0m height
[0m[32m30[0m-    minimum_runout_meters: 0.3   # Absolute minimum 300mm (0.3m)
[0m[32m31[0m-  }.freeze
--
[0m[32m90[0m-    slide_runout: {
[0m[32m91[0m-      type: "slide_runout",
[0m[32m92[0m:      plat[0m[1m[31mform[0m_height: 2.5
[0m[32m93[0m-    },
[0m[32m94[0m-    wall_height: {
--
[0m[32m105[0m-      result: {
[0m[32m106[0m-        required_anchors: 8,
[0m[32m107[0m:        [0m[1m[31mform[0mula_breakdown: [
[0m[32m108[0m-          ["Front/back area", "5.0m (W) × 3.0m (H) = 15.0m²"],
[0m[32m109[0m-          ["Sides area", "5.0m (L) × 3.0m (H) = 15.0m²"],
--
[0m[32m118[0m-      status: "Calculation completed successfully",
[0m[32m119[0m-      result: {
[0m[32m120[0m:        plat[0m[1m[31mform[0m_height: 2.5,
[0m[32m121[0m-        required_runout: 1.25,
[0m[32m122[0m-        calculation: "50% of 2.5m = 1.25m, minimum 0.3m = 1.25m"
--
[0m[32m148[0m-          input_unit: "m²",
[0m[32m149[0m-          output_unit: "anchors",
[0m[32m150[0m:          [0m[1m[31mform[0mula_text: anchor_[0m[1m[31mform[0mula_text,
[0m[32m151[0m-          standard_reference: "EN 14960:2019"
[0m[32m152[0m-        },
--
[0m[32m158[0m-          input_unit: "m",
[0m[32m159[0m-          output_unit: "m",
[0m[32m160[0m:          [0m[1m[31mform[0mula_text: slide_runout_[0m[1m[31mform[0mula_text,
[0m[32m161[0m-          standard_reference: "EN 14960:2019"
[0m[32m162[0m-        },
--
[0m[32m168[0m-          input_unit: "m",
[0m[32m169[0m-          output_unit: "requirement text",
[0m[32m170[0m:          [0m[1m[31mform[0mula_text: "Tiered requirements based on user height thresholds",
[0m[32m171[0m-          standard_reference: "EN 14960:2019"
[0m[32m172[0m-        }
--
[0m[32m174[0m-    end
[0m[32m175[0m-
[0m[32m176[0m:    def anchor_[0m[1m[31mform[0mula_text
[0m[32m177[0m-      area_coeff = ANCHOR_CALCULATION_CONSTANTS[:area_coefficient]
[0m[32m178[0m-      base_div = ANCHOR_CALCULATION_CONSTANTS[:base_divisor]
--
[0m[32m181[0m-    end
[0m[32m182[0m-
[0m[32m183[0m:    def slide_runout_[0m[1m[31mform[0mula_text
[0m[32m184[0m:      ratio_constant = RUNOUT_CALCULATION_CONSTANTS[:plat[0m[1m[31mform[0m_height_ratio]
[0m[32m185[0m-      height_ratio = (ratio_constant * 100).to_i
[0m[32m186[0m-      min_constant = RUNOUT_CALCULATION_CONSTANTS[:minimum_runout_meters]
[0m[32m187[0m-      min_runout = (min_constant * 1000).to_i
[0m[32m188[0m:      "#{height_ratio}% of plat[0m[1m[31mform[0m height, minimum #{min_runout}mm"
[0m[32m189[0m-    end
[0m[32m190[0m-
[0m[32m191[0m:    def calculate_required_runout(plat[0m[1m[31mform[0m_height)
[0m[32m192[0m-      # EN 14960:2019 - Minimum runout distance calculation using
[0m[32m193[0m-      # RUNOUT_CALCULATION_CONSTANTS for safe landing
[0m[32m194[0m:      return 0 if plat[0m[1m[31mform[0m_height.nil? || plat[0m[1m[31mform[0m_height <= 0
[0m[32m195[0m-
[0m[32m196[0m-      # Calculate using constants from RUNOUT_CALCULATION_CONSTANTS
[0m[32m197[0m:      height_ratio = RUNOUT_CALCULATION_CONSTANTS[:plat[0m[1m[31mform[0m_height_ratio]
[0m[32m198[0m-      minimum_runout = RUNOUT_CALCULATION_CONSTANTS[:minimum_runout_meters]
[0m[32m199[0m-
[0m[32m200[0m:      [plat[0m[1m[31mform[0m_height * height_ratio, minimum_runout].max
[0m[32m201[0m-    end
[0m[32m202[0m-
--
[0m[32m281[0m-        "For #{area_input}: #{result} #{output_unit} required"
[0m[32m282[0m-      when :slide_runout
[0m[32m283[0m:        plat[0m[1m[31mform[0m_height = metadata[:example_input]
[0m[32m284[0m:        result = calculate_required_runout(plat[0m[1m[31mform[0m_height)
[0m[32m285[0m-        input_unit = metadata[:input_unit]
[0m[32m286[0m:        plat[0m[1m[31mform[0m_desc = "#{plat[0m[1m[31mform[0m_height}#{input_unit} plat[0m[1m[31mform[0m"
[0m[32m287[0m-        output_unit = metadata[:output_unit]
[0m[32m288[0m:        "For #{plat[0m[1m[31mform[0m_desc}: #{result}#{output_unit} runout required"
[0m[32m289[0m-      when :wall_height
[0m[32m290[0m-        user_height = metadata[:example_input]
--
[0m[32m336[0m-    end
[0m[32m337[0m-
[0m[32m338[0m:    def meets_runout_requirements?(runout_length, plat[0m[1m[31mform[0m_height)
[0m[32m339[0m:      # EN 14960:2019 - Slide runout length must be minimum 50% of plat[0m[1m[31mform[0m
[0m[32m340[0m-      # height or 300mm, whichever is greater, to ensure safe deceleration
[0m[32m341[0m:      return false if runout_length.nil? || plat[0m[1m[31mform[0m_height.nil?
[0m[32m342[0m-
[0m[32m343[0m:      required_runout = calculate_required_runout(plat[0m[1m[31mform[0m_height)
[0m[32m344[0m-      runout_length >= required_runout
[0m[32m345[0m-    end
--
[0m[32m374[0m-      safety_mult = ANCHOR_CALCULATION_CONSTANTS[:safety_factor]
[0m[32m375[0m-
[0m[32m376[0m:      [0m[1m[31mform[0mula_front = "((#{front_area} × #{area_coeff} * #{safety_mult}) ÷ #{base_div}"
[0m[32m377[0m:      [0m[1m[31mform[0mula_sides = "((#{sides_area} × #{area_coeff} * #{safety_mult}) ÷ #{base_div}"
[0m[32m378[0m-
[0m[32m379[0m-      breakdown = [
--
[0m[32m385[0m-        ],
[0m[32m386[0m-        [
[0m[32m387[0m:          "Front & back anchor counts", "#{[0m[1m[31mform[0mula_front} = #{required_front}"
[0m[32m388[0m-        ],
[0m[32m389[0m-        [
[0m[32m390[0m:          "Left & right anchor counts", "#{[0m[1m[31mform[0mula_sides} = #{required_sides}"
[0m[32m391[0m-        ],
[0m[32m392[0m-        [
--
[0m[32m397[0m-      {
[0m[32m398[0m-        required_anchors: total_required,
[0m[32m399[0m:        [0m[1m[31mform[0mula_breakdown: breakdown
[0m[32m400[0m-      }
[0m[32m401[0m-    end
--
[0m[32m411[0m-        },
[0m[32m412[0m-        runout_requirements: {
[0m[32m413[0m:          minimum_length: "50% of highest plat[0m[1m[31mform[0m height",
[0m[32m414[0m-          absolute_minimum: "300mm in any case",
[0m[32m415[0m-          maximum_inclination: "Not more than 10°",

[0m[35mspec/features/assessment_forms/all_assessment_forms_save_spec.rb[0m
[0m[32m97[0m-
[0m[32m98[0m-  containing_wall_height: 2.5,
[0m[32m99[0m:  plat[0m[1m[31mform[0m_height: 1.8,
[0m[32m100[0m-  tallest_user_height: 1.95,
[0m[32m101[0m-  users_at_1000mm: 15,
--
[0m[32m108[0m-
[0m[32m109[0m-  containing_wall_height_comment: "Height adequate for tallest users",
[0m[32m110[0m:  plat[0m[1m[31mform[0m_height_comment: "Plat[0m[1m[31mform[0m height verified",
[0m[32m111[0m-  tallest_user_height_comment: "Maximum user height checked",
[0m[32m112[0m-  play_area_length_comment: "Length measurement confirmed",
--
[0m[32m117[0m-SLIDE_SAMPLE_DATA = {
[0m[32m118[0m-
[0m[32m119[0m:  slide_plat[0m[1m[31mform[0m_height: 3.2,
[0m[32m120[0m-  slide_wall_height: 1.1,
[0m[32m121[0m-  runout: 2.8,
--
[0m[32m128[0m-  slide_permanent_roof: true,
[0m[32m129[0m-
[0m[32m130[0m:  slide_plat[0m[1m[31mform[0m_height_comment: "Plat[0m[1m[31mform[0m height verified",
[0m[32m131[0m:  runout_comment: "Insufficient runout for plat[0m[1m[31mform[0m height",
[0m[32m132[0m-  clamber_netting_comment: "Netting secure and intact"
[0m[32m133[0m-}.freeze
--
[0m[32m145[0m-
[0m[32m146[0m-RSpec.feature "All Assessment Forms Save", type: :feature do
[0m[32m147[0m:  include_examples "assessment [0m[1m[31mform[0m save", :structure, STRUCTURE_SAMPLE_DATA
[0m[32m148[0m:  include_examples "assessment [0m[1m[31mform[0m save", :materials, MATERIALS_SAMPLE_DATA
[0m[32m149[0m:  include_examples "assessment [0m[1m[31mform[0m save", :anchorage, ANCHORAGE_SAMPLE_DATA
[0m[32m150[0m:  include_examples "assessment [0m[1m[31mform[0m save", :fan, FAN_SAMPLE_DATA
[0m[32m151[0m:  include_examples "assessment [0m[1m[31mform[0m save", :user_height, USER_HEIGHT_SAMPLE_DATA
[0m[32m152[0m:  include_examples "assessment [0m[1m[31mform[0m save", :slide, SLIDE_SAMPLE_DATA
[0m[32m153[0m:  include_examples "assessment [0m[1m[31mform[0m save", :enclosed, ENCLOSED_SAMPLE_DATA
[0m[32m154[0m-end

[0m[35mspec/features/users/user_rpii_field_access_spec.rb[0m
[0m[32m14[0m-      visit edit_user_path(target_user)
[0m[32m15[0m-
[0m[32m16[0m:      expect(find_[0m[1m[31mform[0m_field(:user_edit, :rpii_inspector_number).value).to eq("RPII-123")
[0m[32m17[0m-    end
[0m[32m18[0m-
--
[0m[32m20[0m-      visit edit_user_path(target_user)
[0m[32m21[0m-
[0m[32m22[0m:      fill_in_[0m[1m[31mform[0m :user_edit, :rpii_inspector_number, "RPII-456"
[0m[32m23[0m:      submit_[0m[1m[31mform[0m :user_edit
[0m[32m24[0m-
[0m[32m25[0m-      expect(page).to have_content(I18n.t("users.messages.user_updated"))
--
[0m[32m33[0m-
[0m[32m34[0m-      expect_field_present :user_edit, :rpii_inspector_number
[0m[32m35[0m:      fill_in_[0m[1m[31mform[0m :user_edit, :rpii_inspector_number, "RPII-789"
[0m[32m36[0m:      submit_[0m[1m[31mform[0m :user_edit
[0m[32m37[0m-
[0m[32m38[0m-      expect(page).to have_content(I18n.t("users.messages.user_updated"))
--
[0m[32m41[0m-    end
[0m[32m42[0m-
[0m[32m43[0m:    it "shows RPII field in new user registration [0m[1m[31mform[0m" do
[0m[32m44[0m-      visit new_user_path
[0m[32m45[0m-
--
[0m[32m63[0m-
[0m[32m64[0m-      expect(page).to have_current_path(root_path)
[0m[32m65[0m:      expect(page).to have_content(I18n.t("[0m[1m[31mform[0ms.session_new.status.admin_required"))
[0m[32m66[0m-    end
[0m[32m67[0m-
[0m[32m68[0m:    it "cannot update RPII inspector number via [0m[1m[31mform[0m submission" do
[0m[32m69[0m-      page.driver.submit :patch, user_path(regular_user), {
[0m[32m70[0m-        user: {
--
[0m[32m78[0m-    end
[0m[32m79[0m-
[0m[32m80[0m:    it "shows RPII field in new user registration [0m[1m[31mform[0m when logged out" do
[0m[32m81[0m-      logout
[0m[32m82[0m-      visit new_user_path
--
[0m[32m87[0m-
[0m[32m88[0m-  describe "Unauthenticated access" do
[0m[32m89[0m:    it "shows RPII field in new user registration [0m[1m[31mform[0m" do
[0m[32m90[0m-      visit new_user_path
[0m[32m91[0m-
--
[0m[32m96[0m-      visit new_user_path
[0m[32m97[0m-
[0m[32m98[0m:      fill_in_[0m[1m[31mform[0m :user_new, :email, "newuser@example.com"
[0m[32m99[0m:      fill_in_[0m[1m[31mform[0m :user_new, :name, "New Test User"
[0m[32m100[0m:      fill_in_[0m[1m[31mform[0m :user_new, :rpii_inspector_number, "RPII-NEW-123"
[0m[32m101[0m:      fill_in_[0m[1m[31mform[0m :user_new, :password, "password123"
[0m[32m102[0m:      fill_in_[0m[1m[31mform[0m :user_new, :password_confirmation, "password123"
[0m[32m103[0m-
[0m[32m104[0m:      submit_[0m[1m[31mform[0m :user_new
[0m[32m105[0m-
[0m[32m106[0m-      expect(page).to have_content(I18n.t("users.messages.account_created"))
--
[0m[32m114[0m-      visit new_user_path
[0m[32m115[0m-
[0m[32m116[0m:      fill_in_[0m[1m[31mform[0m :user_new, :email, "newuser@example.com"
[0m[32m117[0m:      fill_in_[0m[1m[31mform[0m :user_new, :name, "New Test User"
[0m[32m118[0m:      fill_in_[0m[1m[31mform[0m :user_new, :password, "password123"
[0m[32m119[0m:      fill_in_[0m[1m[31mform[0m :user_new, :password_confirmation, "password123"
[0m[32m120[0m-
[0m[32m121[0m:      submit_[0m[1m[31mform[0m :user_new
[0m[32m122[0m-
[0m[32m123[0m-      expect(page).to have_content(I18n.t("users.messages.account_created"))

[0m[35mspec/services/photo_processing_service_spec.rb[0m
[0m[32m48[0m-
[0m[32m49[0m-    it "converts images to JPEG with 75% quality" do
[0m[32m50[0m:      # Test with any image [0m[1m[31mform[0mat
[0m[32m51[0m-      image_path = Rails.root.join("spec", "fixtures", "files", "orientation_1_normal.jpg")
[0m[32m52[0m-      image_data = File.binread(image_path)

[0m[35mspec/features/companies/archived_company_user_restrictions_spec.rb[0m
[0m[32m41[0m-
[0m[32m42[0m-      expect(page).to have_content("Archived Company")
[0m[32m43[0m:      [0m[1m[31mform[0matted_date = existing_inspection.inspection_date&.strftime("%b %d, %Y") || "No date"
[0m[32m44[0m:      expect(page).to have_content([0m[1m[31mform[0matted_date)
[0m[32m45[0m-    end
[0m[32m46[0m-  end

[0m[35mspec/features/assessment_forms/user_height_assessment_form_spec.rb[0m
[0m[32m8[0m-
[0m[32m9[0m-  before do
[0m[32m10[0m:    login_user_via_[0m[1m[31mform[0m(user)
[0m[32m11[0m-  end
[0m[32m12[0m-
[0m[32m13[0m:  it_behaves_like "an assessment [0m[1m[31mform[0m", "user_height"
[0m[32m14[0m-
[0m[32m15[0m:  describe "filling out the user height assessment [0m[1m[31mform[0m" do
[0m[32m16[0m-    before do
[0m[32m17[0m-      visit edit_inspection_path(inspection, tab: "user_height")
[0m[32m18[0m-    end
[0m[32m19[0m-
[0m[32m20[0m:    it "displays all the required [0m[1m[31mform[0m fields" do
[0m[32m21[0m-      expect_field_present :user_height, :containing_wall_height
[0m[32m22[0m:      expect_field_present :user_height, :plat[0m[1m[31mform[0m_height
[0m[32m23[0m-      expect_field_present :user_height, :tallest_user_height
[0m[32m24[0m-
--
[0m[32m35[0m-    end
[0m[32m36[0m-
[0m[32m37[0m:    it "saves the assessment data when submitting the [0m[1m[31mform[0m" do
[0m[32m38[0m:      fill_in_[0m[1m[31mform[0m :user_height, :containing_wall_height, "2.5"
[0m[32m39[0m:      fill_in_[0m[1m[31mform[0m :user_height, :plat[0m[1m[31mform[0m_height, "1.0"
[0m[32m40[0m:      fill_in_[0m[1m[31mform[0m :user_height, :tallest_user_height, "1.8"
[0m[32m41[0m-
[0m[32m42[0m:      fill_in_[0m[1m[31mform[0m :user_height, :users_at_1000mm, "5"
[0m[32m43[0m:      fill_in_[0m[1m[31mform[0m :user_height, :users_at_1200mm, "4"
[0m[32m44[0m:      fill_in_[0m[1m[31mform[0m :user_height, :users_at_1500mm, "3"
[0m[32m45[0m:      fill_in_[0m[1m[31mform[0m :user_height, :users_at_1800mm, "2"
[0m[32m46[0m-
[0m[32m47[0m:      fill_in_[0m[1m[31mform[0m :user_height, :play_area_length, "10.0"
[0m[32m48[0m:      fill_in_[0m[1m[31mform[0m :user_height, :play_area_width, "8.0"
[0m[32m49[0m:      fill_in_[0m[1m[31mform[0m :user_height, :negative_adjustment, "2.0"
[0m[32m50[0m-
[0m[32m51[0m-      click_button I18n.t("inspections.buttons.save_assessment")
--
[0m[32m57[0m-      expect(assessment).to be_present
[0m[32m58[0m-      expect(assessment.containing_wall_height).to eq(2.5)
[0m[32m59[0m:      expect(assessment.plat[0m[1m[31mform[0m_height).to eq(1.0)
[0m[32m60[0m-      expect(assessment.tallest_user_height).to eq(1.8)
[0m[32m61[0m-      expect(assessment.users_at_1000mm).to eq(5)
--
[0m[32m69[0m-
[0m[32m70[0m-    it "displays validation errors for invalid data" do
[0m[32m71[0m:      fill_in_[0m[1m[31mform[0m :user_height, :containing_wall_height, "-1"
[0m[32m72[0m-
[0m[32m73[0m-      click_button I18n.t("inspections.buttons.save_assessment")
--
[0m[32m75[0m-      expect(page.status_code).to eq(422)
[0m[32m76[0m-
[0m[32m77[0m:      expect(page).to have_css(".[0m[1m[31mform[0m-errors")
[0m[32m78[0m-      expect(page).to have_content("Containing wall height must be greater than or equal to 0")
[0m[32m79[0m-

[0m[35mspec/services/pdf_generator_service/utilities_spec.rb[0m
[0m[32m49[0m-  end
[0m[32m50[0m-
[0m[32m51[0m:  describe ".[0m[1m[31mform[0mat_dimension" do
[0m[32m52[0m-    context "with nil value" do
[0m[32m53[0m-      it "returns empty string" do
[0m[32m54[0m:        expect(described_class.[0m[1m[31mform[0mat_dimension(nil)).to eq("")
[0m[32m55[0m-      end
[0m[32m56[0m-    end
--
[0m[32m58[0m-    context "with integer value" do
[0m[32m59[0m-      it "returns value as string" do
[0m[32m60[0m:        expect(described_class.[0m[1m[31mform[0mat_dimension(5)).to eq("5")
[0m[32m61[0m-      end
[0m[32m62[0m-    end
--
[0m[32m64[0m-    context "with decimal ending in .0" do
[0m[32m65[0m-      it "removes trailing .0" do
[0m[32m66[0m:        expect(described_class.[0m[1m[31mform[0mat_dimension(5.0)).to eq("5")
[0m[32m67[0m-      end
[0m[32m68[0m-    end
--
[0m[32m70[0m-    context "with decimal not ending in .0" do
[0m[32m71[0m-      it "preserves decimal places" do
[0m[32m72[0m:        expect(described_class.[0m[1m[31mform[0mat_dimension(5.5)).to eq("5.5")
[0m[32m73[0m-      end
[0m[32m74[0m-    end
[0m[32m75[0m-
[0m[32m76[0m-    context "with string value" do
[0m[32m77[0m:      it "processes string [0m[1m[31mform[0mat" do
[0m[32m78[0m:        expect(described_class.[0m[1m[31mform[0mat_dimension("10.0")).to eq("10")
[0m[32m79[0m:        expect(described_class.[0m[1m[31mform[0mat_dimension("10.5")).to eq("10.5")
[0m[32m80[0m-      end
[0m[32m81[0m-    end
[0m[32m82[0m-  end
[0m[32m83[0m-
[0m[32m84[0m:  describe ".[0m[1m[31mform[0mat_pass_fail" do
[0m[32m85[0m-    context "with true value" do
[0m[32m86[0m-      it "returns pass translation" do
[0m[32m87[0m:        expect(described_class.[0m[1m[31mform[0mat_pass_fail(true)).to eq(I18n.t("shared.pass_pdf"))
[0m[32m88[0m-      end
[0m[32m89[0m-    end
--
[0m[32m91[0m-    context "with false value" do
[0m[32m92[0m-      it "returns fail translation" do
[0m[32m93[0m:        expect(described_class.[0m[1m[31mform[0mat_pass_fail(false)).to eq(I18n.t("shared.fail_pdf"))
[0m[32m94[0m-      end
[0m[32m95[0m-    end
--
[0m[32m97[0m-    context "with nil value" do
[0m[32m98[0m-      it "returns N/A translation" do
[0m[32m99[0m:        expect(described_class.[0m[1m[31mform[0mat_pass_fail(nil)).to eq(I18n.t("pdf.inspection.fields.na"))
[0m[32m100[0m-      end
[0m[32m101[0m-    end
--
[0m[32m103[0m-    context "with other values" do
[0m[32m104[0m-      it "returns N/A translation for string" do
[0m[32m105[0m:        expect(described_class.[0m[1m[31mform[0mat_pass_fail("unknown")).to eq(I18n.t("pdf.inspection.fields.na"))
[0m[32m106[0m-      end
[0m[32m107[0m-
[0m[32m108[0m-      it "returns N/A translation for number" do
[0m[32m109[0m:        expect(described_class.[0m[1m[31mform[0mat_pass_fail(1)).to eq(I18n.t("pdf.inspection.fields.na"))
[0m[32m110[0m-      end
[0m[32m111[0m-    end
[0m[32m112[0m-  end
[0m[32m113[0m-
[0m[32m114[0m:  describe ".[0m[1m[31mform[0mat_measurement" do
[0m[32m115[0m-    context "with nil value" do
[0m[32m116[0m-      it "returns N/A translation" do
[0m[32m117[0m:        expect(described_class.[0m[1m[31mform[0mat_measurement(nil)).to eq(I18n.t("pdf.inspection.fields.na"))
[0m[32m118[0m:        expect(described_class.[0m[1m[31mform[0mat_measurement(nil, "m")).to eq(I18n.t("pdf.inspection.fields.na"))
[0m[32m119[0m-      end
[0m[32m120[0m-    end
--
[0m[32m122[0m-    context "with value and no unit" do
[0m[32m123[0m-      it "returns value as string" do
[0m[32m124[0m:        expect(described_class.[0m[1m[31mform[0mat_measurement(10)).to eq("10")
[0m[32m125[0m:        expect(described_class.[0m[1m[31mform[0mat_measurement(10.5)).to eq("10.5")
[0m[32m126[0m-      end
[0m[32m127[0m-    end
--
[0m[32m129[0m-    context "with value and unit" do
[0m[32m130[0m-      it "concatenates value and unit" do
[0m[32m131[0m:        expect(described_class.[0m[1m[31mform[0mat_measurement(10, "m")).to eq("10m")
[0m[32m132[0m:        expect(described_class.[0m[1m[31mform[0mat_measurement(25.5, "mm")).to eq("25.5mm")
[0m[32m133[0m-      end
[0m[32m134[0m-    end
--
[0m[32m136[0m-    context "with empty unit" do
[0m[32m137[0m-      it "returns just the value" do
[0m[32m138[0m:        expect(described_class.[0m[1m[31mform[0mat_measurement(15, "")).to eq("15")
[0m[32m139[0m-      end
[0m[32m140[0m-    end
[0m[32m141[0m-
[0m[32m142[0m-    context "with zero value" do
[0m[32m143[0m:      it "[0m[1m[31mform[0mats zero correctly" do
[0m[32m144[0m:        expect(described_class.[0m[1m[31mform[0mat_measurement(0)).to eq("0")
[0m[32m145[0m:        expect(described_class.[0m[1m[31mform[0mat_measurement(0, "kg")).to eq("0kg")
[0m[32m146[0m-      end
[0m[32m147[0m-    end

[0m[35mspec/views/users/new.html.erb_spec.rb[0m
[0m[32m7[0m-  end
[0m[32m8[0m-
[0m[32m9[0m:  it "renders new user [0m[1m[31mform[0m" do
[0m[32m10[0m-    render
[0m[32m11[0m-

[0m[35mspec/features/ui/json_links_spec.rb[0m
[0m[32m16[0m-    expect(page).to have_content("JSON")
[0m[32m17[0m-
[0m[32m18[0m:    visit unit_path(unit, [0m[1m[31mform[0mat: :pdf)
[0m[32m19[0m-    expect(page.status_code).to eq(200)
[0m[32m20[0m-
[0m[32m21[0m:    visit unit_path(unit, [0m[1m[31mform[0mat: :json)
[0m[32m22[0m-    expect(page.status_code).to eq(200)
[0m[32m23[0m-  end
--
[0m[32m29[0m-    expect(page).to have_content("JSON")
[0m[32m30[0m-
[0m[32m31[0m:    visit inspection_path(inspection, [0m[1m[31mform[0mat: :pdf)
[0m[32m32[0m-    expect(page.status_code).to eq(200)
[0m[32m33[0m-
[0m[32m34[0m:    visit inspection_path(inspection, [0m[1m[31mform[0mat: :json)
[0m[32m35[0m-    expect(page.status_code).to eq(200)
[0m[32m36[0m-  end
[0m[32m37[0m-
[0m[32m38[0m-  scenario "JSON links return valid JSON data" do
[0m[32m39[0m:    visit unit_url(unit, [0m[1m[31mform[0mat: :json)
[0m[32m40[0m-
[0m[32m41[0m-    json = JSON.parse(page.body)
--
[0m[32m43[0m-    expect(json["serial"]).to eq(unit.serial)
[0m[32m44[0m-
[0m[32m45[0m:    visit inspection_url(inspection, [0m[1m[31mform[0mat: :json)
[0m[32m46[0m-
[0m[32m47[0m-    json = JSON.parse(page.body)

[0m[35mspec/features/companies/inspector_company_management_spec.rb[0m
[0m[32m13[0m-      expect(page).to have_content(I18n.t("inspector_companies.titles.new"))
[0m[32m14[0m-
[0m[32m15[0m:      fill_in_[0m[1m[31mform[0m :inspector_companies, :name, "Test Inspection Company"
[0m[32m16[0m:      fill_in_[0m[1m[31mform[0m :inspector_companies, :email, "contact@testcompany.com"
[0m[32m17[0m:      fill_in_[0m[1m[31mform[0m :inspector_companies, :phone, "01234 567890"
[0m[32m18[0m:      fill_in_[0m[1m[31mform[0m :inspector_companies, :address, "123 Test Street\nTest City"
[0m[32m19[0m:      fill_in_[0m[1m[31mform[0m :inspector_companies, :city, "Test City"
[0m[32m20[0m:      fill_in_[0m[1m[31mform[0m :inspector_companies, :postal_code, "TE5 7ST"
[0m[32m21[0m:      fill_in_[0m[1m[31mform[0m :inspector_companies, :country, "UK"
[0m[32m22[0m:      check_[0m[1m[31mform[0m :inspector_companies, :active
[0m[32m23[0m:      fill_in_[0m[1m[31mform[0m :inspector_companies, :notes, "Admin notes for this company"
[0m[32m24[0m-
[0m[32m25[0m:      submit_[0m[1m[31mform[0m :inspector_companies
[0m[32m26[0m-
[0m[32m27[0m-      expect(page).to have_content(I18n.t("inspector_companies.messages.created"))
--
[0m[32m36[0m-    end
[0m[32m37[0m-
[0m[32m38[0m:    scenario "admin edits company details using turbo [0m[1m[31mform[0m" do
[0m[32m39[0m-      company = create(:inspector_company, name: "Original Company", email: "old@example.com")
[0m[32m40[0m-
--
[0m[32m42[0m-
[0m[32m43[0m-      expect(page).to have_content(I18n.t("inspector_companies.titles.edit"))
[0m[32m44[0m:      expect(page).to have_field(I18n.t("[0m[1m[31mform[0ms.inspector_companies.fields.name"), with: "Original Company")
[0m[32m45[0m-
[0m[32m46[0m:      fill_in_[0m[1m[31mform[0m :inspector_companies, :name, "Updated Company Name"
[0m[32m47[0m:      fill_in_[0m[1m[31mform[0m :inspector_companies, :email, "updated@example.com"
[0m[32m48[0m-
[0m[32m49[0m:      submit_[0m[1m[31mform[0m :inspector_companies
[0m[32m50[0m-
[0m[32m51[0m-      expect(page).to have_content(I18n.t("inspector_companies.messages.updated"))
--
[0m[32m57[0m-    end
[0m[32m58[0m-
[0m[32m59[0m:    scenario "admin sees validation errors via turbo [0m[1m[31mform[0m" do
[0m[32m60[0m-      company = create(:inspector_company, name: "Test Company")
[0m[32m61[0m-
[0m[32m62[0m-      visit edit_inspector_company_path(company)
[0m[32m63[0m-
[0m[32m64[0m:      fill_in_[0m[1m[31mform[0m :inspector_companies, :name, ""
[0m[32m65[0m:      fill_in_[0m[1m[31mform[0m :inspector_companies, :phone, ""
[0m[32m66[0m-
[0m[32m67[0m:      submit_[0m[1m[31mform[0m :inspector_companies
[0m[32m68[0m-
[0m[32m69[0m-      expect(page).to have_content("can't be blank")
[0m[32m70[0m:      expect_[0m[1m[31mform[0m_errors :inspector_companies, count: 2
[0m[32m71[0m-
[0m[32m72[0m-      expect(page).to have_content(I18n.t("inspector_companies.titles.edit"))
--
[0m[32m76[0m-      visit new_inspector_company_path
[0m[32m77[0m-
[0m[32m78[0m:      fill_in_[0m[1m[31mform[0m :inspector_companies, :name, "Logo Test Company"
[0m[32m79[0m:      fill_in_[0m[1m[31mform[0m :inspector_companies, :phone, "01234 567890"
[0m[32m80[0m:      fill_in_[0m[1m[31mform[0m :inspector_companies, :address, "Test Address"
[0m[32m81[0m-
[0m[32m82[0m:      attach_file I18n.t("[0m[1m[31mform[0ms.inspector_companies.fields.logo"),
[0m[32m83[0m-        Rails.root.join("spec", "fixtures", "files", "test_image.jpg")
[0m[32m84[0m-
[0m[32m85[0m:      submit_[0m[1m[31mform[0m :inspector_companies
[0m[32m86[0m-
[0m[32m87[0m-      expect(page).to have_content(I18n.t("inspector_companies.messages.created"))
--
[0m[32m149[0m-      visit inspector_companies_path
[0m[32m150[0m-
[0m[32m151[0m:      expect(page).to have_content(I18n.t("[0m[1m[31mform[0ms.session_new.status.admin_required"))
[0m[32m152[0m-      expect(page).to have_current_path(root_path)
[0m[32m153[0m-    end
--
[0m[32m156[0m-      visit new_inspector_company_path
[0m[32m157[0m-
[0m[32m158[0m:      expect(page).to have_content(I18n.t("[0m[1m[31mform[0ms.session_new.status.admin_required"))
[0m[32m159[0m-      expect(page).to have_current_path(root_path)
[0m[32m160[0m-    end
--
[0m[32m165[0m-      visit edit_inspector_company_path(company)
[0m[32m166[0m-
[0m[32m167[0m:      expect(page).to have_content(I18n.t("[0m[1m[31mform[0ms.session_new.status.admin_required"))
[0m[32m168[0m-      expect(page).to have_current_path(root_path)
[0m[32m169[0m-    end
--
[0m[32m184[0m-      visit new_inspector_company_path
[0m[32m185[0m-
[0m[32m186[0m:      submit_[0m[1m[31mform[0m :inspector_companies
[0m[32m187[0m-
[0m[32m188[0m-      expect(page).to have_content("can't be blank")
--
[0m[32m193[0m-      visit new_inspector_company_path
[0m[32m194[0m-
[0m[32m195[0m:      expect(page).to have_field(I18n.t("[0m[1m[31mform[0ms.inspector_companies.fields.country"), with: "UK")
[0m[32m196[0m-
[0m[32m197[0m:      fill_in_[0m[1m[31mform[0m :inspector_companies, :name, "UK Default Company"
[0m[32m198[0m:      fill_in_[0m[1m[31mform[0m :inspector_companies, :phone, "01234 567890"
[0m[32m199[0m:      fill_in_[0m[1m[31mform[0m :inspector_companies, :address, "Test Address"
[0m[32m200[0m-
[0m[32m201[0m:      submit_[0m[1m[31mform[0m :inspector_companies
[0m[32m202[0m-
[0m[32m203[0m-      company = InspectorCompany.find_by(name: "UK Default Company")
--
[0m[32m216[0m-      expect(page).to have_content(I18n.t("inspector_companies.titles.new"))
[0m[32m217[0m-
[0m[32m218[0m:      fill_in_[0m[1m[31mform[0m :inspector_companies, :name, "Navigation Test Company"
[0m[32m219[0m:      fill_in_[0m[1m[31mform[0m :inspector_companies, :phone, "01234 567890"
[0m[32m220[0m:      fill_in_[0m[1m[31mform[0m :inspector_companies, :address, "Test Address"
[0m[32m221[0m:      submit_[0m[1m[31mform[0m :inspector_companies
[0m[32m222[0m-
[0m[32m223[0m-      expect(page).to have_content("Navigation Test Company")
--
[0m[32m227[0m-      expect(page).to have_content(I18n.t("inspector_companies.titles.edit"))
[0m[32m228[0m-
[0m[32m229[0m:      fill_in_[0m[1m[31mform[0m :inspector_companies, :name, "Updated Navigation Company"
[0m[32m230[0m:      submit_[0m[1m[31mform[0m :inspector_companies
[0m[32m231[0m-
[0m[32m232[0m-      expect(page).to have_content(I18n.t("inspector_companies.messages.updated"))

[0m[35mspec/requests/security/inspection_status_access_spec.rb[0m
[0m[32m15[0m-
[0m[32m16[0m-      it "allows report access (now available for all statuses)" do
[0m[32m17[0m:        get inspection_path(draft_inspection, [0m[1m[31mform[0mat: :pdf)
[0m[32m18[0m-        expect(response).to have_http_status(:ok)
[0m[32m19[0m-      end
[0m[32m20[0m-
[0m[32m21[0m-      it "allows QR code access (now available for all statuses)" do
[0m[32m22[0m:        get inspection_path(draft_inspection, [0m[1m[31mform[0mat: :png)
[0m[32m23[0m-        expect(response).to have_http_status(:ok)
[0m[32m24[0m-      end
--
[0m[32m29[0m-
[0m[32m30[0m-      it "allows report access" do
[0m[32m31[0m:        get inspection_path(complete_inspection, [0m[1m[31mform[0mat: :pdf)
[0m[32m32[0m-        expect(response).to have_http_status(:success)
[0m[32m33[0m-        expect(response.content_type).to eq("application/pdf")
--
[0m[32m35[0m-
[0m[32m36[0m-      it "allows QR code access" do
[0m[32m37[0m:        get inspection_path(complete_inspection, [0m[1m[31mform[0mat: :png)
[0m[32m38[0m-        expect(response).to have_http_status(:success)
[0m[32m39[0m-        expect(response.content_type).to eq("image/png")

[0m[35mspec/views/form/_pass_fail.html.erb_spec.rb[0m
[0m[32m1[0m-require "rails_helper"
[0m[32m2[0m-
[0m[32m3[0m:# Test model for [0m[1m[31mform[0m specs
[0m[32m4[0m-class PassFailTestModel
[0m[32m5[0m-  include ActiveModel::Model
--
[0m[32m10[0m-end
[0m[32m11[0m-
[0m[32m12[0m:RSpec.describe "[0m[1m[31mform[0m/_pass_fail.html.erb", type: :view do
[0m[32m13[0m-  let(:test_model) { PassFailTestModel.new }
[0m[32m14[0m-  let(:field) { :status }
[0m[32m15[0m-
[0m[32m16[0m-  before do
[0m[32m17[0m:    view.[0m[1m[31mform[0m_with(model: test_model, url: "/", local: true) do |f|
[0m[32m18[0m:      @_current_[0m[1m[31mform[0m = f
[0m[32m19[0m-      ""
[0m[32m20[0m-    end
[0m[32m21[0m:    @_current_i18n_base = "test.[0m[1m[31mform[0ms"
[0m[32m22[0m-
[0m[32m23[0m-    I18n.backend.store_translations(:en, {
[0m[32m24[0m-      test: {
[0m[32m25[0m:        [0m[1m[31mform[0ms: {
[0m[32m26[0m-          fields: {
[0m[32m27[0m-            approved: "Approved",
--
[0m[32m42[0m-
[0m[32m43[0m-  def render_pass_fail(locals = {})
[0m[32m44[0m:    render partial: "[0m[1m[31mform[0m/pass_fail", locals: {field:}.merge(locals)
[0m[32m45[0m-  end
[0m[32m46[0m-
--
[0m[32m106[0m-    shared_examples "renders correctly for field" do |field_name, expected_label|
[0m[32m107[0m-      it "handles #{field_name} field" do
[0m[32m108[0m:        view.[0m[1m[31mform[0m_with(model: test_model, url: "/", local: true) do |f|
[0m[32m109[0m:          @_current_[0m[1m[31mform[0m = f
[0m[32m110[0m-          ""
[0m[32m111[0m-        end
[0m[32m112[0m-
[0m[32m113[0m:        render partial: "[0m[1m[31mform[0m/pass_fail", locals: {field: field_name}
[0m[32m114[0m-
[0m[32m115[0m-        expect(rendered).to have_css("div")

[0m[35mspec/requests/safety_standards/safety_standards_error_handling_spec.rb[0m
[0m[32m21[0m-
[0m[32m22[0m-    context "slide runout calculations" do
[0m[32m23[0m:      let(:params) { {calculation: {type: "slide_runout", plat[0m[1m[31mform[0m_height: 0}} }
[0m[32m24[0m-      include_examples "error response", "invalid_height"
[0m[32m25[0m-    end

[0m[35mapp/assets/stylesheets/buttons.css[0m
[0m[32m19[0m-}
[0m[32m20[0m-
[0m[32m21[0m:/* Style disabled submit buttons during [0m[1m[31mform[0m submission */
[0m[32m22[0m-button[type="submit"]:disabled,
[0m[32m23[0m-input[type="submit"]:disabled {

[0m[35mspec/features/inspections/inspections_index_spec.rb[0m
[0m[32m26[0m-
[0m[32m27[0m-  before do
[0m[32m28[0m:    login_user_via_[0m[1m[31mform[0m(user)
[0m[32m29[0m-  end
[0m[32m30[0m-
--
[0m[32m55[0m-      end
[0m[32m56[0m-
[0m[32m57[0m:      it "shows inspection date in readable [0m[1m[31mform[0mat" do
[0m[32m58[0m-        visit inspections_path
[0m[32m59[0m-

[0m[35mapp/assets/stylesheets/mvp.css[0m
[0m[32m390[0m-}
[0m[32m391[0m-
[0m[32m392[0m:main [0m[1m[31mform[0m {
[0m[32m393[0m-  border: 2px solid var(--color-bg-secondary);
[0m[32m394[0m-  border-radius: var(--border-radius);
--
[0m[32m407[0m-}
[0m[32m408[0m-
[0m[32m409[0m:[0m[1m[31mform[0m header {
[0m[32m410[0m-  margin: 0 0 1.5rem 0;
[0m[32m411[0m-  padding: 1.5rem;
--
[0m[32m414[0m-}
[0m[32m415[0m-
[0m[32m416[0m:[0m[1m[31mform[0m > header:nth-child(2) {
[0m[32m417[0m-  margin-top: -1.5rem;
[0m[32m418[0m-}
--
[0m[32m521[0m-  0% {
[0m[32m522[0m-    opacity: 0;
[0m[32m523[0m:    trans[0m[1m[31mform[0m: translateY(10%);
[0m[32m524[0m-  }
[0m[32m525[0m-
[0m[32m526[0m-  100% {
[0m[32m527[0m-    opacity: 1;
[0m[32m528[0m:    trans[0m[1m[31mform[0m: translateY(0);
[0m[32m529[0m-  }
[0m[32m530[0m-}

[0m[35mspec/features/companies/inspector_companies_spec.rb[0m
[0m[32m16[0m-    context "when logged in as regular user" do
[0m[32m17[0m-      before do
[0m[32m18[0m:        login_user_via_[0m[1m[31mform[0m(regular_user)
[0m[32m19[0m-      end
[0m[32m20[0m-
--
[0m[32m23[0m-
[0m[32m24[0m-        expect(page).to have_current_path(root_path)
[0m[32m25[0m:        expect(page).to have_content(I18n.t("[0m[1m[31mform[0ms.session_new.status.admin_required"))
[0m[32m26[0m-      end
[0m[32m27[0m-
--
[0m[32m33[0m-    context "when logged in as admin" do
[0m[32m34[0m-      before do
[0m[32m35[0m:        login_user_via_[0m[1m[31mform[0m(admin_user)
[0m[32m36[0m-      end
[0m[32m37[0m-
--
[0m[32m51[0m-  describe "Inspector Companies Index", js: false do
[0m[32m52[0m-    before do
[0m[32m53[0m:      login_user_via_[0m[1m[31mform[0m(admin_user)
[0m[32m54[0m-    end
[0m[32m55[0m-
--
[0m[32m110[0m-  describe "Creating Inspector Company" do
[0m[32m111[0m-    before do
[0m[32m112[0m:      login_user_via_[0m[1m[31mform[0m(admin_user)
[0m[32m113[0m-    end
[0m[32m114[0m-
[0m[32m115[0m:    it "displays the new company [0m[1m[31mform[0m" do
[0m[32m116[0m-      visit new_inspector_company_path
[0m[32m117[0m-
[0m[32m118[0m-      expect(page).to have_content(I18n.t("inspector_companies.titles.new"))
[0m[32m119[0m-
[0m[32m120[0m:      expect_[0m[1m[31mform[0m_matches_i18n("[0m[1m[31mform[0ms.inspector_companies")
[0m[32m121[0m-    end
[0m[32m122[0m-
--
[0m[32m124[0m-      visit new_inspector_company_path
[0m[32m125[0m-
[0m[32m126[0m:      fill_in_[0m[1m[31mform[0m :inspector_companies, :name, "Test Inspector Company"
[0m[32m127[0m:      fill_in_[0m[1m[31mform[0m :inspector_companies, :email, "test@example.com"
[0m[32m128[0m:      fill_in_[0m[1m[31mform[0m :inspector_companies, :phone, "01234567890"
[0m[32m129[0m:      fill_in_[0m[1m[31mform[0m :inspector_companies, :address, "123 Test Street"
[0m[32m130[0m:      fill_in_[0m[1m[31mform[0m :inspector_companies, :city, "Test City"
[0m[32m131[0m:      fill_in_[0m[1m[31mform[0m :inspector_companies, :state, "Test State"
[0m[32m132[0m:      fill_in_[0m[1m[31mform[0m :inspector_companies, :postal_code, "TE1 2ST"
[0m[32m133[0m:      check_[0m[1m[31mform[0m :inspector_companies, :active
[0m[32m134[0m:      fill_in_[0m[1m[31mform[0m :inspector_companies, :notes, "Test notes"
[0m[32m135[0m-
[0m[32m136[0m:      submit_[0m[1m[31mform[0m :inspector_companies
[0m[32m137[0m-
[0m[32m138[0m-      expect(page).to have_current_path(%r{/inspector_companies/\w+})
--
[0m[32m144[0m-      visit new_inspector_company_path
[0m[32m145[0m-
[0m[32m146[0m:      submit_[0m[1m[31mform[0m :inspector_companies
[0m[32m147[0m-
[0m[32m148[0m:      expect_[0m[1m[31mform[0m_errors :inspector_companies, count: 3
[0m[32m149[0m-      expect(page).to have_content("Name #{I18n.t("errors.messages.cant_be_blank")}")
[0m[32m150[0m-      expect(page).to have_content("Phone #{I18n.t("errors.messages.cant_be_blank")}")
--
[0m[32m157[0m-
[0m[32m158[0m-    before do
[0m[32m159[0m:      login_user_via_[0m[1m[31mform[0m(admin_user)
[0m[32m160[0m-    end
[0m[32m161[0m-
--
[0m[32m182[0m-
[0m[32m183[0m-    before do
[0m[32m184[0m:      login_user_via_[0m[1m[31mform[0m(admin_user)
[0m[32m185[0m-    end
[0m[32m186[0m-
[0m[32m187[0m:    it "displays the edit [0m[1m[31mform[0m with existing data" do
[0m[32m188[0m-      visit edit_inspector_company_path(company)
[0m[32m189[0m-
[0m[32m190[0m-      expect(page).to have_content(I18n.t("inspector_companies.titles.edit"))
[0m[32m191[0m:      expect(page).to have_field(I18n.t("[0m[1m[31mform[0ms.inspector_companies.fields.name"), with: company.name)
[0m[32m192[0m-
[0m[32m193[0m:      expect_[0m[1m[31mform[0m_matches_i18n("[0m[1m[31mform[0ms.inspector_companies")
[0m[32m194[0m-    end
[0m[32m195[0m-
--
[0m[32m197[0m-      visit edit_inspector_company_path(company)
[0m[32m198[0m-
[0m[32m199[0m:      fill_in_[0m[1m[31mform[0m :inspector_companies, :name, "Updated Company Name"
[0m[32m200[0m:      fill_in_[0m[1m[31mform[0m :inspector_companies, :phone, "09876543210"
[0m[32m201[0m-
[0m[32m202[0m:      submit_[0m[1m[31mform[0m :inspector_companies
[0m[32m203[0m-
[0m[32m204[0m-      expect(page).to have_current_path(inspector_company_path(company))
--
[0m[32m210[0m-  describe "Form accessibility and structure" do
[0m[32m211[0m-    before do
[0m[32m212[0m:      login_user_via_[0m[1m[31mform[0m(admin_user)
[0m[32m213[0m-    end
[0m[32m214[0m-
[0m[32m215[0m:    it "has proper [0m[1m[31mform[0m structure with i18n" do
[0m[32m216[0m-      visit new_inspector_company_path
[0m[32m217[0m-
[0m[32m218[0m:      expect_[0m[1m[31mform[0m_matches_i18n("[0m[1m[31mform[0ms.inspector_companies")
[0m[32m219[0m-    end
[0m[32m220[0m-
--
[0m[32m222[0m-      visit new_inspector_company_path
[0m[32m223[0m-
[0m[32m224[0m:      expect(find_field(I18n.t("inspector_companies.[0m[1m[31mform[0ms.name"))["required"]).to eq("required")
[0m[32m225[0m:      expect(find_field(I18n.t("inspector_companies.[0m[1m[31mform[0ms.phone"))["required"]).to eq("required")
[0m[32m226[0m:      expect(find_field(I18n.t("inspector_companies.[0m[1m[31mform[0ms.address"))["required"]).to eq("required")
[0m[32m227[0m-    end
[0m[32m228[0m-
--
[0m[32m230[0m-      visit new_inspector_company_path
[0m[32m231[0m-
[0m[32m232[0m:      expect(find_field(I18n.t("inspector_companies.[0m[1m[31mform[0ms.email"))[:type]).to eq("email")
[0m[32m233[0m:      expect(find_field(I18n.t("inspector_companies.[0m[1m[31mform[0ms.phone"))[:type]).to eq("tel")
[0m[32m234[0m:      expect(find_field(I18n.t("inspector_companies.[0m[1m[31mform[0ms.logo"))[:type]).to eq("file")
[0m[32m235[0m-    end
[0m[32m236[0m-  end

[0m[35mspec/features/pdfs/pdf_comprehensive_field_coverage_spec.rb[0m
[0m[32m11[0m-
[0m[32m12[0m-  scenario "renders all assessment fields in PDF" do
[0m[32m13[0m:    visit inspection_path(inspection, [0m[1m[31mform[0mat: :pdf)
[0m[32m14[0m-
[0m[32m15[0m-    pdf_content = extract_pdf_text(page.source)
--
[0m[32m18[0m-      assessment_type = assessment_key.to_s.sub(/_assessment$/, "")
[0m[32m19[0m-
[0m[32m20[0m:      header = I18n.t("[0m[1m[31mform[0ms.#{assessment_type}.header")
[0m[32m21[0m-      expect(pdf_content).to include(header), "Missing header for #{assessment_type}"
[0m[32m22[0m-
[0m[32m23[0m:      fields = I18n.t("[0m[1m[31mform[0ms.#{assessment_type}.fields")
[0m[32m24[0m-      assessment = inspection.send(assessment_key)
[0m[32m25[0m-
--
[0m[32m76[0m-      has_slide: true, is_totally_enclosed: true)
[0m[32m77[0m-
[0m[32m78[0m:    visit inspection_path(incomplete_inspection, [0m[1m[31mform[0mat: :pdf)
[0m[32m79[0m-    pdf_content = extract_pdf_text(page.source)
[0m[32m80[0m-
[0m[32m81[0m:    expect(pdf_content).to include(I18n.t("[0m[1m[31mform[0ms.user_height.header"))
[0m[32m82[0m:    expect(pdf_content).to include(I18n.t("[0m[1m[31mform[0ms.structure.header"))
[0m[32m83[0m:    expect(pdf_content).to include(I18n.t("[0m[1m[31mform[0ms.anchorage.header"))
[0m[32m84[0m:    expect(pdf_content).to include(I18n.t("[0m[1m[31mform[0ms.materials.header"))
[0m[32m85[0m:    expect(pdf_content).to include(I18n.t("[0m[1m[31mform[0ms.fan.header"))
[0m[32m86[0m:    expect(pdf_content).to include(I18n.t("[0m[1m[31mform[0ms.slide.header"))
[0m[32m87[0m:    expect(pdf_content).to include(I18n.t("[0m[1m[31mform[0ms.enclosed.header"))
[0m[32m88[0m-
[0m[32m89[0m:    expect(pdf_content).to include(I18n.t("[0m[1m[31mform[0ms.structure.fields.seam_integrity_pass"))
[0m[32m90[0m:    expect(pdf_content).to include(I18n.t("[0m[1m[31mform[0ms.anchorage.fields.num_low_anchors"))
[0m[32m91[0m:    expect(pdf_content).to include(I18n.t("[0m[1m[31mform[0ms.anchorage.fields.num_high_anchors"))
[0m[32m92[0m-  end
[0m[32m93[0m-

[0m[35mapp/assets/stylesheets/incomplete_fields.css[0m
[0m[32m69[0m-}
[0m[32m70[0m-
[0m[32m71[0m:#mark-as-complete [0m[1m[31mform[0m.button_to {
[0m[32m72[0m-	margin-bottom: 0;
[0m[32m73[0m-}

[0m[35mspec/requests/security/public_access_control_spec.rb[0m
[0m[32m127[0m-      visit inspections_path
[0m[32m128[0m-      expect(page.current_path).to eq(login_path)
[0m[32m129[0m:      expect(page).to have_content(I18n.t("[0m[1m[31mform[0ms.session_new.status.login_required"))
[0m[32m130[0m-    end
[0m[32m131[0m-
--
[0m[32m134[0m-      expect(page.current_path).to eq(inspection_path(inspection))
[0m[32m135[0m-      expect(page.html).to include("<iframe")
[0m[32m136[0m:      expect(page.html).to include(inspection_path(inspection, [0m[1m[31mform[0mat: :pdf))
[0m[32m137[0m-    end
[0m[32m138[0m-
--
[0m[32m151[0m-      expect(page.current_path).to eq(unit_path(unit))
[0m[32m152[0m-      expect(page.html).to include("<iframe")
[0m[32m153[0m:      expect(page.html).to include(unit_path(unit, [0m[1m[31mform[0mat: :pdf))
[0m[32m154[0m-    end
[0m[32m155[0m-
--
[0m[32m263[0m-    end
[0m[32m264[0m-
[0m[32m265[0m:    it "handles mal[0m[1m[31mform[0med requests gracefully" do
[0m[32m266[0m-      # Safety standards page handles GET requests with params
[0m[32m267[0m-      visit "#{safety_standards_path}?calculation[type]=invalid&calculation[value]=test"
--
[0m[32m283[0m-    end
[0m[32m284[0m-
[0m[32m285[0m:    it "does not leak user in[0m[1m[31mform[0mation in public JSON" do
[0m[32m286[0m-      visit "/inspections/#{inspection.id}.json"
[0m[32m287[0m-      json = JSON.parse(page.body)

[0m[35mapp/assets/stylesheets/safety_standards.css[0m
[0m[32m43[0m-}
[0m[32m44[0m-
[0m[32m45[0m:.[0m[1m[31mform[0mula-box,
[0m[32m46[0m-.source-code-box,
[0m[32m47[0m-.api-details-box {
--
[0m[32m53[0m-}
[0m[32m54[0m-
[0m[32m55[0m:.[0m[1m[31mform[0mula-box summary,
[0m[32m56[0m-.source-code-box summary,
[0m[32m57[0m-.api-details-box summary {
--
[0m[32m62[0m-}
[0m[32m63[0m-
[0m[32m64[0m:.[0m[1m[31mform[0mula-box summary:hover,
[0m[32m65[0m-.source-code-box summary:hover,
[0m[32m66[0m-.api-details-box summary:hover {
--
[0m[32m68[0m-}
[0m[32m69[0m-
[0m[32m70[0m:.[0m[1m[31mform[0mula-box > div,
[0m[32m71[0m-.source-code-box > div,
[0m[32m72[0m-.api-details-box > div {
--
[0m[32m76[0m-}
[0m[32m77[0m-
[0m[32m78[0m:.[0m[1m[31mform[0mula-box code {
[0m[32m79[0m-  background-color: #f8f9fa;
[0m[32m80[0m-  color: #e83e8c;
--
[0m[32m233[0m-  from {
[0m[32m234[0m-    opacity: 0;
[0m[32m235[0m:    trans[0m[1m[31mform[0m: translateY(10px);
[0m[32m236[0m-  }
[0m[32m237[0m-  to {
[0m[32m238[0m-    opacity: 1;
[0m[32m239[0m:    trans[0m[1m[31mform[0m: translateY(0);
[0m[32m240[0m-  }
[0m[32m241[0m-}

[0m[35mspec/features/users/rpii_verification_with_turbo_spec.rb[0m
[0m[32m78[0m-    visit edit_user_path(new_user)
[0m[32m79[0m-
[0m[32m80[0m:    fill_in I18n.t("users.[0m[1m[31mform[0ms.rpii_inspector_number"), with: ""
[0m[32m81[0m-    click_button I18n.t("users.buttons.update_user")
[0m[32m82[0m-

[0m[35mspec/features/pdfs/pdf_with_comments_spec.rb[0m
[0m[32m25[0m-
[0m[32m26[0m-    sign_in user
[0m[32m27[0m:    visit inspection_path(inspection, [0m[1m[31mform[0mat: :pdf)
[0m[32m28[0m-
[0m[32m29[0m-    pdf_content = extract_pdf_text(page.source)

[0m[35mapp/assets/stylesheets/radio_buttons.css[0m
[0m[32m24[0m-	border: 0.15em solid currentColor;
[0m[32m25[0m-	border-radius: 50%;
[0m[32m26[0m:	trans[0m[1m[31mform[0m: translateY(-0.075em);
[0m[32m27[0m-
[0m[32m28[0m-	/* Create the dot in the center */
--
[0m[32m39[0m-	height: 0.65em;
[0m[32m40[0m-	border-radius: 50%;
[0m[32m41[0m:	trans[0m[1m[31mform[0m: scale(0);
[0m[32m42[0m:	transition: 120ms trans[0m[1m[31mform[0m ease-in-out;
[0m[32m43[0m-	/* Use currentColor for IE fallback */
[0m[32m44[0m-	background-color: currentColor;
--
[0m[32m46[0m-
[0m[32m47[0m-input[type="radio"]:checked::before {
[0m[32m48[0m:	trans[0m[1m[31mform[0m: scale(1);
[0m[32m49[0m-}
[0m[32m50[0m-
--
[0m[32m83[0m-}
[0m[32m84[0m-
[0m[32m85[0m:.[0m[1m[31mform[0m-grid input[type="radio"] {
[0m[32m86[0m-	/* Prevent the radio from affecting grid layout */
[0m[32m87[0m-	vertical-align: middle;

[0m[35mspec/features/inspections/assessment_access_control_spec.rb[0m
[0m[32m10[0m-  let(:inspection2) { create(:inspection, user: user2, unit: unit2, unique_report_number: "TEST-REPORT-123") }
[0m[32m11[0m-
[0m[32m12[0m:  scenario "prevents viewing another user's inspection assessment [0m[1m[31mform[0m" do
[0m[32m13[0m-    sign_in(user1)
[0m[32m14[0m-    visit edit_inspection_path(inspection2)
--
[0m[32m37[0m-  end
[0m[32m38[0m-
[0m[32m39[0m:  scenario "prevents modifying assessment data through [0m[1m[31mform[0m manipulation" do
[0m[32m40[0m-    sign_in(user1)
[0m[32m41[0m-    visit edit_inspection_path(inspection1)
--
[0m[32m46[0m-        user_height_assessment_attributes: {
[0m[32m47[0m-          containing_wall_height: 999.99,
[0m[32m48[0m:          plat[0m[1m[31mform[0m_height: 888.88
[0m[32m49[0m-        }
[0m[32m50[0m-      }
--
[0m[32m56[0m-    assessment = inspection2.user_height_assessment
[0m[32m57[0m-    expect(assessment.containing_wall_height).not_to eq(999.99)
[0m[32m58[0m:    expect(assessment.plat[0m[1m[31mform[0m_height).not_to eq(888.88)
[0m[32m59[0m-  end
[0m[32m60[0m-
[0m[32m61[0m-  scenario "allows public access to inspection JSON data" do
[0m[32m62[0m-    sign_in(user1)
[0m[32m63[0m:    visit inspection_path(inspection2, [0m[1m[31mform[0mat: :json)
[0m[32m64[0m-    expect(page).to have_content(inspection2.inspection_location)
[0m[32m65[0m-    expect(page).not_to have_content(I18n.t("inspections.errors.access_denied"))
--
[0m[32m71[0m-    expect(page).to have_content("Edit Inspection")
[0m[32m72[0m-
[0m[32m73[0m:    fill_in_[0m[1m[31mform[0m(:anchorage, :num_low_anchors, "8")
[0m[32m74[0m:    fill_in_[0m[1m[31mform[0m(:anchorage, :num_high_anchors, "6")
[0m[32m75[0m-    click_button I18n.t("inspections.buttons.save_assessment")
[0m[32m76[0m-
--
[0m[32m85[0m-    sign_in(user1)
[0m[32m86[0m-    visit edit_inspection_path(inspection1, tab: "user_height")
[0m[32m87[0m:    fill_in I18n.t("[0m[1m[31mform[0ms.user_height.fields.containing_wall_height"), with: "2.5"
[0m[32m88[0m-    click_button I18n.t("inspections.buttons.save_assessment")
[0m[32m89[0m-    expect_updated_message
--
[0m[32m93[0m-    visit edit_inspection_path(inspection2, tab: "user_height")
[0m[32m94[0m-
[0m[32m95[0m:    wall_height_field = find_field(I18n.t("[0m[1m[31mform[0ms.user_height.fields.containing_wall_height"))
[0m[32m96[0m-    expect(wall_height_field.value).not_to eq("2.5")
[0m[32m97[0m-

[0m[35mspec/requests/home_spec.rb[0m
[0m[32m4[0m-# =====================================
[0m[32m5[0m-#
[0m[32m6[0m:# The Home controller manages the application's landing page and public in[0m[1m[31mform[0mation:
[0m[32m7[0m-#
[0m[32m8[0m-# PUBLIC ACCESS (no login required):
[0m[32m9[0m-# - GET / (root_path) - Shows application homepage with features and navigation
[0m[32m10[0m:# - GET /about - Shows about page with application in[0m[1m[31mform[0mation (if implemented)
[0m[32m11[0m-#
[0m[32m12[0m-# HOMEPAGE BEHAVIOR:
--
[0m[32m91[0m-
[0m[32m92[0m-      before do
[0m[32m93[0m:        login_user_via_[0m[1m[31mform[0m(user)
[0m[32m94[0m-      end
[0m[32m95[0m-
--
[0m[32m126[0m-    end
[0m[32m127[0m-
[0m[32m128[0m:    context "response headers and per[0m[1m[31mform[0mance" do
[0m[32m129[0m-      it "sets appropriate cache headers" do
[0m[32m130[0m-        visit root_path
[0m[32m131[0m:        # Home page should be cacheable for per[0m[1m[31mform[0mance
[0m[32m132[0m-        expect(page.response_headers["Cache-Control"]).to be_present
[0m[32m133[0m-      end
--
[0m[32m148[0m-
[0m[32m149[0m-    context "edge cases and error handling" do
[0m[32m150[0m:      it "handles mal[0m[1m[31mform[0med requests gracefully" do
[0m[32m151[0m-        visit "#{root_path}?invalid=data"
[0m[32m152[0m-        expect(page).to have_http_status(:success)
--
[0m[32m191[0m-
[0m[32m192[0m-      before do
[0m[32m193[0m:        login_user_via_[0m[1m[31mform[0m(user)
[0m[32m194[0m-      end
[0m[32m195[0m-

[0m[35mspec/features/pdfs/pdf_edge_cases_spec.rb[0m
[0m[32m10[0m-  end
[0m[32m11[0m-
[0m[32m12[0m:  feature "Large data sets and per[0m[1m[31mform[0mance" do
[0m[32m13[0m-    scenario "handles inspection with all assessment types and maximum data" do
[0m[32m14[0m-      full_unit = create(:unit, :with_all_fields, user: user)
--
[0m[32m19[0m-      full_inspection.user_height_assessment.update(
[0m[32m20[0m-        containing_wall_height_comment: long_comment,
[0m[32m21[0m:        plat[0m[1m[31mform[0m_height_comment: long_comment,
[0m[32m22[0m-        tallest_user_height_comment: long_comment
[0m[32m23[0m-      )
[0m[32m24[0m-
[0m[32m25[0m-      start_time = Time.current
[0m[32m26[0m:      pdf_text = test_pdf_content(inspection_path(full_inspection, [0m[1m[31mform[0mat: :pdf))
[0m[32m27[0m-      generation_time = Time.current - start_time
[0m[32m28[0m-
--
[0m[32m51[0m-      complete_inspection.user_height_assessment.update(
[0m[32m52[0m-        containing_wall_height_comment: "Wall height measured from ground level",
[0m[32m53[0m:        plat[0m[1m[31mform[0m_height_comment: "Plat[0m[1m[31mform[0m stable and level"
[0m[32m54[0m-      )
[0m[32m55[0m-      complete_inspection.slide_assessment.update(
[0m[32m56[0m:        slide_plat[0m[1m[31mform[0m_height_comment: "Plat[0m[1m[31mform[0m height measured accurately",
[0m[32m57[0m-        runout_comment: "Runout area clear and sufficient"
[0m[32m58[0m-      )
--
[0m[32m60[0m-      start_time = Time.current
[0m[32m61[0m-
[0m[32m62[0m:      pdf_data = get_pdf(inspection_path(complete_inspection, [0m[1m[31mform[0mat: :pdf))
[0m[32m63[0m-
[0m[32m64[0m-      generation_time = Time.current - start_time
--
[0m[32m70[0m-
[0m[32m71[0m-    scenario "generates PDFs with reasonable file sizes" do
[0m[32m72[0m:      pdf_data = get_pdf(inspection_path(inspection, [0m[1m[31mform[0mat: :pdf))
[0m[32m73[0m-      pdf_size = pdf_data.bytesize
[0m[32m74[0m-
--
[0m[32m84[0m-      10.times do
[0m[32m85[0m-        temp_files_before = Dir.glob(process_pattern).size
[0m[32m86[0m:        get_pdf(inspection_path(inspection, [0m[1m[31mform[0mat: :pdf))
[0m[32m87[0m-
[0m[32m88[0m-        sleep(0.01)

[0m[35mapp/assets/stylesheets/forms.css[0m
[0m[32m60[0m-  from {
[0m[32m61[0m-    opacity: 0;
[0m[32m62[0m:    trans[0m[1m[31mform[0m: translateY(-10px);
[0m[32m63[0m-  }
[0m[32m64[0m-  to {
[0m[32m65[0m-    opacity: 1;
[0m[32m66[0m:    trans[0m[1m[31mform[0m: translateY(0);
[0m[32m67[0m-  }
[0m[32m68[0m-}
--
[0m[32m90[0m-}
[0m[32m91[0m-
[0m[32m92[0m:.[0m[1m[31mform[0m-grid {
[0m[32m93[0m-  display: grid;
[0m[32m94[0m-  gap: 1rem;
--
[0m[32m97[0m-}
[0m[32m98[0m-
[0m[32m99[0m:[0m[1m[31mform[0m *:target {
[0m[32m100[0m-  animation: highlight-fade 5s ease-out forwards;
[0m[32m101[0m-  border-radius: 5px;
--
[0m[32m117[0m-}
[0m[32m118[0m-
[0m[32m119[0m:.[0m[1m[31mform[0m-grid input,
[0m[32m120[0m:.[0m[1m[31mform[0m-grid label {
[0m[32m121[0m-  margin: 0;
[0m[32m122[0m-  padding: 0;
[0m[32m123[0m-}
[0m[32m124[0m-
[0m[32m125[0m:.[0m[1m[31mform[0m-grid input[type="text"],
[0m[32m126[0m:.[0m[1m[31mform[0m-grid input[type="number"] {
[0m[32m127[0m-  padding: 0.4rem 0.8rem;
[0m[32m128[0m-}
[0m[32m129[0m-
[0m[32m130[0m:.[0m[1m[31mform[0m-grid input[type="number"],
[0m[32m131[0m:.[0m[1m[31mform[0m-grid input[type="text"][inputmode="decimal"] {
[0m[32m132[0m-  width: 5rem;
[0m[32m133[0m-  text-align: left;
--
[0m[32m136[0m-}
[0m[32m137[0m-
[0m[32m138[0m:.[0m[1m[31mform[0m-grid textarea {
[0m[32m139[0m-  margin: 0;
[0m[32m140[0m-  padding: 0.5rem 1rem;
[0m[32m141[0m-}
[0m[32m142[0m-
[0m[32m143[0m:.[0m[1m[31mform[0m-grid label {
[0m[32m144[0m-  display: flex;
[0m[32m145[0m-  flex-direction: row;
--
[0m[32m147[0m-}
[0m[32m148[0m-
[0m[32m149[0m:.[0m[1m[31mform[0m-grid .label {
[0m[32m150[0m-  line-height: 1.1rem;
[0m[32m151[0m-  text-wrap: balance;
[0m[32m152[0m-}
[0m[32m153[0m-
[0m[32m154[0m:.[0m[1m[31mform[0m-grid .pass-fail {
[0m[32m155[0m-  display: flex;
[0m[32m156[0m-  gap: 0.5rem;
[0m[32m157[0m-}
[0m[32m158[0m-
[0m[32m159[0m:.[0m[1m[31mform[0m-grid .pass-fail label {
[0m[32m160[0m-  display: flex;
[0m[32m161[0m-}

[0m[35mapp/assets/stylesheets/actions.css[0m
[0m[32m25[0m-}
[0m[32m26[0m-
[0m[32m27[0m:/* Override [0m[1m[31mform[0m.button_to styling within actions */
[0m[32m28[0m:.actions [0m[1m[31mform[0m.button_to {
[0m[32m29[0m-	margin: 0;
[0m[32m30[0m-	display: inline-block;
[0m[32m31[0m-}
[0m[32m32[0m-
[0m[32m33[0m:.actions [0m[1m[31mform[0m.button_to button {
[0m[32m34[0m-	margin: 0;
[0m[32m35[0m-}

[0m[35mapp/services/photo_processing_service.rb[0m
[0m[32m17[0m-
[0m[32m18[0m-      # Convert to JPEG with 75% quality
[0m[32m19[0m:      image.[0m[1m[31mform[0mat "jpeg"
[0m[32m20[0m-      image.quality "75"
[0m[32m21[0m-

[0m[35mspec/requests/security/admin_user_company_spec.rb[0m
[0m[32m55[0m-      get edit_user_path(user_with_company)
[0m[32m56[0m-
[0m[32m57[0m:      expect(response.body).to include(I18n.t("users.[0m[1m[31mform[0ms.no_company"))
[0m[32m58[0m:      expect(response.body).to include("<option value=\"\">#{I18n.t("users.[0m[1m[31mform[0ms.no_company")}</option>")
[0m[32m59[0m-    end
[0m[32m60[0m-
--
[0m[32m68[0m-      get edit_user_path(user_without_company)
[0m[32m69[0m-
[0m[32m70[0m:      expect(response.body).to include("<option selected=\"selected\" value=\"\">#{I18n.t("users.[0m[1m[31mform[0ms.no_company")}</option>")
[0m[32m71[0m-    end
[0m[32m72[0m-  end

[0m[35mspec/features/users/rpii_verification_spec.rb[0m
[0m[32m69[0m-
[0m[32m70[0m-    expect(page).not_to have_current_path(edit_user_path(user_with_invalid_rpii))
[0m[32m71[0m:    expect(page).to have_content(I18n.t("[0m[1m[31mform[0ms.session_new.status.admin_required"))
[0m[32m72[0m-  end
[0m[32m73[0m-
--
[0m[32m86[0m-    visit edit_user_path(user_with_mismatch)
[0m[32m87[0m-
[0m[32m88[0m:    expect(page).to have_field(I18n.t("users.[0m[1m[31mform[0ms.name"), with: "John Smith")
[0m[32m89[0m-
[0m[32m90[0m-    click_button I18n.t("users.buttons.verify_rpii")

[0m[35mapp/assets/stylesheets/dark_theme.css[0m
[0m[32m155[0m-
[0m[32m156[0m-/* Override specific bright box shadows */
[0m[32m157[0m:.dark-theme [0m[1m[31mform[0m,
[0m[32m158[0m-.dark-theme fieldset,
[0m[32m159[0m-.dark-theme .completion-status-notice {

[0m[35mspec/features/inspections/turbo_incomplete_fields_spec.rb[0m
[0m[32m22[0m-  end
[0m[32m23[0m-
[0m[32m24[0m:  scenario "incomplete fields count updates dynamically when saving [0m[1m[31mform[0m" do
[0m[32m25[0m-    visit edit_inspection_path(inspection)
[0m[32m26[0m-
--
[0m[32m31[0m-
[0m[32m32[0m-    # Fill in the missing field
[0m[32m33[0m:    fill_in I18n.t("[0m[1m[31mform[0ms.inspection.fields.inspection_location"), with: "Test Location"
[0m[32m34[0m-
[0m[32m35[0m:    # Submit the [0m[1m[31mform[0m
[0m[32m36[0m:    click_button I18n.t("[0m[1m[31mform[0ms.inspection.submit")
[0m[32m37[0m-
[0m[32m38[0m-    # Wait for Turbo to update the frame

[0m[35mspec/features/inspections/inspection_ui_and_accessibility_spec.rb[0m
[0m[32m7[0m-
[0m[32m8[0m-  before do
[0m[32m9[0m:    login_user_via_[0m[1m[31mform[0m(user)
[0m[32m10[0m-    visit edit_inspection_path(inspection)
[0m[32m11[0m-  end
--
[0m[32m14[0m-    # Check that all tabs are present
[0m[32m15[0m-    %w[inspection user_height structure anchorage materials fan slide enclosed].each do |tab|
[0m[32m16[0m:      expect(page).to have_content(I18n.t("[0m[1m[31mform[0ms.#{tab}.header"))
[0m[32m17[0m-    end
[0m[32m18[0m-
[0m[32m19[0m:    within("nav.tabs") { expect(page).to have_css("span", text: I18n.t("[0m[1m[31mform[0ms.inspection.header")) }
[0m[32m20[0m-
[0m[32m21[0m:    click_link I18n.t("[0m[1m[31mform[0ms.user_height.header")
[0m[32m22[0m-    expect(current_url).to include("tab=user_height")
[0m[32m23[0m:    within("nav.tabs") { expect(page).to have_css("span", text: I18n.t("[0m[1m[31mform[0ms.user_height.header")) }
[0m[32m24[0m-  end
[0m[32m25[0m-
[0m[32m26[0m-  scenario "conditionally shows tabs based on unit configuration" do
[0m[32m27[0m-    visit edit_inspection_path(create(:inspection, :without_slide, user: user))
[0m[32m28[0m:    expect(page).not_to have_content(I18n.t("[0m[1m[31mform[0ms.slide.header"))
[0m[32m29[0m-
[0m[32m30[0m-    visit edit_inspection_path(create(:inspection, :not_totally_enclosed, user: user))
[0m[32m31[0m:    expect(page).not_to have_content(I18n.t("[0m[1m[31mform[0ms.enclosed.header"))
[0m[32m32[0m-  end
[0m[32m33[0m-
[0m[32m34[0m:  scenario "displays [0m[1m[31mform[0m sections with proper content" do
[0m[32m35[0m:    within_fieldset("[0m[1m[31mform[0ms.inspection.sections.current_unit") do
[0m[32m36[0m-      expect(page).to have_content(unit.name)
[0m[32m37[0m-      expect(page).to have_content(unit.serial)
--
[0m[32m39[0m-    end
[0m[32m40[0m-
[0m[32m41[0m:    within_fieldset("[0m[1m[31mform[0ms.inspection.sections.public_in[0m[1m[31mform[0mation") do
[0m[32m42[0m-      expect(page).to have_content(I18n.t("inspections.fields.id"))
[0m[32m43[0m-      expect(page).to have_link(I18n.t("inspections.buttons.download_pdf"))
--
[0m[32m53[0m-    create(:unit, user: create(:user), serial: "OTHER001")
[0m[32m54[0m-
[0m[32m55[0m:    within_fieldset("[0m[1m[31mform[0ms.inspection.sections.current_unit") do
[0m[32m56[0m-      click_link I18n.t("inspections.buttons.change_unit")
[0m[32m57[0m-    end

[0m[35mspec/features/pdfs/pdf_content_spec.rb[0m
[0m[32m32[0m-      )
[0m[32m33[0m-
[0m[32m34[0m:      pdf_text = get_pdf_text(inspection_path(inspection, [0m[1m[31mform[0mat: :pdf))
[0m[32m35[0m-
[0m[32m36[0m-      expect_pdf_to_include_i18n_keys(pdf_text,
--
[0m[32m45[0m-      expect(pdf_text).to include(I18n.t("pdf.dimensions.height"))
[0m[32m46[0m-
[0m[32m47[0m:      expect(pdf_text).to include(I18n.t("[0m[1m[31mform[0ms.user_height.header"))
[0m[32m48[0m:      expect(pdf_text).to include(I18n.t("[0m[1m[31mform[0ms.structure.header"))
[0m[32m49[0m-
[0m[32m50[0m-      expect_pdf_to_include_i18n(pdf_text, "pdf.inspection.passed")
--
[0m[32m63[0m-      )
[0m[32m64[0m-
[0m[32m65[0m:      pdf_text = get_pdf_text(inspection_path(failed_inspection, [0m[1m[31mform[0mat: :pdf))
[0m[32m66[0m-
[0m[32m67[0m-      expect_pdf_to_include_i18n(pdf_text, "pdf.inspection.failed")
--
[0m[32m77[0m-        unit: special_unit)
[0m[32m78[0m-
[0m[32m79[0m:      text_content = get_pdf_text(inspection_path(inspection, [0m[1m[31mform[0mat: :pdf))
[0m[32m80[0m-
[0m[32m81[0m:      ASSESSMENT_FORMS.each do |[0m[1m[31mform[0m|
[0m[32m82[0m:        expect(text_content).to include(I18n.t("[0m[1m[31mform[0ms.#{[0m[1m[31mform[0m}.header"))
[0m[32m83[0m-      end
[0m[32m84[0m-    end
--
[0m[32m90[0m-        unit: unit)
[0m[32m91[0m-
[0m[32m92[0m:      pdf_text = get_pdf_text(inspection_path(inspection, [0m[1m[31mform[0mat: :pdf))
[0m[32m93[0m-
[0m[32m94[0m-      expect_pdf_to_include_i18n_keys(pdf_text,

[0m[35mspec/features/users/user_name_editing_permissions_spec.rb[0m
[0m[32m10[0m-    before { sign_in admin_user }
[0m[32m11[0m-
[0m[32m12[0m:    scenario "Admin can edit user names through admin edit [0m[1m[31mform[0m" do
[0m[32m13[0m-      visit edit_user_path(regular_user)
[0m[32m14[0m-
[0m[32m15[0m-      expect_field_present(:user_edit, :name)
[0m[32m16[0m:      expect(find_[0m[1m[31mform[0m_field(:user_edit, :name).value).to eq("Original Name")
[0m[32m17[0m-
[0m[32m18[0m:      fill_in_[0m[1m[31mform[0m(:user_edit, :name, "New Admin Changed Name")
[0m[32m19[0m:      submit_[0m[1m[31mform[0m(:user_edit)
[0m[32m20[0m-
[0m[32m21[0m-      expect(page).to have_content(I18n.t("users.messages.user_updated"))
--
[0m[32m25[0m-    end
[0m[32m26[0m-
[0m[32m27[0m:    scenario "Admin edit [0m[1m[31mform[0m includes all admin-only fields" do
[0m[32m28[0m-      visit edit_user_path(regular_user)
[0m[32m29[0m-
--
[0m[32m39[0m-    before { sign_in regular_user }
[0m[32m40[0m-
[0m[32m41[0m:    scenario "Regular user cannot access admin edit [0m[1m[31mform[0m" do
[0m[32m42[0m-      visit edit_user_path(regular_user)
[0m[32m43[0m-
[0m[32m44[0m:      expect(page).to have_content(I18n.t("[0m[1m[31mform[0ms.session_new.status.admin_required"))
[0m[32m45[0m-      expect(current_path).to eq(root_path)
[0m[32m46[0m-    end
[0m[32m47[0m-
[0m[32m48[0m:    scenario "Regular user cannot edit name in settings [0m[1m[31mform[0m" do
[0m[32m49[0m-      visit change_settings_user_path(regular_user)
[0m[32m50[0m-
--
[0m[32m78[0m-      expect_field_present(:user_settings, :theme)
[0m[32m79[0m-
[0m[32m80[0m:      theme_field = I18n.t("[0m[1m[31mform[0ms.user_settings.fields.theme")
[0m[32m81[0m-      select I18n.t("users.options.theme_dark"), from: theme_field
[0m[32m82[0m:      fill_in_[0m[1m[31mform[0m(:user_settings, :default_inspection_location, "Test Location")
[0m[32m83[0m:      submit_[0m[1m[31mform[0m(:user_settings)
[0m[32m84[0m-
[0m[32m85[0m-      expect(page).to have_content(I18n.t("users.messages.settings_updated"))

[0m[35mspec/features/inspections/inspection_prefill_comment_fields_spec.rb[0m
[0m[32m11[0m-    expect(field.value).to eq(expected_value.to_s)
[0m[32m12[0m-
[0m[32m13[0m:    [0m[1m[31mform[0m_grid = field.find(:xpath, "./ancestor::div[contains(@class, '[0m[1m[31mform[0m-grid')]")
[0m[32m14[0m-
[0m[32m15[0m:    within([0m[1m[31mform[0m_grid) do
[0m[32m16[0m-      comment_label = find("label", text: I18n.t("shared.comment"))
[0m[32m17[0m-      comment_checkbox = comment_label.find('input[type="checkbox"]')
--
[0m[32m30[0m-      width_comment: "Custom width measurement",
[0m[32m31[0m-      length: 4.0,
[0m[32m32[0m:      length_comment: "Length includes plat[0m[1m[31mform[0m")
[0m[32m33[0m-
[0m[32m34[0m-    first_inspection.structure_assessment.update!(
--
[0m[32m42[0m-    click_button I18n.t("units.buttons.add_inspection")
[0m[32m43[0m-
[0m[32m44[0m:    click_link I18n.t("[0m[1m[31mform[0ms.structure.header")
[0m[32m45[0m-
[0m[32m46[0m-    verify_field_and_comment(
[0m[32m47[0m:      I18n.t("[0m[1m[31mform[0ms.structure.fields.step_ramp_size"),
[0m[32m48[0m-      "12.5",
[0m[32m49[0m-      "Measured at steepest angle"
[0m[32m50[0m-    )
[0m[32m51[0m-
[0m[32m52[0m:    click_link I18n.t("[0m[1m[31mform[0ms.inspection.header")
[0m[32m53[0m-
[0m[32m54[0m-    verify_field_and_comment(
[0m[32m55[0m:      I18n.t("[0m[1m[31mform[0ms.inspection.fields.width"),
[0m[32m56[0m-      "5.0",
[0m[32m57[0m-      "Custom width measurement"
--
[0m[32m59[0m-
[0m[32m60[0m-    verify_field_and_comment(
[0m[32m61[0m:      I18n.t("[0m[1m[31mform[0ms.inspection.fields.length"),
[0m[32m62[0m-      "4.0",
[0m[32m63[0m:      "Length includes plat[0m[1m[31mform[0m"
[0m[32m64[0m-    )
[0m[32m65[0m-
[0m[32m66[0m:    click_button I18n.t("[0m[1m[31mform[0ms.inspection.submit")
[0m[32m67[0m-    expect_updated_message
[0m[32m68[0m-  end

[0m[35mspec/features/inspections/inspection_prefill_spec.rb[0m
[0m[32m23[0m-    expect(page).to have_current_path(edit_inspection_path(new_inspection))
[0m[32m24[0m-
[0m[32m25[0m:    location_field = find_[0m[1m[31mform[0m_field(:inspection, :inspection_location)
[0m[32m26[0m-    expect(location_field.value).to eq("Test Location")
[0m[32m27[0m-
--
[0m[32m29[0m-    # Just verify the field has the prefilled value
[0m[32m30[0m-
[0m[32m31[0m:    width_field = find_[0m[1m[31mform[0m_field(:inspection, :width)
[0m[32m32[0m-    expect(width_field.value).to eq("55555.0")
[0m[32m33[0m-
[0m[32m34[0m:    click_button I18n.t("[0m[1m[31mform[0ms.inspection.submit")
[0m[32m35[0m-    expect_updated_message
[0m[32m36[0m-
[0m[32m37[0m-    visit edit_inspection_path(new_inspection)
[0m[32m38[0m:    width_field = find_[0m[1m[31mform[0m_field(:inspection, :width)
[0m[32m39[0m-    expect(width_field.value).to eq("55555.0")
[0m[32m40[0m-
[0m[32m41[0m-    # The simplified HTML doesn't use set-previous class
[0m[32m42[0m-    # After save, the field should still have the value (now saved, not prefilled)
[0m[32m43[0m:    location_field = find_[0m[1m[31mform[0m_field(:inspection, :inspection_location)
[0m[32m44[0m-    expect(location_field.value).to eq("Test Location")
[0m[32m45[0m-  end

[0m[35mspec/features/pdfs/pdf_field_coverage_spec.rb[0m
[0m[32m20[0m-      inspection = create(:inspection, :completed, user: user, unit: unit)
[0m[32m21[0m-
[0m[32m22[0m:      text_content = get_pdf_text(inspection_path(inspection, [0m[1m[31mform[0mat: :pdf))
[0m[32m23[0m-
[0m[32m24[0m-      expect(text_content).to include(unit.name)
--
[0m[32m36[0m-      inspection.each_applicable_assessment do |assessment_key, _, _|
[0m[32m37[0m-        assessment_type = assessment_key.to_s.sub(/_assessment$/, "")
[0m[32m38[0m:        header = I18n.t("[0m[1m[31mform[0ms.#{assessment_type}.header")
[0m[32m39[0m-        expect(text_content).to include(header)
[0m[32m40[0m-      end
--
[0m[32m42[0m-      expect(text_content).to include("[PASS]") # Should have some passing assessments
[0m[32m43[0m-      expect(text_content).to include("1.2") # containing_wall_height
[0m[32m44[0m:      expect(text_content).to include("1.8") # plat[0m[1m[31mform[0m_height
[0m[32m45[0m-    end
[0m[32m46[0m-  end

[0m[35mspec/services/pdf_generator_service_spec.rb[0m
[0m[32m199[0m-    end
[0m[32m200[0m-
[0m[32m201[0m:    describe ".[0m[1m[31mform[0mat_pass_fail" do
[0m[32m202[0m:      it "[0m[1m[31mform[0mats true as Pass" do
[0m[32m203[0m:        expect(PdfGeneratorService.[0m[1m[31mform[0mat_pass_fail(true)).to eq(I18n.t("shared.pass_pdf"))
[0m[32m204[0m-      end
[0m[32m205[0m-
[0m[32m206[0m:      it "[0m[1m[31mform[0mats false as Fail" do
[0m[32m207[0m:        expect(PdfGeneratorService.[0m[1m[31mform[0mat_pass_fail(false)).to eq(I18n.t("shared.fail_pdf"))
[0m[32m208[0m-      end
[0m[32m209[0m-
[0m[32m210[0m:      it "[0m[1m[31mform[0mats nil as N/A" do
[0m[32m211[0m:        expect(PdfGeneratorService.[0m[1m[31mform[0mat_pass_fail(nil)).to eq(I18n.t("pdf.inspection.fields.na"))
[0m[32m212[0m-      end
[0m[32m213[0m-    end
[0m[32m214[0m-
[0m[32m215[0m:    describe ".[0m[1m[31mform[0mat_measurement" do
[0m[32m216[0m:      it "[0m[1m[31mform[0mats value with unit" do
[0m[32m217[0m:        expect(PdfGeneratorService.[0m[1m[31mform[0mat_measurement(5.5, "m")).to eq("5.5m")
[0m[32m218[0m-      end
[0m[32m219[0m-
[0m[32m220[0m:      it "[0m[1m[31mform[0mats value without unit" do
[0m[32m221[0m:        expect(PdfGeneratorService.[0m[1m[31mform[0mat_measurement(10)).to eq("10")
[0m[32m222[0m-      end
[0m[32m223[0m-
[0m[32m224[0m-      it "handles nil value" do
[0m[32m225[0m:        expect(PdfGeneratorService.[0m[1m[31mform[0mat_measurement(nil, "m")).to eq(I18n.t("pdf.inspection.fields.na"))
[0m[32m226[0m-      end
[0m[32m227[0m-    end

[0m[35mapp/assets/stylesheets/application.css[0m
[0m[32m17[0m-/* CSS Custom Properties for consistent theming */
[0m[32m18[0m-
[0m[32m19[0m:.search-[0m[1m[31mform[0m {
[0m[32m20[0m-	margin: 0 auto 2rem;
[0m[32m21[0m:	[0m[1m[31mform[0m {
[0m[32m22[0m-		padding: 0;
[0m[32m23[0m-		box-shadow: 0;
--
[0m[32m45[0m-}
[0m[32m46[0m-
[0m[32m47[0m:[0m[1m[31mform[0m.button_to {
[0m[32m48[0m-	border: none;
[0m[32m49[0m-	text-align: center;
--
[0m[32m54[0m-}
[0m[32m55[0m-
[0m[32m56[0m:.actions [0m[1m[31mform[0m.button_to,
[0m[32m57[0m:nav [0m[1m[31mform[0m.button_to {
[0m[32m58[0m-	margin: 0;
[0m[32m59[0m-	min-width: fit-content;
--
[0m[32m201[0m-
[0m[32m202[0m-.share-button:active {
[0m[32m203[0m:	trans[0m[1m[31mform[0m: translateY(1px);
[0m[32m204[0m-}
[0m[32m205[0m-
--
[0m[32m238[0m-}
[0m[32m239[0m-
[0m[32m240[0m:#dirty-[0m[1m[31mform[0m-indicator {
[0m[32m241[0m-	position: fixed;
[0m[32m242[0m-	top: 20px;
--
[0m[32m251[0m-
[0m[32m252[0m-@media (max-width: 769px) {
[0m[32m253[0m:	#dirty-[0m[1m[31mform[0m-indicator {
[0m[32m254[0m-		bottom: 0;
[0m[32m255[0m-		top: auto;
--
[0m[32m259[0m-		border-radius: 3px 3px 0 0;
[0m[32m260[0m-		border-bottom: 0;
[0m[32m261[0m:		trans[0m[1m[31mform[0m: translatex(-50%);
[0m[32m262[0m-	}
[0m[32m263[0m-}
[0m[32m264[0m-
[0m[32m265[0m:.dirty-[0m[1m[31mform[0m-content {
[0m[32m266[0m-	display: flex;
[0m[32m267[0m-	align-items: center;
--
[0m[32m269[0m-}
[0m[32m270[0m-
[0m[32m271[0m:.dirty-[0m[1m[31mform[0m-content span {
[0m[32m272[0m-	font-weight: bold;
[0m[32m273[0m-	color: var(--color-text);
[0m[32m274[0m-}
[0m[32m275[0m-
[0m[32m276[0m:.dirty-[0m[1m[31mform[0m-content button {
[0m[32m277[0m-	border: none;
[0m[32m278[0m-	padding: 6px 12px;

[0m[35mspec/requests/security/sessions_spec.rb[0m
[0m[32m5[0m-
[0m[32m6[0m-  describe "Login page" do
[0m[32m7[0m:    it "displays the login [0m[1m[31mform[0m" do
[0m[32m8[0m-      visit "/login"
[0m[32m9[0m-
[0m[32m10[0m:      expect_[0m[1m[31mform[0m_matches_i18n("[0m[1m[31mform[0ms.session_new")
[0m[32m11[0m-    end
[0m[32m12[0m-
--
[0m[32m21[0m-  describe "Successful login" do
[0m[32m22[0m-    it "authenticates user and redirects to root" do
[0m[32m23[0m:      login_user_via_[0m[1m[31mform[0m(user)
[0m[32m24[0m-
[0m[32m25[0m-      expect(page).to have_current_path(inspections_path)
--
[0m[32m30[0m-      visit "/login"
[0m[32m31[0m-
[0m[32m32[0m:      fill_in_[0m[1m[31mform[0m :session_new, :email, user.email.upcase
[0m[32m33[0m:      fill_in_[0m[1m[31mform[0m :session_new, :password, user.password
[0m[32m34[0m:      submit_[0m[1m[31mform[0m :session_new
[0m[32m35[0m-
[0m[32m36[0m-      expect(page).to have_current_path(inspections_path)
--
[0m[32m41[0m-      visit "/login"
[0m[32m42[0m-
[0m[32m43[0m:      fill_in_[0m[1m[31mform[0m :session_new, :email, user.email
[0m[32m44[0m:      fill_in_[0m[1m[31mform[0m :session_new, :password, user.password
[0m[32m45[0m:      check_[0m[1m[31mform[0m :session_new, :remember_me
[0m[32m46[0m:      submit_[0m[1m[31mform[0m :session_new
[0m[32m47[0m-
[0m[32m48[0m-      expect(page).to have_current_path(inspections_path)
--
[0m[32m53[0m-      visit "/login"
[0m[32m54[0m-
[0m[32m55[0m:      fill_in_[0m[1m[31mform[0m :session_new, :email, user.email
[0m[32m56[0m:      fill_in_[0m[1m[31mform[0m :session_new, :password, user.password
[0m[32m57[0m:      uncheck_[0m[1m[31mform[0m :session_new, :remember_me
[0m[32m58[0m:      submit_[0m[1m[31mform[0m :session_new
[0m[32m59[0m-
[0m[32m60[0m-      expect(page).to have_current_path(inspections_path)
--
[0m[32m65[0m-      # First login
[0m[32m66[0m-      visit "/login"
[0m[32m67[0m:      fill_in_[0m[1m[31mform[0m :session_new, :email, user.email
[0m[32m68[0m:      fill_in_[0m[1m[31mform[0m :session_new, :password, user.password
[0m[32m69[0m:      submit_[0m[1m[31mform[0m :session_new
[0m[32m70[0m-
[0m[32m71[0m-      expect(page).to have_current_path(inspections_path)
--
[0m[32m76[0m-      # Should redirect to inspections page
[0m[32m77[0m-      expect(page).to have_current_path(inspections_path)
[0m[32m78[0m:      expect(page).to have_content(I18n.t("[0m[1m[31mform[0ms.session_new.status.already_logged_in"))
[0m[32m79[0m-    end
[0m[32m80[0m-  end
--
[0m[32m84[0m-      visit "/login"
[0m[32m85[0m-
[0m[32m86[0m:      fill_in_[0m[1m[31mform[0m :session_new, :email, user.email
[0m[32m87[0m:      fill_in_[0m[1m[31mform[0m :session_new, :password, "wrongpassword"
[0m[32m88[0m:      submit_[0m[1m[31mform[0m :session_new
[0m[32m89[0m-
[0m[32m90[0m-      expect(page).to have_current_path("/login")
--
[0m[32m95[0m-      visit "/login"
[0m[32m96[0m-
[0m[32m97[0m:      fill_in_[0m[1m[31mform[0m :session_new, :email, "nonexistent@example.com"
[0m[32m98[0m:      fill_in_[0m[1m[31mform[0m :session_new, :password, user.password
[0m[32m99[0m:      submit_[0m[1m[31mform[0m :session_new
[0m[32m100[0m-
[0m[32m101[0m-      expect(page).to have_current_path("/login")
--
[0m[32m106[0m-      visit "/login"
[0m[32m107[0m-
[0m[32m108[0m:      fill_in_[0m[1m[31mform[0m :session_new, :email, ""
[0m[32m109[0m:      fill_in_[0m[1m[31mform[0m :session_new, :password, user.password
[0m[32m110[0m:      submit_[0m[1m[31mform[0m :session_new
[0m[32m111[0m-
[0m[32m112[0m-      expect(page).to have_current_path("/login")
--
[0m[32m117[0m-      visit "/login"
[0m[32m118[0m-
[0m[32m119[0m:      fill_in_[0m[1m[31mform[0m :session_new, :email, user.email
[0m[32m120[0m:      fill_in_[0m[1m[31mform[0m :session_new, :password, ""
[0m[32m121[0m:      submit_[0m[1m[31mform[0m :session_new
[0m[32m122[0m-
[0m[32m123[0m-      expect(page).to have_current_path("/login")
--
[0m[32m128[0m-      visit "/login"
[0m[32m129[0m-
[0m[32m130[0m:      fill_in_[0m[1m[31mform[0m :session_new, :email, user.email
[0m[32m131[0m:      fill_in_[0m[1m[31mform[0m :session_new, :password, "wrong"
[0m[32m132[0m:      submit_[0m[1m[31mform[0m :session_new
[0m[32m133[0m-
[0m[32m134[0m-      expect(page).to have_content(I18n.t("session.login.error"))
--
[0m[32m141[0m-      before do
[0m[32m142[0m-        visit "/login"
[0m[32m143[0m:        fill_in_[0m[1m[31mform[0m :session_new, :email, user.email
[0m[32m144[0m:        fill_in_[0m[1m[31mform[0m :session_new, :password, user.password
[0m[32m145[0m:        check_[0m[1m[31mform[0m :session_new, :remember_me
[0m[32m146[0m:        submit_[0m[1m[31mform[0m :session_new
[0m[32m147[0m-      end
[0m[32m148[0m-
--
[0m[32m178[0m-      visit "/login"
[0m[32m179[0m-
[0m[32m180[0m:      fill_in_[0m[1m[31mform[0m :session_new, :email, "nonexistent@example.com"
[0m[32m181[0m:      fill_in_[0m[1m[31mform[0m :session_new, :password, user.password
[0m[32m182[0m:      submit_[0m[1m[31mform[0m :session_new
[0m[32m183[0m-
[0m[32m184[0m-      expect(page).to have_content(I18n.t("session.login.error"))
[0m[32m185[0m-
[0m[32m186[0m:      fill_in_[0m[1m[31mform[0m :session_new, :email, user.email
[0m[32m187[0m:      fill_in_[0m[1m[31mform[0m :session_new, :password, "wrongpassword"
[0m[32m188[0m:      submit_[0m[1m[31mform[0m :session_new
[0m[32m189[0m-
[0m[32m190[0m-      expect(page).to have_content(I18n.t("session.login.error"))
--
[0m[32m196[0m-
[0m[32m197[0m-      visit "/login"
[0m[32m198[0m:      fill_in_[0m[1m[31mform[0m :session_new, :email, mixed_case_email
[0m[32m199[0m:      fill_in_[0m[1m[31mform[0m :session_new, :password, user.password
[0m[32m200[0m:      submit_[0m[1m[31mform[0m :session_new
[0m[32m201[0m-
[0m[32m202[0m-      expect(page).to have_current_path(inspections_path)

[0m[35mspec/views/form/_number.html.erb_spec.rb[0m
[0m[32m1[0m-require "rails_helper"
[0m[32m2[0m-
[0m[32m3[0m:RSpec.describe "[0m[1m[31mform[0m/_number.html.erb", type: :view do
[0m[32m4[0m:  let(:mock_[0m[1m[31mform[0m) { double("FormBuilder") }
[0m[32m5[0m-  let(:field) { :quantity }
[0m[32m6[0m-  let(:field_config) do
[0m[32m7[0m-    {
[0m[32m8[0m:      [0m[1m[31mform[0m_object: mock_[0m[1m[31mform[0m,
[0m[32m9[0m:      i18n_base: "test.[0m[1m[31mform[0ms",
[0m[32m10[0m-      field_label: "Quantity",
[0m[32m11[0m-      field_hint: "Enter a number",
--
[0m[32m16[0m-  # Default render method with common setup
[0m[32m17[0m-  def render_number_field(locals = {})
[0m[32m18[0m:    render partial: "[0m[1m[31mform[0m/number", locals: {field: field}.merge(locals)
[0m[32m19[0m-  end
[0m[32m20[0m-
[0m[32m21[0m-  before do
[0m[32m22[0m:    # Mock the [0m[1m[31mform[0m field setup helper
[0m[32m23[0m:    allow(view).to receive(:[0m[1m[31mform[0m_field_setup).and_return(field_config)
[0m[32m24[0m-
[0m[32m25[0m:    # Mock [0m[1m[31mform[0m builder methods with default behavior
[0m[32m26[0m:    allow(mock_[0m[1m[31mform[0m).to receive(:label)
[0m[32m27[0m-      .with(field, "Quantity")
[0m[32m28[0m-      .and_return('<label for="quantity">Quantity</label>'.html_safe)
[0m[32m29[0m-
[0m[32m30[0m:    allow(mock_[0m[1m[31mform[0m).to receive(:number_field)
[0m[32m31[0m-      .with(field, anything)
[0m[32m32[0m-      .and_return('<input type="number" name="quantity" id="quantity" />'.html_safe)
[0m[32m33[0m-
[0m[32m34[0m-    # Set current i18n base for the partial
[0m[32m35[0m:    view.instance_variable_set(:@_current_i18n_base, "test.[0m[1m[31mform[0ms")
[0m[32m36[0m-  end
[0m[32m37[0m-
--
[0m[32m43[0m-        expect(wrapper).to have_css('label[for="quantity"]', text: "Quantity")
[0m[32m44[0m-        expect(wrapper).to have_css('input[type="number"][name="quantity"][id="quantity"]')
[0m[32m45[0m:        expect(wrapper).to have_css("small.[0m[1m[31mform[0m-text", text: "Enter a number")
[0m[32m46[0m-      end
[0m[32m47[0m-    end
--
[0m[32m57[0m-      it "does not render the hint element" do
[0m[32m58[0m-        render_number_field
[0m[32m59[0m:        expect(rendered).not_to have_css("small.[0m[1m[31mform[0m-text")
[0m[32m60[0m-      end
[0m[32m61[0m-    end
--
[0m[32m64[0m-  describe "default behavior" do
[0m[32m65[0m-    it "applies default step of 0.01" do
[0m[32m66[0m:      allow(mock_[0m[1m[31mform[0m).to receive(:number_field)
[0m[32m67[0m-        .with(field, hash_including(step: 0.01))
[0m[32m68[0m-        .and_return('<input type="number" step="0.01" />'.html_safe)
[0m[32m69[0m-
[0m[32m70[0m-      render_number_field
[0m[32m71[0m:      expect(mock_[0m[1m[31mform[0m).to have_received(:number_field).with(field, hash_including(step: 0.01))
[0m[32m72[0m-    end
[0m[32m73[0m-
[0m[32m74[0m-    it "includes placeholder from field config" do
[0m[32m75[0m:      allow(mock_[0m[1m[31mform[0m).to receive(:number_field)
[0m[32m76[0m-        .with(field, hash_including(placeholder: "0"))
[0m[32m77[0m-        .and_return('<input type="number" placeholder="0" />'.html_safe)
[0m[32m78[0m-
[0m[32m79[0m-      render_number_field
[0m[32m80[0m:      expect(mock_[0m[1m[31mform[0m).to have_received(:number_field).with(field, hash_including(placeholder: "0"))
[0m[32m81[0m-    end
[0m[32m82[0m-  end
--
[0m[32m85[0m-    shared_examples "supports numeric attribute" do |attribute, value|
[0m[32m86[0m-      it "passes #{attribute} attribute to number field" do
[0m[32m87[0m:        allow(mock_[0m[1m[31mform[0m).to receive(:number_field)
[0m[32m88[0m-          .with(field, hash_including(attribute => value))
[0m[32m89[0m-          .and_return(%(<input type="number" #{attribute}="#{value}" />).html_safe)
--
[0m[32m103[0m-
[0m[32m104[0m-    it "supports multiple numeric attributes together" do
[0m[32m105[0m:      allow(mock_[0m[1m[31mform[0m).to receive(:number_field)
[0m[32m106[0m-        .with(field, hash_including(min: 0, max: 100, step: 5))
[0m[32m107[0m-        .and_return('<input type="number" min="0" max="100" step="5" />'.html_safe)
--
[0m[32m114[0m-  describe "CSS customization" do
[0m[32m115[0m-    it "applies custom CSS class to input field" do
[0m[32m116[0m:      allow(mock_[0m[1m[31mform[0m).to receive(:number_field)
[0m[32m117[0m-        .with(field, hash_including(class: "custom-control"))
[0m[32m118[0m-        .and_return('<input type="number" class="custom-control" />'.html_safe)
--
[0m[32m128[0m-  end
[0m[32m129[0m-
[0m[32m130[0m:  describe "[0m[1m[31mform[0m object handling" do
[0m[32m131[0m:    let(:other_[0m[1m[31mform[0m) { double("OtherFormBuilder") }
[0m[32m132[0m-
[0m[32m133[0m-    before do
[0m[32m134[0m:      allow(view).to receive(:[0m[1m[31mform[0m_field_setup).and_return(
[0m[32m135[0m:        field_config.merge([0m[1m[31mform[0m_object: other_[0m[1m[31mform[0m)
[0m[32m136[0m-      )
[0m[32m137[0m:      allow(other_[0m[1m[31mform[0m).to receive(:label).and_return("<label>Quantity</label>".html_safe)
[0m[32m138[0m:      allow(other_[0m[1m[31mform[0m).to receive(:number_field).and_return('<input type="number" />'.html_safe)
[0m[32m139[0m-    end
[0m[32m140[0m-
[0m[32m141[0m:    it "uses the [0m[1m[31mform[0m object returned by [0m[1m[31mform[0m_field_setup" do
[0m[32m142[0m:      render_number_field([0m[1m[31mform[0m: other_[0m[1m[31mform[0m)
[0m[32m143[0m-
[0m[32m144[0m:      expect(other_[0m[1m[31mform[0m).to have_received(:label)
[0m[32m145[0m:      expect(other_[0m[1m[31mform[0m).to have_received(:number_field)
[0m[32m146[0m:      expect(mock_[0m[1m[31mform[0m).not_to have_received(:label)
[0m[32m147[0m:      expect(mock_[0m[1m[31mform[0m).not_to have_received(:number_field)
[0m[32m148[0m-    end
[0m[32m149[0m-  end
--
[0m[32m153[0m-      it "handles #{field_name} field" do
[0m[32m154[0m-        # Update mocks for the new field
[0m[32m155[0m:        allow(mock_[0m[1m[31mform[0m).to receive(:label)
[0m[32m156[0m-          .with(field_name, expected_label)
[0m[32m157[0m-          .and_return(%(<label for="#{field_name}">#{expected_label}</label>).html_safe)
[0m[32m158[0m-
[0m[32m159[0m:        allow(mock_[0m[1m[31mform[0m).to receive(:number_field)
[0m[32m160[0m-          .with(field_name, anything)
[0m[32m161[0m-          .and_return(%(<input type="number" name="#{field_name}" id="#{field_name}" />).html_safe)
[0m[32m162[0m-
[0m[32m163[0m:        # Need to mock [0m[1m[31mform[0m_field_setup for the new field
[0m[32m164[0m:        allow(view).to receive(:[0m[1m[31mform[0m_field_setup).and_return(
[0m[32m165[0m-          field_config.merge(field_label: expected_label)
[0m[32m166[0m-        )
--
[0m[32m182[0m-    it "excludes nil values from options hash" do
[0m[32m183[0m-      # The partial should use compact to remove nil values
[0m[32m184[0m:      allow(mock_[0m[1m[31mform[0m).to receive(:number_field) do |field, options|
[0m[32m185[0m-        expect(options).not_to have_key(:min)
[0m[32m186[0m-        expect(options).not_to have_key(:max)
--
[0m[32m194[0m-
[0m[32m195[0m-    it "handles decimal step values correctly" do
[0m[32m196[0m:      allow(mock_[0m[1m[31mform[0m).to receive(:number_field)
[0m[32m197[0m-        .with(field, hash_including(step: 0.001))
[0m[32m198[0m-        .and_return('<input type="number" step="0.001" />'.html_safe)
--
[0m[32m203[0m-
[0m[32m204[0m-    it "supports 'any' as step value for unrestricted precision" do
[0m[32m205[0m:      allow(mock_[0m[1m[31mform[0m).to receive(:number_field)
[0m[32m206[0m-        .with(field, hash_including(step: "any"))
[0m[32m207[0m-        .and_return('<input type="number" step="any" />'.html_safe)

[0m[35mspec/requests/units/units_spec.rb[0m
[0m[32m1[0m-require "rails_helper"
[0m[32m2[0m-
[0m[32m3[0m:# Units Controller Request Tests ([0m[1m[31mform[0merly Equipment)
[0m[32m4[0m-# ==================================================
[0m[32m5[0m-#
--
[0m[32m25[0m-        expect(page).to have_current_path(unit_path(unit))
[0m[32m26[0m-        # When not logged in, the page shows an iframe with the PDF
[0m[32m27[0m:        expect(page).to have_css("iframe[src='#{unit_path(unit, [0m[1m[31mform[0mat: :pdf)}']")
[0m[32m28[0m-      end
[0m[32m29[0m-    end
--
[0m[32m39[0m-  describe "When logged in" do
[0m[32m40[0m-    before do
[0m[32m41[0m:      login_user_via_[0m[1m[31mform[0m(user)
[0m[32m42[0m-    end
[0m[32m43[0m-
--
[0m[32m110[0m-      end
[0m[32m111[0m-
[0m[32m112[0m:      it "displays manufacturer and owner in[0m[1m[31mform[0mation" do
[0m[32m113[0m-        test_unit = create(:unit, user: user, manufacturer: "ACME Corp", owner: "John Doe")
[0m[32m114[0m-
--
[0m[32m129[0m-
[0m[32m130[0m-    describe "GET /units/new" do
[0m[32m131[0m:      it "displays new unit [0m[1m[31mform[0m" do
[0m[32m132[0m-        visit new_unit_path
[0m[32m133[0m-        expect(page).to have_http_status(:success)
[0m[32m134[0m-        expect(page).to have_content(I18n.t("units.titles.new"))
[0m[32m135[0m-
[0m[32m136[0m:        expect_[0m[1m[31mform[0m_matches_i18n("[0m[1m[31mform[0ms.units")
[0m[32m137[0m-      end
[0m[32m138[0m-    end
--
[0m[32m142[0m-        visit new_unit_path
[0m[32m143[0m-
[0m[32m144[0m:        fill_in I18n.t("[0m[1m[31mform[0ms.units.fields.name"), with: "New Test Unit"
[0m[32m145[0m-        # Has slide checkbox defaults to unchecked
[0m[32m146[0m:        fill_in I18n.t("[0m[1m[31mform[0ms.units.fields.manufacturer"), with: "Test Manufacturer"
[0m[32m147[0m:        fill_in I18n.t("[0m[1m[31mform[0ms.units.fields.model"), with: "Test Model"
[0m[32m148[0m:        fill_in I18n.t("[0m[1m[31mform[0ms.units.fields.serial"), with: "NEWTEST123"
[0m[32m149[0m:        fill_in I18n.t("[0m[1m[31mform[0ms.units.fields.description"), with: "Test Description"
[0m[32m150[0m:        fill_in I18n.t("[0m[1m[31mform[0ms.units.fields.owner"), with: "Test Owner"
[0m[32m151[0m-
[0m[32m152[0m:        click_button I18n.t("[0m[1m[31mform[0ms.units.submit")
[0m[32m153[0m-
[0m[32m154[0m-        expect(page).to have_content(I18n.t("units.messages.created"))
--
[0m[32m164[0m-        visit new_unit_path
[0m[32m165[0m-
[0m[32m166[0m:        # Submit [0m[1m[31mform[0m with missing required fields
[0m[32m167[0m:        click_button I18n.t("[0m[1m[31mform[0ms.units.submit")
[0m[32m168[0m-
[0m[32m169[0m-        expect(page).to have_http_status(:unprocessable_entity)
[0m[32m170[0m:        expect_[0m[1m[31mform[0m_errors :units
[0m[32m171[0m-      end
[0m[32m172[0m-
--
[0m[32m176[0m-        visit new_unit_path
[0m[32m177[0m-
[0m[32m178[0m:        fill_in I18n.t("[0m[1m[31mform[0ms.units.fields.name"), with: "New Unit"
[0m[32m179[0m:        fill_in I18n.t("[0m[1m[31mform[0ms.units.fields.manufacturer"), with: "Same Mfg"
[0m[32m180[0m:        fill_in I18n.t("[0m[1m[31mform[0ms.units.fields.serial"), with: existing_unit.serial
[0m[32m181[0m:        fill_in I18n.t("[0m[1m[31mform[0ms.units.fields.description"), with: "Test Description"
[0m[32m182[0m:        fill_in I18n.t("[0m[1m[31mform[0ms.units.fields.owner"), with: "Test Owner"
[0m[32m183[0m-
[0m[32m184[0m:        click_button I18n.t("[0m[1m[31mform[0ms.units.submit")
[0m[32m185[0m-
[0m[32m186[0m-        expect(page).to have_http_status(:unprocessable_entity)
--
[0m[32m190[0m-
[0m[32m191[0m-    describe "GET /units/:id/edit" do
[0m[32m192[0m:      it "displays edit [0m[1m[31mform[0m with unit data" do
[0m[32m193[0m-        visit edit_unit_path(unit)
[0m[32m194[0m-        expect(page).to have_http_status(:success)
[0m[32m195[0m-        expect(page).to have_content(I18n.t("units.titles.edit"))
[0m[32m196[0m-
[0m[32m197[0m:        expect(page).to have_field(I18n.t("[0m[1m[31mform[0ms.units.fields.name"), with: unit.name)
[0m[32m198[0m:        expect(page).to have_field(I18n.t("[0m[1m[31mform[0ms.units.fields.manufacturer"), with: unit.manufacturer)
[0m[32m199[0m:        expect(page).to have_field(I18n.t("[0m[1m[31mform[0ms.units.fields.serial"), with: unit.serial)
[0m[32m200[0m:        expect(page).to have_button(I18n.t("[0m[1m[31mform[0ms.units.submit"))
[0m[32m201[0m-      end
[0m[32m202[0m-
--
[0m[32m214[0m-        visit edit_unit_path(unit)
[0m[32m215[0m-
[0m[32m216[0m:        fill_in I18n.t("[0m[1m[31mform[0ms.units.fields.name"), with: "Updated Unit Name"
[0m[32m217[0m:        fill_in I18n.t("[0m[1m[31mform[0ms.units.fields.description"), with: "Updated Description"
[0m[32m218[0m:        click_button I18n.t("[0m[1m[31mform[0ms.units.submit")
[0m[32m219[0m-
[0m[32m220[0m-        expect(page).to have_content(I18n.t("units.messages.updated"))
--
[0m[32m229[0m-        visit edit_unit_path(unit)
[0m[32m230[0m-
[0m[32m231[0m:        fill_in I18n.t("[0m[1m[31mform[0ms.units.fields.name"), with: ""
[0m[32m232[0m:        click_button I18n.t("[0m[1m[31mform[0ms.units.submit")
[0m[32m233[0m-
[0m[32m234[0m-        expect(page).to have_http_status(:unprocessable_entity)
[0m[32m235[0m:        expect_[0m[1m[31mform[0m_errors :units
[0m[32m236[0m-      end
[0m[32m237[0m-
--
[0m[32m284[0m-      end
[0m[32m285[0m-
[0m[32m286[0m:      it "per[0m[1m[31mform[0ms search by name" do
[0m[32m287[0m-        visit units_path
[0m[32m288[0m-
--
[0m[32m322[0m-      end
[0m[32m323[0m-
[0m[32m324[0m:      it "shows manufacturer in[0m[1m[31mform[0mation in the table" do
[0m[32m325[0m-        visit units_path
[0m[32m326[0m-
--
[0m[32m361[0m-        visit new_unit_path
[0m[32m362[0m-
[0m[32m363[0m:        fill_in I18n.t("[0m[1m[31mform[0ms.units.fields.name"), with: "Unit with Photo"
[0m[32m364[0m-        # Has slide checkbox defaults to unchecked
[0m[32m365[0m:        fill_in I18n.t("[0m[1m[31mform[0ms.units.fields.manufacturer"), with: "Test Manufacturer"
[0m[32m366[0m:        fill_in I18n.t("[0m[1m[31mform[0ms.units.fields.model"), with: "Test Model"
[0m[32m367[0m:        fill_in I18n.t("[0m[1m[31mform[0ms.units.fields.serial"), with: "PHOTO123"
[0m[32m368[0m:        fill_in I18n.t("[0m[1m[31mform[0ms.units.fields.description"), with: "Test Description"
[0m[32m369[0m:        fill_in I18n.t("[0m[1m[31mform[0ms.units.fields.owner"), with: "Test Owner"
[0m[32m370[0m-
[0m[32m371[0m-        # Only attach photo if the field exists
--
[0m[32m374[0m-        end
[0m[32m375[0m-
[0m[32m376[0m:        click_button I18n.t("[0m[1m[31mform[0ms.units.submit")
[0m[32m377[0m-
[0m[32m378[0m-        expect(page).to have_content(I18n.t("units.messages.created"))
--
[0m[32m408[0m-  describe "Admin functionality" do
[0m[32m409[0m-    before do
[0m[32m410[0m:      login_user_via_[0m[1m[31mform[0m(admin_user)
[0m[32m411[0m-    end
[0m[32m412[0m-
--
[0m[32m422[0m-  describe "Edge cases and error handling" do
[0m[32m423[0m-    before do
[0m[32m424[0m:      login_user_via_[0m[1m[31mform[0m(user)
[0m[32m425[0m-    end
[0m[32m426[0m-
--
[0m[32m439[0m-      visit new_unit_path
[0m[32m440[0m-
[0m[32m441[0m:      # Attempt to set user_id via [0m[1m[31mform[0m manipulation would be blocked by controller
[0m[32m442[0m:      fill_in I18n.t("[0m[1m[31mform[0ms.units.fields.name"), with: "Protected Unit"
[0m[32m443[0m-      # Has slide checkbox defaults to unchecked
[0m[32m444[0m:      fill_in I18n.t("[0m[1m[31mform[0ms.units.fields.manufacturer"), with: "Test Manufacturer"
[0m[32m445[0m:      fill_in I18n.t("[0m[1m[31mform[0ms.units.fields.model"), with: "Test Model"
[0m[32m446[0m:      fill_in I18n.t("[0m[1m[31mform[0ms.units.fields.serial"), with: "PROTECT123"
[0m[32m447[0m:      fill_in I18n.t("[0m[1m[31mform[0ms.units.fields.description"), with: "Test Description"
[0m[32m448[0m:      fill_in I18n.t("[0m[1m[31mform[0ms.units.fields.owner"), with: "Test Owner"
[0m[32m449[0m-
[0m[32m450[0m:      click_button I18n.t("[0m[1m[31mform[0ms.units.submit")
[0m[32m451[0m-
[0m[32m452[0m-      created_unit = user.units.find_by(serial: "PROTECT123")
--
[0m[32m461[0m-    end
[0m[32m462[0m-
[0m[32m463[0m:    describe "JSON [0m[1m[31mform[0mat" do
[0m[32m464[0m-      it "returns unit data as JSON" do
[0m[32m465[0m:        get unit_path(unit, [0m[1m[31mform[0mat: :json)
[0m[32m466[0m-        expect(response).to have_http_status(:success)
[0m[32m467[0m-        expect(response.content_type).to include("application/json")
--
[0m[32m481[0m-    end
[0m[32m482[0m-
[0m[32m483[0m:    describe "PDF [0m[1m[31mform[0mat" do
[0m[32m484[0m-      it "generates PDF report for unit" do
[0m[32m485[0m:        get unit_path(unit, [0m[1m[31mform[0mat: :pdf)
[0m[32m486[0m-        expect(response).to have_http_status(:success)
[0m[32m487[0m-        expect(response.content_type).to include("application/pdf")
--
[0m[32m492[0m-    describe "CSV export" do
[0m[32m493[0m-      it "exports units as CSV" do
[0m[32m494[0m:        get units_path([0m[1m[31mform[0mat: :csv)
[0m[32m495[0m-        expect(response).to have_http_status(:success)
[0m[32m496[0m-        expect(response.content_type).to include("text/csv")
--
[0m[32m501[0m-
[0m[32m502[0m-  describe "Public access functionality" do
[0m[32m503[0m:    describe "show action with different [0m[1m[31mform[0mats" do
[0m[32m504[0m:      it "returns PDF for .pdf [0m[1m[31mform[0mat" do
[0m[32m505[0m-        get "/units/#{unit.id}.pdf"
[0m[32m506[0m-        expect(response).to have_http_status(:success)
--
[0m[32m509[0m-      end
[0m[32m510[0m-
[0m[32m511[0m:      it "returns JSON for .json [0m[1m[31mform[0mat" do
[0m[32m512[0m-        get "/units/#{unit.id}.json"
[0m[32m513[0m-        expect(response).to have_http_status(:success)
--
[0m[32m515[0m-      end
[0m[32m516[0m-
[0m[32m517[0m:      it "returns PNG (QR code) for .png [0m[1m[31mform[0mat" do
[0m[32m518[0m-        get "/units/#{unit.id}.png"
[0m[32m519[0m-        expect(response).to have_http_status(:success)
--
[0m[32m555[0m-
[0m[32m556[0m-    describe "new_from_inspection" do
[0m[32m557[0m:      it "shows [0m[1m[31mform[0m for creating unit from inspection" do
[0m[32m558[0m-        get "/inspections/#{inspection.id}/new_unit"
[0m[32m559[0m-        expect(response).to have_http_status(:success)
--
[0m[32m642[0m-      expect(response).to have_http_status(:success)
[0m[32m643[0m-      expect(response.content_type).to include("turbo-stream")
[0m[32m644[0m:      expect(response.body).to include("[0m[1m[31mform[0m_save_message")
[0m[32m645[0m-    end
[0m[32m646[0m-  end

[0m[35mspec/requests/assessments/assessment_controllers_spec.rb[0m
[0m[32m74[0m-      patch inspection_slide_assessment_path(inspection), params: {
[0m[32m75[0m-        assessments_slide_assessment: {
[0m[32m76[0m:          slide_plat[0m[1m[31mform[0m_height: 2.5,
[0m[32m77[0m-          clamber_netting_pass: true
[0m[32m78[0m-        }
--
[0m[32m81[0m-      expect(response).to redirect_to(inspection_path(inspection))
[0m[32m82[0m-      inspection.reload
[0m[32m83[0m:      expect(inspection.slide_assessment.slide_plat[0m[1m[31mform[0m_height).to eq(2.5)
[0m[32m84[0m-      expect(inspection.slide_assessment.clamber_netting_pass).to be true
[0m[32m85[0m-    end

[0m[35mspec/requests/api/safety_standards_api_spec.rb[0m
[0m[32m3[0m-RSpec.describe "Safety Standards API", type: :request do
[0m[32m4[0m-  describe "POST /safety_standards" do
[0m[32m5[0m:    context "with JSON request [0m[1m[31mform[0mat" do
[0m[32m6[0m-      let(:headers) { {"Content-Type": "application/json", Accept: "application/json"} }
[0m[32m7[0m-
--
[0m[32m15[0m-        expect(json_response["passed"]).to be true
[0m[32m16[0m-        expect(json_response["result"]["required_anchors"]).to eq 8
[0m[32m17[0m:        expect(json_response["result"]["[0m[1m[31mform[0mula_breakdown"]).to be_an(Array)
[0m[32m18[0m:        expect(json_response["result"]["[0m[1m[31mform[0mula_breakdown"].size).to eq 5
[0m[32m19[0m-      end
[0m[32m20[0m-

[0m[35mspec/features/inspections/complete_inspection_workflow_spec.rb[0m
[0m[32m71[0m-    user_data = SeedData.user_fields
[0m[32m72[0m-    user_data.each do |field_name, value|
[0m[32m73[0m:      fill_in_[0m[1m[31mform[0m :user_new, field_name, value
[0m[32m74[0m-    end
[0m[32m75[0m-
[0m[32m76[0m:    submit_[0m[1m[31mform[0m :user_new
[0m[32m77[0m-    User.find_by!(email: user_data[:email])
[0m[32m78[0m-  end
--
[0m[32m103[0m-
[0m[32m104[0m-    unit_data.each do |field_name, value|
[0m[32m105[0m:      fill_in_[0m[1m[31mform[0m :units, field_name, value
[0m[32m106[0m-    end
[0m[32m107[0m-
[0m[32m108[0m:    submit_[0m[1m[31mform[0m :units
[0m[32m109[0m-    expect_units_message("created")
[0m[32m110[0m-
--
[0m[32m149[0m-    if BOOLEAN_FIELDS.include?(field_name.to_s)
[0m[32m150[0m-      value ?
[0m[32m151[0m:        check_[0m[1m[31mform[0m_radio(:inspection, field_name) :
[0m[32m152[0m:        uncheck_[0m[1m[31mform[0m_radio(:inspection, field_name)
[0m[32m153[0m-    else
[0m[32m154[0m:      fill_in_[0m[1m[31mform[0m :inspection, field_name, value
[0m[32m155[0m-    end
[0m[32m156[0m-  end
--
[0m[32m183[0m-    end
[0m[32m184[0m-
[0m[32m185[0m:    submit_[0m[1m[31mform[0m tab_name.to_sym
[0m[32m186[0m-    expect_updated_message
[0m[32m187[0m-
--
[0m[32m206[0m-        choose_pass_fail(field_label, value)
[0m[32m207[0m-      elsif BOOLEAN_FIELDS.include?(field_name.to_s)
[0m[32m208[0m:        value ? check_[0m[1m[31mform[0m_radio(tab_name.to_sym, field_name) :
[0m[32m209[0m:                uncheck_[0m[1m[31mform[0m_radio(tab_name.to_sym, field_name)
[0m[32m210[0m-      else
[0m[32m211[0m-        choose_yes_no(field_label, value)
[0m[32m212[0m-      end
[0m[32m213[0m-    else
[0m[32m214[0m:      fill_in_[0m[1m[31mform[0m(tab_name.to_sym, field_name, value) if value.present?
[0m[32m215[0m-    end
[0m[32m216[0m-  end
--
[0m[32m220[0m-
[0m[32m221[0m-    if field_str.end_with?("_pass")
[0m[32m222[0m:      pass_key = "[0m[1m[31mform[0ms.#{tab_name}.fields.#{field_name}"
[0m[32m223[0m:      base_key = "[0m[1m[31mform[0ms.#{tab_name}.fields.#{field_str.chomp("_pass")}"
[0m[32m224[0m-
[0m[32m225[0m-      I18n.exists?(pass_key) ? I18n.t(pass_key) : I18n.t(base_key)
[0m[32m226[0m-    else
[0m[32m227[0m:      I18n.t("[0m[1m[31mform[0ms.#{tab_name}.fields.#{field_name}")
[0m[32m228[0m-    end
[0m[32m229[0m-  end
--
[0m[32m242[0m-    incomplete_fields = @inspection.incomplete_fields
[0m[32m243[0m-    if incomplete_fields.any?
[0m[32m244[0m:      # Count total fields across all [0m[1m[31mform[0ms, not just [0m[1m[31mform[0ms with incomplete fields
[0m[32m245[0m:      total_field_count = incomplete_fields.sum { |[0m[1m[31mform[0m| [0m[1m[31mform[0m[:fields].count }
[0m[32m246[0m-
[0m[32m247[0m-      expect(page).to have_content(
--
[0m[32m265[0m-    within("nav.tabs") do
[0m[32m266[0m-      # Check if inspection tab is current (span) or link
[0m[32m267[0m:      if page.has_css?("span", text: t("[0m[1m[31mform[0ms.inspection.header"))
[0m[32m268[0m:        expect(page).to have_css("span", text: "#{t("[0m[1m[31mform[0ms.inspection.header")} ✓")
[0m[32m269[0m-      else
[0m[32m270[0m:        expect(page).to have_link("#{t("[0m[1m[31mform[0ms.inspection.header")} ✓")
[0m[32m271[0m-      end
[0m[32m272[0m-
[0m[32m273[0m-      # Check each assessment tab
[0m[32m274[0m-      applicable_tabs.each do |tab_name|
[0m[32m275[0m:        tab_text = t("[0m[1m[31mform[0ms.#{tab_name}.header")
[0m[32m276[0m-
[0m[32m277[0m-        if completed_tabs.include?(tab_name)
--
[0m[32m307[0m-    expect(@inspection.complete_date).to be_present
[0m[32m308[0m-
[0m[32m309[0m:    visit inspection_path(@inspection, [0m[1m[31mform[0mat: :pdf)
[0m[32m310[0m-    expect(page.status_code).to eq(200)
[0m[32m311[0m-  end
--
[0m[32m315[0m-    create_second_inspection
[0m[32m316[0m-    verify_boolean_fields_prefilled
[0m[32m317[0m:    save_main_[0m[1m[31mform[0m
[0m[32m318[0m-    verify_assessments_prefill_and_complete
[0m[32m319[0m-    mark_second_inspection_complete
--
[0m[32m346[0m-  end
[0m[32m347[0m-
[0m[32m348[0m:  def save_main_[0m[1m[31mform[0m
[0m[32m349[0m-    click_submit_button
[0m[32m350[0m-  end
--
[0m[32m368[0m-      end
[0m[32m369[0m-
[0m[32m370[0m:      submit_[0m[1m[31mform[0m tab_name.to_sym
[0m[32m371[0m-      expect_updated_message
[0m[32m372[0m-
--
[0m[32m478[0m-
[0m[32m479[0m-    visit edit_inspection_path(inspection1)
[0m[32m480[0m:    fill_in I18n.t("[0m[1m[31mform[0ms.inspection.fields.unique_report_number"), with: "TEST-001"
[0m[32m481[0m:    click_button I18n.t("[0m[1m[31mform[0ms.inspection.submit")
[0m[32m482[0m-    expect(page).to have_content(I18n.t("inspections.messages.updated"))
[0m[32m483[0m-
--
[0m[32m487[0m-
[0m[32m488[0m-    visit edit_inspection_path(inspection2)
[0m[32m489[0m:    fill_in I18n.t("[0m[1m[31mform[0ms.inspection.fields.unique_report_number"), with: "TEST-001"
[0m[32m490[0m:    click_button I18n.t("[0m[1m[31mform[0ms.inspection.submit")
[0m[32m491[0m-
[0m[32m492[0m:    # Should show validation error in [0m[1m[31mform[0m
[0m[32m493[0m-    expect(page).to have_content("has already been taken")
[0m[32m494[0m:    expect(page).to have_css(".[0m[1m[31mform[0m-errors")
[0m[32m495[0m-
[0m[32m496[0m-    # Fix by using different report number
[0m[32m497[0m:    fill_in I18n.t("[0m[1m[31mform[0ms.inspection.fields.unique_report_number"), with: "TEST-002"
[0m[32m498[0m:    click_button I18n.t("[0m[1m[31mform[0ms.inspection.submit")
[0m[32m499[0m-    expect(page).to have_content(I18n.t("inspections.messages.updated"))
[0m[32m500[0m-  end
--
[0m[32m509[0m-
[0m[32m510[0m-    visit edit_inspection_path(inspection1)
[0m[32m511[0m:    fill_in I18n.t("[0m[1m[31mform[0ms.inspection.fields.unique_report_number"), with: ""
[0m[32m512[0m:    click_button I18n.t("[0m[1m[31mform[0ms.inspection.submit")
[0m[32m513[0m-    expect(page).to have_content(I18n.t("inspections.messages.updated"))
[0m[32m514[0m-
--
[0m[32m518[0m-
[0m[32m519[0m-    visit edit_inspection_path(inspection2)
[0m[32m520[0m:    fill_in I18n.t("[0m[1m[31mform[0ms.inspection.fields.unique_report_number"), with: ""
[0m[32m521[0m:    click_button I18n.t("[0m[1m[31mform[0ms.inspection.submit")
[0m[32m522[0m-
[0m[32m523[0m-    # Should save successfully - blank values are allowed
[0m[32m524[0m-    expect(page).to have_content(I18n.t("inspections.messages.updated"))
[0m[32m525[0m:    expect(page).not_to have_css(".[0m[1m[31mform[0m-errors")
[0m[32m526[0m-  end
[0m[32m527[0m-
--
[0m[32m536[0m-
[0m[32m537[0m-    visit edit_inspection_path(inspection1)
[0m[32m538[0m:    fill_in I18n.t("[0m[1m[31mform[0ms.inspection.fields.unique_report_number"), with: "TEST-001"
[0m[32m539[0m:    click_button I18n.t("[0m[1m[31mform[0ms.inspection.submit")
[0m[32m540[0m-    expect(page).to have_content(I18n.t("inspections.messages.updated"))
[0m[32m541[0m-    logout
--
[0m[32m547[0m-
[0m[32m548[0m-    visit edit_inspection_path(inspection2)
[0m[32m549[0m:    fill_in I18n.t("[0m[1m[31mform[0ms.inspection.fields.unique_report_number"), with: "TEST-001"
[0m[32m550[0m:    click_button I18n.t("[0m[1m[31mform[0ms.inspection.submit")
[0m[32m551[0m-
[0m[32m552[0m-    # Should save successfully - different users can have same report number
[0m[32m553[0m-    expect(page).to have_content(I18n.t("inspections.messages.updated"))
[0m[32m554[0m:    expect(page).not_to have_css(".[0m[1m[31mform[0m-errors")
[0m[32m555[0m-  end
[0m[32m556[0m-end

[0m[35mspec/features/safety_standards/safety_standards_tabs_spec.rb[0m
[0m[32m78[0m-  scenario "calculators work within tabs" do
[0m[32m79[0m-    # Test anchor calculator in default tab
[0m[32m80[0m:    within("#anchorage .calculator-[0m[1m[31mform[0m") do
[0m[32m81[0m:      fill_in I18n.t("[0m[1m[31mform[0ms.safety_standards_anchors.fields.length"), with: 5.0
[0m[32m82[0m:      fill_in I18n.t("[0m[1m[31mform[0ms.safety_standards_anchors.fields.width"), with: 5.0
[0m[32m83[0m:      fill_in I18n.t("[0m[1m[31mform[0ms.safety_standards_anchors.fields.height"), with: 3.0
[0m[32m84[0m:      click_button I18n.t("[0m[1m[31mform[0ms.safety_standards_anchors.submit")
[0m[32m85[0m-    end
[0m[32m86[0m-
--
[0m[32m92[0m-    click_link "Slides"
[0m[32m93[0m-
[0m[32m94[0m:    within("#slides .calculator-[0m[1m[31mform[0m") do
[0m[32m95[0m:      fill_in I18n.t("[0m[1m[31mform[0ms.safety_standards_slide_runout.fields.plat[0m[1m[31mform[0m_height"), with: 2.5
[0m[32m96[0m:      click_button I18n.t("[0m[1m[31mform[0ms.safety_standards_slide_runout.submit")
[0m[32m97[0m-    end
[0m[32m98[0m-

[0m[35mspec/features/inspections/dirty_form_warning_spec.rb[0m
[0m[32m1[0m-require "rails_helper"
[0m[32m2[0m-
[0m[32m3[0m:RSpec.feature "Dirty [0m[1m[31mform[0m warning", js: true do
[0m[32m4[0m-  include InspectionTestHelpers
[0m[32m5[0m-
--
[0m[32m13[0m-  end
[0m[32m14[0m-
[0m[32m15[0m:  scenario "tracks [0m[1m[31mform[0m changes and provides save options" do
[0m[32m16[0m:    expect(page).not_to have_css("#dirty-[0m[1m[31mform[0m-indicator", visible: true)
[0m[32m17[0m-
[0m[32m18[0m:    fill_in_[0m[1m[31mform[0m :inspection, :inspection_location, "New Location"
[0m[32m19[0m:    expect(page).to have_css("#dirty-[0m[1m[31mform[0m-indicator", visible: true)
[0m[32m20[0m-    expect(page).to have_content("Unsaved changes")
[0m[32m21[0m-
[0m[32m22[0m:    within("#dirty-[0m[1m[31mform[0m-indicator") do
[0m[32m23[0m-      click_button "Save"
[0m[32m24[0m-    end
[0m[32m25[0m-
[0m[32m26[0m-    expect(page).to have_content(I18n.t("shared.messages.saved_successfully"))
[0m[32m27[0m:    expect(page).not_to have_css("#dirty-[0m[1m[31mform[0m-indicator", visible: true)
[0m[32m28[0m-  end
[0m[32m29[0m-
[0m[32m30[0m-  scenario "warns before navigating away with unsaved changes" do
[0m[32m31[0m:    fill_in_[0m[1m[31mform[0m :inspection, :inspection_location, "Unsaved Location"
[0m[32m32[0m-
[0m[32m33[0m-    dismiss_confirm do

[0m[35mspec/features/inspections/inspection_lifecycle_spec.rb[0m
[0m[32m14[0m-
[0m[32m15[0m-  before do
[0m[32m16[0m:    login_user_via_[0m[1m[31mform[0m(user)
[0m[32m17[0m-  end
[0m[32m18[0m-
--
[0m[32m149[0m-      # Check that passed field is NOT pre-filled
[0m[32m150[0m-      # The pass/fail radio buttons should not have any selection
[0m[32m151[0m:      within ".[0m[1m[31mform[0m-grid#passed" do
[0m[32m152[0m-        pass_radio = find('input[type="radio"][value="true"]')
[0m[32m153[0m-        fail_radio = find('input[type="radio"][value="false"]')
--
[0m[32m158[0m-
[0m[32m159[0m-      # But risk_assessment should be pre-filled
[0m[32m160[0m:      risk_field = find_field(I18n.t("[0m[1m[31mform[0ms.results.fields.risk_assessment"))
[0m[32m161[0m-      expect(risk_field.value).to eq("Previous risk assessment text")
[0m[32m162[0m-    end

[0m[35mspec/views/form/_display_field.html.erb_spec.rb[0m
[0m[32m1[0m-require "rails_helper"
[0m[32m2[0m-
[0m[32m3[0m:RSpec.describe "[0m[1m[31mform[0m/_display_field.html.erb", type: :view do
[0m[32m4[0m-  let(:user) { create(:user, :without_company, name: "Test User") }
[0m[32m5[0m:  let(:[0m[1m[31mform[0m_object) { ActionView::Helpers::FormBuilder.new(:user, user, view, {}) }
[0m[32m6[0m-
[0m[32m7[0m-  before do
[0m[32m8[0m:    # Set up [0m[1m[31mform[0m context like fieldset would
[0m[32m9[0m:    assign(:_current_[0m[1m[31mform[0m, [0m[1m[31mform[0m_object)
[0m[32m10[0m:    assign(:_current_i18n_base, "[0m[1m[31mform[0ms.user_settings")
[0m[32m11[0m-  end
[0m[32m12[0m-
[0m[32m13[0m-  it "renders display field using model value automatically" do
[0m[32m14[0m:    render "[0m[1m[31mform[0m/display_field",
[0m[32m15[0m-      field: :name
[0m[32m16[0m-
--
[0m[32m23[0m-  it "handles nil values gracefully" do
[0m[32m24[0m-    user_with_nil_phone = create(:user, :without_company, phone: nil)
[0m[32m25[0m:    [0m[1m[31mform[0m_object_nil = ActionView::Helpers::FormBuilder.new(:user, user_with_nil_phone, view, {})
[0m[32m26[0m:    assign(:_current_[0m[1m[31mform[0m, [0m[1m[31mform[0m_object_nil)
[0m[32m27[0m-
[0m[32m28[0m:    render "[0m[1m[31mform[0m/display_field",
[0m[32m29[0m-      field: :phone
[0m[32m30[0m-

[0m[35mspec/features/pdfs/pdf_generation_spec.rb[0m
[0m[32m53[0m-
[0m[32m54[0m-      expect(page).to have_content(I18n.t("units.fields.qr_code"))
[0m[32m55[0m:      expect(page).to have_link(I18n.t("units.fields.qr_code"), href: unit_path(unit, [0m[1m[31mform[0mat: :png))
[0m[32m56[0m-
[0m[32m57[0m-      pdf_text = get_pdf_text("/units/#{unit.id}.pdf")
--
[0m[32m119[0m-      expect(current_path).to eq(inspection_path(other_inspection))
[0m[32m120[0m-      expect(page.html).to include("<iframe")
[0m[32m121[0m:      expect(page.html).to include(inspection_path(other_inspection, [0m[1m[31mform[0mat: :pdf))
[0m[32m122[0m-    end
[0m[32m123[0m-

[0m[35mspec/features/safety_standards/safety_standards_comprehensive_spec.rb[0m
[0m[32m28[0m-    end
[0m[32m29[0m-
[0m[32m30[0m:    scenario "[0m[1m[31mform[0m submission via POST (no JS)" do
[0m[32m31[0m-      visit safety_standards_path
[0m[32m32[0m-
[0m[32m33[0m:      fill_anchor_[0m[1m[31mform[0m(**valid_anchor_params)
[0m[32m34[0m:      submit_anchor_[0m[1m[31mform[0m
[0m[32m35[0m-
[0m[32m36[0m-      expect(current_url).to include("calculation")
--
[0m[32m42[0m-    include_context "calculation parameters"
[0m[32m43[0m-
[0m[32m44[0m:    describe "Turbo [0m[1m[31mform[0m submissions" do
[0m[32m45[0m-      scenario "anchor calculation updates without reload" do
[0m[32m46[0m-        visit safety_standards_path
[0m[32m47[0m-        url_before = current_url
[0m[32m48[0m-
[0m[32m49[0m:        fill_anchor_[0m[1m[31mform[0m(**valid_anchor_params)
[0m[32m50[0m:        submit_anchor_[0m[1m[31mform[0m
[0m[32m51[0m-
[0m[32m52[0m-        expect_anchor_result(8)
--
[0m[32m60[0m-        click_link "Slides"
[0m[32m61[0m-
[0m[32m62[0m:        fill_runout_[0m[1m[31mform[0m(**valid_runout_params)
[0m[32m63[0m:        submit_runout_[0m[1m[31mform[0m
[0m[32m64[0m-
[0m[32m65[0m-        expect_runout_result(required_runout: 1.25)
--
[0m[32m72[0m-        click_link "Wall Heights"
[0m[32m73[0m-
[0m[32m74[0m:        fill_wall_height_[0m[1m[31mform[0m(**valid_wall_params)
[0m[32m75[0m:        submit_wall_height_[0m[1m[31mform[0m
[0m[32m76[0m-
[0m[32m77[0m-        expect_wall_height_result("1.5m")
--
[0m[32m83[0m-        visit safety_standards_path
[0m[32m84[0m-
[0m[32m85[0m:        # The [0m[1m[31mform[0ms have min values that prevent submitting zeros
[0m[32m86[0m:        # Check anchor [0m[1m[31mform[0m
[0m[32m87[0m:        within(".calculator-[0m[1m[31mform[0m", text: I18n.t("[0m[1m[31mform[0ms.safety_standards_anchors.header")) do
[0m[32m88[0m:          length_input = find_field(I18n.t("[0m[1m[31mform[0ms.safety_standards_anchors.fields.length"))
[0m[32m89[0m-          expect(length_input["min"]).to eq("1.0")
[0m[32m90[0m-        end
--
[0m[32m92[0m-    end
[0m[32m93[0m-
[0m[32m94[0m:    describe "Multiple [0m[1m[31mform[0m interactions" do
[0m[32m95[0m:      scenario "all [0m[1m[31mform[0ms work independently" do
[0m[32m96[0m-        visit safety_standards_path
[0m[32m97[0m-
[0m[32m98[0m:        # Submit all [0m[1m[31mform[0ms
[0m[32m99[0m:        fill_anchor_[0m[1m[31mform[0m(**valid_anchor_params)
[0m[32m100[0m:        submit_anchor_[0m[1m[31mform[0m
[0m[32m101[0m-
[0m[32m102[0m-        click_link "Slides"
[0m[32m103[0m:        fill_runout_[0m[1m[31mform[0m(**valid_runout_params)
[0m[32m104[0m:        submit_runout_[0m[1m[31mform[0m
[0m[32m105[0m-
[0m[32m106[0m-        click_link "Wall Heights"
[0m[32m107[0m:        fill_wall_height_[0m[1m[31mform[0m(**valid_wall_params)
[0m[32m108[0m:        submit_wall_height_[0m[1m[31mform[0m
[0m[32m109[0m-        # Wait for result to appear
[0m[32m110[0m-        expect_wall_height_result("1.5m")
--
[0m[32m122[0m-      end
[0m[32m123[0m-
[0m[32m124[0m:      scenario "[0m[1m[31mform[0m values persist after submission" do
[0m[32m125[0m-        visit safety_standards_path
[0m[32m126[0m-
[0m[32m127[0m:        fill_anchor_[0m[1m[31mform[0m(**valid_anchor_params)
[0m[32m128[0m:        submit_anchor_[0m[1m[31mform[0m
[0m[32m129[0m-
[0m[32m130[0m:        within(".calculator-[0m[1m[31mform[0m", text: I18n.t("[0m[1m[31mform[0ms.safety_standards_anchors.header")) do
[0m[32m131[0m:          expect(find_field(I18n.t("[0m[1m[31mform[0ms.safety_standards_anchors.fields.length")).value).to eq("5.0")
[0m[32m132[0m:          expect(find_field(I18n.t("[0m[1m[31mform[0ms.safety_standards_anchors.fields.width")).value).to eq("5.0")
[0m[32m133[0m:          expect(find_field(I18n.t("[0m[1m[31mform[0ms.safety_standards_anchors.fields.height")).value).to eq("3.0")
[0m[32m134[0m-        end
[0m[32m135[0m-      end
--
[0m[32m194[0m-          params = case type
[0m[32m195[0m-          when "anchors" then {type: type, **valid_anchor_params}
[0m[32m196[0m:          when "slide_runout" then {type: type, plat[0m[1m[31mform[0m_height: 2.5}
[0m[32m197[0m-          when "wall_height" then {type: type, user_height: 1.5}
[0m[32m198[0m-          end
--
[0m[32m222[0m-      visit safety_standards_path
[0m[32m223[0m-
[0m[32m224[0m:      fill_runout_[0m[1m[31mform[0m(height: 0.1)
[0m[32m225[0m:      submit_runout_[0m[1m[31mform[0m
[0m[32m226[0m-
[0m[32m227[0m-      expect_runout_result(required_runout: 0.3)
--
[0m[32m234[0m-        visit safety_standards_path
[0m[32m235[0m-
[0m[32m236[0m:        fill_anchor_[0m[1m[31mform[0m(length: l, width: w, height: h)
[0m[32m237[0m:        submit_anchor_[0m[1m[31mform[0m
[0m[32m238[0m-
[0m[32m239[0m-        expected = SafetyStandard.build_anchor_result(

[0m[35mspec/features/inspections/inspection_incomplete_fields_spec.rb[0m
[0m[32m26[0m-  def expand_incomplete_fields = find("summary.incomplete-fields-summary").click
[0m[32m27[0m-
[0m[32m28[0m:  def expect_incomplete_field([0m[1m[31mform[0m_name, field_name)
[0m[32m29[0m:    field_label = I18n.t("[0m[1m[31mform[0ms.#{[0m[1m[31mform[0m_name}.fields.#{field_name}")
[0m[32m30[0m-    within(".incomplete-fields-content") { expect(page).to have_content(field_label) }
[0m[32m31[0m-  end
[0m[32m32[0m-
[0m[32m33[0m:  def expect_incomplete_section([0m[1m[31mform[0m_name)
[0m[32m34[0m:    section_header = I18n.t("[0m[1m[31mform[0ms.#{[0m[1m[31mform[0m_name}.header")
[0m[32m35[0m-    within(".incomplete-fields-content") { expect(page).to have_link(section_header) }
[0m[32m36[0m-  end
[0m[32m37[0m-
[0m[32m38[0m:  def expect_no_incomplete_section([0m[1m[31mform[0m_name)
[0m[32m39[0m:    section_header = I18n.t("[0m[1m[31mform[0ms.#{[0m[1m[31mform[0m_name}.header")
[0m[32m40[0m-    within(".incomplete-fields-content") { expect(page).not_to have_content(section_header) }
[0m[32m41[0m-  end
--
[0m[32m108[0m-    expand_incomplete_fields
[0m[32m109[0m-
[0m[32m110[0m:    inspection_link = find_link(I18n.t("[0m[1m[31mform[0ms.inspection.header"))
[0m[32m111[0m-    expect(inspection_link[:href]).to include("tab=inspection", "#tabs")
[0m[32m112[0m-
[0m[32m113[0m:    field_link = find_link(I18n.t("[0m[1m[31mform[0ms.inspection.fields.inspection_location"))
[0m[32m114[0m-    expect(field_link[:href]).to include("tab=inspection", "#inspection_location")
[0m[32m115[0m-  end

[0m[35mspec/views/form/_search_field.html.erb_spec.rb[0m
[0m[32m1[0m-require "rails_helper"
[0m[32m2[0m-
[0m[32m3[0m:RSpec.describe "[0m[1m[31mform[0m/_search_field.html.erb", type: :view do
[0m[32m4[0m-  let(:search_url) { "/search" }
[0m[32m5[0m-
--
[0m[32m10[0m-
[0m[32m11[0m-  context "with required parameters" do
[0m[32m12[0m:    it "renders search [0m[1m[31mform[0m with default values" do
[0m[32m13[0m:      render "[0m[1m[31mform[0m/search_field", url: search_url
[0m[32m14[0m-
[0m[32m15[0m:      expect(rendered).to include('class="search-[0m[1m[31mform[0m"')
[0m[32m16[0m-      expect(rendered).to include('action="/search"')
[0m[32m17[0m-      expect(rendered).to include('method="get"')
--
[0m[32m24[0m-  context "with custom parameters" do
[0m[32m25[0m-    it "uses custom placeholder text" do
[0m[32m26[0m:      render "[0m[1m[31mform[0m/search_field",
[0m[32m27[0m-        url: search_url,
[0m[32m28[0m-        placeholder: "Find units..."
--
[0m[32m32[0m-
[0m[32m33[0m-    it "uses custom field name" do
[0m[32m34[0m:      render "[0m[1m[31mform[0m/search_field",
[0m[32m35[0m-        url: search_url,
[0m[32m36[0m-        field_name: :search_term
--
[0m[32m40[0m-
[0m[32m41[0m-    it "uses custom submit text" do
[0m[32m42[0m:      render "[0m[1m[31mform[0m/search_field",
[0m[32m43[0m-        url: search_url,
[0m[32m44[0m-        submit_text: "Find"
--
[0m[32m48[0m-
[0m[32m49[0m-    it "uses custom CSS class" do
[0m[32m50[0m:      render "[0m[1m[31mform[0m/search_field",
[0m[32m51[0m-        url: search_url,
[0m[32m52[0m-        css_class: "custom-search"
--
[0m[32m62[0m-
[0m[32m63[0m-    it "preserves existing search value" do
[0m[32m64[0m:      render "[0m[1m[31mform[0m/search_field", url: search_url
[0m[32m65[0m-
[0m[32m66[0m-      expect(rendered).to include('value="test search"')
--
[0m[32m74[0m-
[0m[32m75[0m-    it "preserves existing value for custom field name" do
[0m[32m76[0m:      render "[0m[1m[31mform[0m/search_field",
[0m[32m77[0m-        url: search_url,
[0m[32m78[0m-        field_name: :search_term
--
[0m[32m85[0m-    it "raises an error" do
[0m[32m86[0m-      expect {
[0m[32m87[0m:        render "[0m[1m[31mform[0m/search_field"
[0m[32m88[0m-      }.to raise_error(ActionView::Template::Error, /url is required for search field/)
[0m[32m89[0m-    end
--
[0m[32m92[0m-  context "with complex URL" do
[0m[32m93[0m-    it "handles URL with path helpers" do
[0m[32m94[0m:      render "[0m[1m[31mform[0m/search_field", url: search_url + "?type=unit"
[0m[32m95[0m-
[0m[32m96[0m-      expect(rendered).to include('action="/search?type=unit"')

[0m[35mspec/seeds/seeds_spec.rb[0m
[0m[32m53[0m-      end
[0m[32m54[0m-
[0m[32m55[0m:      it "creates companies with valid email [0m[1m[31mform[0mats" do
[0m[32m56[0m-        InspectorCompany.all.each do |company|
[0m[32m57[0m-          expect(company.email).to match(/\A[\w+\-.]+@[a-z\d\-]+(\.[a-z\d\-]+)*\.[a-z]+\z/i)
--
[0m[32m230[0m-        complete_inspections.each do |inspection|
[0m[32m231[0m-          if inspection.has_slide
[0m[32m232[0m:            expect(inspection.slide_assessment.slide_plat[0m[1m[31mform[0m_height).to be_present
[0m[32m233[0m-          else
[0m[32m234[0m-            # Slide assessment exists but has no data
[0m[32m235[0m:            expect(inspection.slide_assessment.slide_plat[0m[1m[31mform[0m_height).to be_nil
[0m[32m236[0m-          end
[0m[32m237[0m-        end
--
[0m[32m353[0m-            expect(assessment.inspection).to be_present
[0m[32m354[0m-            expect(assessment.containing_wall_height).to be_present
[0m[32m355[0m:            expect(assessment.plat[0m[1m[31mform[0m_height).to be_present
[0m[32m356[0m-            expect(assessment.tallest_user_height).to be_present
[0m[32m357[0m-            expect(assessment.users_at_1000mm).to be_present
--
[0m[32m368[0m-          Assessments::UserHeightAssessment.joins(:inspection).where.not(inspections: {complete_date: nil}).each do |assessment|
[0m[32m369[0m-            expect(assessment.containing_wall_height).to be_between(0.5, 3.0)
[0m[32m370[0m:            expect(assessment.plat[0m[1m[31mform[0m_height).to be_between(0.2, 2.0)
[0m[32m371[0m-            expect(assessment.tallest_user_height).to be_between(1.0, 2.0)
[0m[32m372[0m-          end
--
[0m[32m402[0m-
[0m[32m403[0m-          slide_inspections.each do |inspection|
[0m[32m404[0m:            expect(inspection.slide_assessment.slide_plat[0m[1m[31mform[0m_height).to be_present
[0m[32m405[0m-          end
[0m[32m406[0m-
[0m[32m407[0m-          non_slide_inspections.each do |inspection|
[0m[32m408[0m:            expect(inspection.slide_assessment.slide_plat[0m[1m[31mform[0m_height).to be_nil
[0m[32m409[0m-          end
[0m[32m410[0m-        end
--
[0m[32m413[0m-          slide_assessments.each do |assessment|
[0m[32m414[0m-            expect(assessment.inspection).to be_present
[0m[32m415[0m:            expect(assessment.slide_plat[0m[1m[31mform[0m_height).to be_present
[0m[32m416[0m-            expect(assessment.slide_wall_height).to be_present
[0m[32m417[0m-            expect(assessment.runout).to be_present
--
[0m[32m423[0m-        it "creates assessments with realistic slide measurements" do
[0m[32m424[0m-          slide_assessments.each do |assessment|
[0m[32m425[0m:            expect(assessment.slide_plat[0m[1m[31mform[0m_height).to be_between(1.0, 8.0)
[0m[32m426[0m-            expect(assessment.slide_wall_height).to be_between(0.5, 3.0)
[0m[32m427[0m-            expect(assessment.slide_first_metre_height).to be_between(0.1, 1.0)
--
[0m[32m579[0m-    end
[0m[32m580[0m-
[0m[32m581[0m:    describe "Per[0m[1m[31mform[0mance and Scale" do
[0m[32m582[0m-      it "creates a reasonable amount of test data" do
[0m[32m583[0m-        expect(InspectorCompany.count).to be_between(2, 10)
--
[0m[32m588[0m-
[0m[32m589[0m-      it "creates data efficiently without N+1 queries" do
[0m[32m590[0m:        # This test ensures that the seeds don't have per[0m[1m[31mform[0mance issues
[0m[32m591[0m-        expect {
[0m[32m592[0m-          InspectorCompany.includes(:users).all

[0m[35mspec/requests/api/units_json_spec.rb[0m
[0m[32m66[0m-    end
[0m[32m67[0m-
[0m[32m68[0m:    context "using long URL [0m[1m[31mform[0mat" do
[0m[32m69[0m-      it "returns JSON for /units/:id.json" do
[0m[32m70[0m-        get "/units/#{unit.id}.json"

[0m[35mspec/features/units/units_form_spec.rb[0m
[0m[32m14[0m-
[0m[32m15[0m-    it "successfully creates a unit with valid data" do
[0m[32m16[0m:      fill_in_[0m[1m[31mform[0m :units, :name, "Test Bouncy Castle"
[0m[32m17[0m:      fill_in_[0m[1m[31mform[0m :units, :manufacturer, "JumpCo"
[0m[32m18[0m:      fill_in_[0m[1m[31mform[0m :units, :model, "JC-2000"
[0m[32m19[0m:      fill_in_[0m[1m[31mform[0m :units, :serial, "ASSET-001"
[0m[32m20[0m:      fill_in_[0m[1m[31mform[0m :units, :description, "Large bouncy castle for events"
[0m[32m21[0m:      fill_in_[0m[1m[31mform[0m :units, :owner, "Test Company Ltd"
[0m[32m22[0m:      fill_in_[0m[1m[31mform[0m :units, :manufacture_date, "2023-01-15"
[0m[32m23[0m:      fill_in_[0m[1m[31mform[0m :units, :notes, "Recently purchased, excellent condition"
[0m[32m24[0m-
[0m[32m25[0m:      submit_[0m[1m[31mform[0m :units
[0m[32m26[0m-
[0m[32m27[0m-      expect(page).to have_content("Test Bouncy Castle")
--
[0m[32m32[0m-
[0m[32m33[0m-    it "shows validation errors for missing required fields" do
[0m[32m34[0m:      submit_[0m[1m[31mform[0m :units
[0m[32m35[0m-
[0m[32m36[0m:      expect_[0m[1m[31mform[0m_errors :units, count: 5
[0m[32m37[0m-      expect(page).to have_content(I18n.t("units.validations.name_blank"))
[0m[32m38[0m-      expect(page).to have_content(I18n.t("units.validations.manufacturer_blank"))
--
[0m[32m45[0m-      create(:unit, user: user, serial: "DUPLICATE-001")
[0m[32m46[0m-
[0m[32m47[0m:      fill_in_[0m[1m[31mform[0m :units, :name, "Test Unit"
[0m[32m48[0m:      fill_in_[0m[1m[31mform[0m :units, :manufacturer, "Test Mfg"
[0m[32m49[0m:      fill_in_[0m[1m[31mform[0m :units, :serial, "DUPLICATE-001"
[0m[32m50[0m:      fill_in_[0m[1m[31mform[0m :units, :description, "Test description"
[0m[32m51[0m:      fill_in_[0m[1m[31mform[0m :units, :owner, "Test Owner"
[0m[32m52[0m-
[0m[32m53[0m:      submit_[0m[1m[31mform[0m :units
[0m[32m54[0m-
[0m[32m55[0m-      expect(page).to have_content("Serial has already been taken")
--
[0m[32m64[0m-    end
[0m[32m65[0m-
[0m[32m66[0m:    it "populates [0m[1m[31mform[0m with existing unit data" do
[0m[32m67[0m:      expect(page).to have_field(I18n.t("[0m[1m[31mform[0ms.units.fields.name"), with: unit.name)
[0m[32m68[0m:      expect(page).to have_field(I18n.t("[0m[1m[31mform[0ms.units.fields.manufacturer"), with: unit.manufacturer)
[0m[32m69[0m:      expect(page).to have_button(I18n.t("[0m[1m[31mform[0ms.units.submit"))
[0m[32m70[0m-    end
[0m[32m71[0m-
[0m[32m72[0m-    it "successfully updates unit with new data" do
[0m[32m73[0m:      fill_in_[0m[1m[31mform[0m :units, :name, "Updated Name"
[0m[32m74[0m:      fill_in_[0m[1m[31mform[0m :units, :description, "Updated description"
[0m[32m75[0m-
[0m[32m76[0m:      submit_[0m[1m[31mform[0m :units
[0m[32m77[0m-
[0m[32m78[0m-      expect(page).to have_current_path(unit_path(unit))

[0m[35mspec/views/form/_checkbox.html.erb_spec.rb[0m
[0m[32m1[0m-require "rails_helper"
[0m[32m2[0m-
[0m[32m3[0m:RSpec.describe "[0m[1m[31mform[0m/_checkbox.html.erb", type: :view do
[0m[32m4[0m:  let(:mock_[0m[1m[31mform[0m) { double("FormBuilder") }
[0m[32m5[0m-  let(:field) { :active }
[0m[32m6[0m-  let(:field_config) do
[0m[32m7[0m-    {
[0m[32m8[0m:      [0m[1m[31mform[0m_object: mock_[0m[1m[31mform[0m,
[0m[32m9[0m:      i18n_base: "test.[0m[1m[31mform[0ms",
[0m[32m10[0m-      field_label: "Active Status",
[0m[32m11[0m-      field_hint: "Enable this feature",
--
[0m[32m18[0m-  # Default render method with common setup
[0m[32m19[0m-  def render_checkbox(locals = {})
[0m[32m20[0m:    render partial: "[0m[1m[31mform[0m/checkbox", locals: {field: field}.merge(locals)
[0m[32m21[0m-  end
[0m[32m22[0m-
[0m[32m23[0m-  before do
[0m[32m24[0m:    # Mock the [0m[1m[31mform[0m field setup helper
[0m[32m25[0m:    allow(view).to receive(:[0m[1m[31mform[0m_field_setup).and_return(field_config)
[0m[32m26[0m-
[0m[32m27[0m:    # Mock [0m[1m[31mform[0m builder methods with realistic HTML
[0m[32m28[0m:    allow(mock_[0m[1m[31mform[0m).to receive(:check_box)
[0m[32m29[0m-      .with(field)
[0m[32m30[0m-      .and_return('<input type="checkbox" />'.html_safe)
--
[0m[32m32[0m-    # When label is called with a block, we need to simulate Rails' behavior
[0m[32m33[0m-    # of yielding to the block and wrapping the content in a label tag
[0m[32m34[0m:    allow(mock_[0m[1m[31mform[0m).to receive(:label).with(field) do |field_name, &block|
[0m[32m35[0m-      # The block will render the checkbox and label text
[0m[32m36[0m-      # We'll return what the rendered output should look like
--
[0m[32m39[0m-
[0m[32m40[0m-    # Set current i18n base for the partial
[0m[32m41[0m:    view.instance_variable_set(:@_current_i18n_base, "test.[0m[1m[31mform[0ms")
[0m[32m42[0m-  end
[0m[32m43[0m-
[0m[32m44[0m-  describe "basic rendering" do
[0m[32m45[0m:    it "renders a complete checkbox [0m[1m[31mform[0m group" do
[0m[32m46[0m-      render_checkbox
[0m[32m47[0m-
--
[0m[32m56[0m-      before do
[0m[32m57[0m-        # Override the label mock for the no-hint case
[0m[32m58[0m:        allow(mock_[0m[1m[31mform[0m).to receive(:label).with(field) do |field_name, &block|
[0m[32m59[0m-          '<label><input type="checkbox" />Active Status</label>'.html_safe
[0m[32m60[0m-        end
--
[0m[32m70[0m-  # Custom CSS classes section removed - we don't use CSS classes
[0m[32m71[0m-
[0m[32m72[0m:  describe "[0m[1m[31mform[0m object handling" do
[0m[32m73[0m:    let(:other_[0m[1m[31mform[0m) { double("OtherFormBuilder") }
[0m[32m74[0m-
[0m[32m75[0m-    before do
[0m[32m76[0m:      allow(view).to receive(:[0m[1m[31mform[0m_field_setup).and_return(
[0m[32m77[0m:        field_config.merge([0m[1m[31mform[0m_object: other_[0m[1m[31mform[0m)
[0m[32m78[0m-      )
[0m[32m79[0m:      allow(other_[0m[1m[31mform[0m).to receive(:check_box).and_return('<input type="checkbox" />'.html_safe)
[0m[32m80[0m:      allow(other_[0m[1m[31mform[0m).to receive(:label).with(field) do |field_name, &block|
[0m[32m81[0m-        # Simulate that the block calls check_box
[0m[32m82[0m:        other_[0m[1m[31mform[0m.check_box(field_name)
[0m[32m83[0m-        '<label><input type="checkbox" />Active Status<small>Enable this feature</small></label>'.html_safe
[0m[32m84[0m-      end
[0m[32m85[0m-    end
[0m[32m86[0m-
[0m[32m87[0m:    it "uses the [0m[1m[31mform[0m object returned by [0m[1m[31mform[0m_field_setup" do
[0m[32m88[0m:      render_checkbox([0m[1m[31mform[0m: other_[0m[1m[31mform[0m)
[0m[32m89[0m-
[0m[32m90[0m:      expect(other_[0m[1m[31mform[0m).to have_received(:check_box)
[0m[32m91[0m:      expect(other_[0m[1m[31mform[0m).to have_received(:label)
[0m[32m92[0m-    end
[0m[32m93[0m-  end
--
[0m[32m97[0m-      it "handles #{field_name} field" do
[0m[32m98[0m-        # Update mocks for the new field
[0m[32m99[0m:        allow(mock_[0m[1m[31mform[0m).to receive(:check_box)
[0m[32m100[0m-          .with(field_name)
[0m[32m101[0m-          .and_return('<input type="checkbox" />'.html_safe)
[0m[32m102[0m-
[0m[32m103[0m:        allow(mock_[0m[1m[31mform[0m).to receive(:label).with(field_name) do |fn, &block|
[0m[32m104[0m-          '<label><input type="checkbox" />Active Status<small>Enable this feature</small></label>'.html_safe
[0m[32m105[0m-        end

[0m[35mspec/features/units/unit_inspection_association_spec.rb[0m
[0m[32m10[0m-
[0m[32m11[0m-  def fill_unit_field(field, value)
[0m[32m12[0m:    fill_in I18n.t("[0m[1m[31mform[0ms.units.fields.#{field}"), with: value
[0m[32m13[0m-  end
[0m[32m14[0m-
--
[0m[32m39[0m-      fill_unit_field(:description, "Unit created from inspection")
[0m[32m40[0m-      fill_unit_field(:owner, "Inspection Owner Ltd")
[0m[32m41[0m:      click_button I18n.t("[0m[1m[31mform[0ms.units.submit")
[0m[32m42[0m-
[0m[32m43[0m-      expect(page).to have_content(I18n.t("units.messages.created_from_inspection"))

[0m[35mapp/assets/stylesheets/z_hover_effects.css[0m
[0m[32m9[0m-  transition: all 0.2s ease !important;
[0m[32m10[0m-  position: relative;
[0m[32m11[0m:  trans[0m[1m[31mform[0m: translateY(0);
[0m[32m12[0m-}
[0m[32m13[0m-
--
[0m[32m18[0m-.button:hover,
[0m[32m19[0m-a[role="button"]:hover {
[0m[32m20[0m:  trans[0m[1m[31mform[0m: translateY(-2px) !important;
[0m[32m21[0m-  box-shadow: 0 4px 12px rgba(118, 99, 228, 0.3) !important;
[0m[32m22[0m-  filter: brightness(1.1) !important;
--
[0m[32m30[0m-.button:active,
[0m[32m31[0m-a[role="button"]:active {
[0m[32m32[0m:  trans[0m[1m[31mform[0m: translateY(0) !important;
[0m[32m33[0m-  box-shadow: 0 2px 4px rgba(118, 99, 228, 0.2) !important;
[0m[32m34[0m-  filter: brightness(0.95) !important;
--
[0m[32m54[0m-.clickable-image:hover,
[0m[32m55[0m-img[onclick]:hover {
[0m[32m56[0m:  trans[0m[1m[31mform[0m: scale(1.05) !important;
[0m[32m57[0m-  box-shadow: 0 8px 20px rgba(0, 0, 0, 0.15) !important;
[0m[32m58[0m-  filter: none !important; /* Remove MVP's brightness filter */
--
[0m[32m61[0m-/* Non-clickable images get a subtle lift */
[0m[32m62[0m-img:hover:not(a img):not(.clickable-image):not([onclick]) {
[0m[32m63[0m:  trans[0m[1m[31mform[0m: translateY(-2px) !important;
[0m[32m64[0m-  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1) !important;
[0m[32m65[0m-  filter: none !important; /* Remove MVP's brightness filter */
--
[0m[32m70[0m-.clickable-image:active,
[0m[32m71[0m-img[onclick]:active {
[0m[32m72[0m:  trans[0m[1m[31mform[0m: scale(1.02) !important;
[0m[32m73[0m-  box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1) !important;
[0m[32m74[0m-}
--
[0m[32m89[0m-  transition: all 0.2s ease !important;
[0m[32m90[0m-  position: relative;
[0m[32m91[0m:  trans[0m[1m[31mform[0m: translateY(0);
[0m[32m92[0m-  display: inline-block;
[0m[32m93[0m-  padding: 0.5rem 1rem !important;
--
[0m[32m102[0m-  transition: all 0.2s ease !important;
[0m[32m103[0m-  position: relative;
[0m[32m104[0m:  trans[0m[1m[31mform[0m: translateY(0);
[0m[32m105[0m-}
[0m[32m106[0m-
[0m[32m107[0m-nav a:hover {
[0m[32m108[0m-  filter: none !important; /* Remove MVP's brightness filter */
[0m[32m109[0m:  trans[0m[1m[31mform[0m: translateY(-2px) !important;
[0m[32m110[0m-  box-shadow: 0 6px 16px rgba(108, 12, 108, 0.3) !important;
[0m[32m111[0m-  background-color: #8a0f8a !important; /* Lighter purple on hover */
--
[0m[32m116[0m-
[0m[32m117[0m-nav a:active {
[0m[32m118[0m:  trans[0m[1m[31mform[0m: translateY(0) !important;
[0m[32m119[0m-  box-shadow: 0 2px 6px rgba(108, 12, 108, 0.2) !important;
[0m[32m120[0m-  background-color: #4a084a !important; /* Darker purple on click */
--
[0m[32m131[0m-
[0m[32m132[0m-nav a.active:hover {
[0m[32m133[0m:  trans[0m[1m[31mform[0m: translateY(-2px) !important;
[0m[32m134[0m-  box-shadow: 0 6px 16px rgba(108, 12, 108, 0.3) !important;
[0m[32m135[0m-  color: var(--color-link) !important;
--
[0m[32m138[0m-nav button:hover:not([disabled]) {
[0m[32m139[0m-  filter: none !important;
[0m[32m140[0m:  trans[0m[1m[31mform[0m: translateY(-2px) !important;
[0m[32m141[0m-  box-shadow: 0 6px 16px rgba(108, 12, 108, 0.3) !important;
[0m[32m142[0m-}
[0m[32m143[0m-
[0m[32m144[0m-nav button:active:not([disabled]) {
[0m[32m145[0m:  trans[0m[1m[31mform[0m: translateY(0) !important;
[0m[32m146[0m-  box-shadow: 0 2px 6px rgba(108, 12, 108, 0.2) !important;
[0m[32m147[0m-}
--
[0m[32m170[0m-
[0m[32m171[0m-.share-button:hover {
[0m[32m172[0m:  trans[0m[1m[31mform[0m: translateY(-1px);
[0m[32m173[0m-  box-shadow: 0 2px 8px rgba(25, 118, 210, 0.3);
[0m[32m174[0m-}
[0m[32m175[0m-
[0m[32m176[0m-.share-button:active {
[0m[32m177[0m:  trans[0m[1m[31mform[0m: translateY(0);
[0m[32m178[0m-  box-shadow: 0 1px 4px rgba(25, 118, 210, 0.2);
[0m[32m179[0m-}
--
[0m[32m182[0m-section aside:hover {
[0m[32m183[0m-  box-shadow: var(--box-shadow) var(--color-bg-secondary);
[0m[32m184[0m:  trans[0m[1m[31mform[0m: none;
[0m[32m185[0m-}
[0m[32m186[0m-
[0m[32m187[0m-/* Construction banner images should not have hover effects */
[0m[32m188[0m-.construction-banner img {
[0m[32m189[0m:  trans[0m[1m[31mform[0m: none !important;
[0m[32m190[0m-  box-shadow: none !important;
[0m[32m191[0m-  transition: none !important;
--
[0m[32m193[0m-
[0m[32m194[0m-.construction-banner img:hover {
[0m[32m195[0m:  trans[0m[1m[31mform[0m: none !important;
[0m[32m196[0m-  box-shadow: none !important;
[0m[32m197[0m-  transition: none !important;

[0m[35mspec/requests/users/users_seed_data_spec.rb[0m
[0m[32m45[0m-        expect(response).to redirect_to(root_path)
[0m[32m46[0m-        follow_redirect!
[0m[32m47[0m:        expect(response.body).to include(I18n.t("[0m[1m[31mform[0ms.session_new.status.admin_required"))
[0m[32m48[0m-      end
[0m[32m49[0m-    end
--
[0m[32m96[0m-        expect(response).to redirect_to(root_path)
[0m[32m97[0m-        follow_redirect!
[0m[32m98[0m:        expect(response.body).to include(I18n.t("[0m[1m[31mform[0ms.session_new.status.admin_required"))
[0m[32m99[0m-        expect(test_user.reload.has_seed_data?).to be true
[0m[32m100[0m-      end

[0m[35mspec/features/units/unit_creation_company_restriction_spec.rb[0m
[0m[32m19[0m-      expect(page).to have_content(I18n.t("units.titles.new"))
[0m[32m20[0m-
[0m[32m21[0m:      expect_[0m[1m[31mform[0m_fields_present("[0m[1m[31mform[0ms.units")
[0m[32m22[0m-
[0m[32m23[0m:      fill_in_[0m[1m[31mform[0m :units, :name, "Test Unit"
[0m[32m24[0m:      fill_in_[0m[1m[31mform[0m :units, :serial, "TEST123"
[0m[32m25[0m:      fill_in_[0m[1m[31mform[0m :units, :manufacturer, "Test Manufacturer"
[0m[32m26[0m:      fill_in_[0m[1m[31mform[0m :units, :owner, "Test Owner"
[0m[32m27[0m:      fill_in_[0m[1m[31mform[0m :units, :description, "Test Description"
[0m[32m28[0m-
[0m[32m29[0m:      fill_in_[0m[1m[31mform[0m :units, :model, "Test Model"
[0m[32m30[0m:      fill_in_[0m[1m[31mform[0m :units, :notes, "Created via automated test"
[0m[32m31[0m-
[0m[32m32[0m:      submit_[0m[1m[31mform[0m :units
[0m[32m33[0m-
[0m[32m34[0m-      expect(page).to have_content(I18n.t("units.messages.created"))
--
[0m[32m36[0m-    end
[0m[32m37[0m-
[0m[32m38[0m:    scenario "demonstrates comprehensive [0m[1m[31mform[0m helper usage" do
[0m[32m39[0m-      visit new_unit_path
[0m[32m40[0m-
[0m[32m41[0m:      expect_[0m[1m[31mform[0m_fields_present("[0m[1m[31mform[0ms.units")
[0m[32m42[0m-
[0m[32m43[0m:      fill_in_[0m[1m[31mform[0m :units, :name, "Helper Demo Unit"
[0m[32m44[0m:      fill_in_[0m[1m[31mform[0m :units, :serial, "DEMO123"
[0m[32m45[0m:      fill_in_[0m[1m[31mform[0m :units, :manufacturer, "Helper Corp"
[0m[32m46[0m:      fill_in_[0m[1m[31mform[0m :units, :owner, "Test Owner"
[0m[32m47[0m:      fill_in_[0m[1m[31mform[0m :units, :description, "Demonstrates [0m[1m[31mform[0m helper capabilities"
[0m[32m48[0m-
[0m[32m49[0m:      submit_[0m[1m[31mform[0m :units
[0m[32m50[0m-
[0m[32m51[0m-      expect(page).to have_content("Helper Demo Unit")

[0m[35mspec/features/safety_standards/safety_standards_display_spec.rb[0m
[0m[32m27[0m-  end
[0m[32m28[0m-
[0m[32m29[0m:  scenario "safety standards info appears in slide assessment [0m[1m[31mform[0m" do
[0m[32m30[0m-    inspection.update!(has_slide: true)
[0m[32m31[0m:    inspection.slide_assessment.update!(slide_plat[0m[1m[31mform[0m_height: 2.5)
[0m[32m32[0m-
[0m[32m33[0m-    visit_inspection_edit(inspection)
[0m[32m34[0m:    click_link I18n.t("[0m[1m[31mform[0ms.slide.header")
[0m[32m35[0m-
[0m[32m36[0m-    within(".safety-standards-info") do
--
[0m[32m42[0m-  end
[0m[32m43[0m-
[0m[32m44[0m:  scenario "safety standards info appears in user height assessment [0m[1m[31mform[0m" do
[0m[32m45[0m-    inspection.user_height_assessment.update!(
[0m[32m46[0m-      tallest_user_height: 1.2,
--
[0m[32m51[0m-
[0m[32m52[0m-    visit_inspection_edit(inspection)
[0m[32m53[0m:    click_link I18n.t("[0m[1m[31mform[0ms.user_height.header")
[0m[32m54[0m-
[0m[32m55[0m-    within(".safety-standards-info") do
--
[0m[32m60[0m-  end
[0m[32m61[0m-
[0m[32m62[0m:  scenario "safety standards info appears in anchorage assessment [0m[1m[31mform[0m" do
[0m[32m63[0m-    # For 5m x 4m x 3m unit:
[0m[32m64[0m-    # Front/back: 4m x 3m = 12m² → 2 anchors each
--
[0m[32m68[0m-
[0m[32m69[0m-    visit_inspection_edit(inspection)
[0m[32m70[0m:    click_link I18n.t("[0m[1m[31mform[0ms.anchorage.header")
[0m[32m71[0m-
[0m[32m72[0m-    within(".safety-standards-info") do

[0m[35mspec/views/form/_auto_submit_select.html.erb_spec.rb[0m
[0m[32m1[0m-require "rails_helper"
[0m[32m2[0m-
[0m[32m3[0m:RSpec.describe "[0m[1m[31mform[0m/_auto_submit_select.html.erb", type: :view do
[0m[32m4[0m-  let(:field) { :status }
[0m[32m5[0m-  let(:options) { [["Active", "active"], ["Inactive", "inactive"]] }
--
[0m[32m10[0m-  end
[0m[32m11[0m-
[0m[32m12[0m:  context "when used within a [0m[1m[31mform[0m context" do
[0m[32m13[0m:    let(:[0m[1m[31mform[0m_builder) { double("[0m[1m[31mform[0m_builder") }
[0m[32m14[0m-    let(:mock_object) { double("model") }
[0m[32m15[0m-
[0m[32m16[0m-    before do
[0m[32m17[0m:      allow([0m[1m[31mform[0m_builder).to receive(:object).and_return(mock_object)
[0m[32m18[0m:      allow([0m[1m[31mform[0m_builder).to receive(:label).and_return("Status")
[0m[32m19[0m:      allow([0m[1m[31mform[0m_builder).to receive(:select).and_return('<select name="status"></select>'.html_safe)
[0m[32m20[0m-      allow(mock_object).to receive(:status).and_return("active")
[0m[32m21[0m-    end
[0m[32m22[0m-
[0m[32m23[0m:    it "renders select within existing [0m[1m[31mform[0m" do
[0m[32m24[0m:      render "[0m[1m[31mform[0m/auto_submit_select",
[0m[32m25[0m-        field: field,
[0m[32m26[0m-        options: options,
[0m[32m27[0m:        [0m[1m[31mform[0m: [0m[1m[31mform[0m_builder
[0m[32m28[0m-
[0m[32m29[0m:      expect([0m[1m[31mform[0m_builder).to have_received(:select).with(
[0m[32m30[0m-        field,
[0m[32m31[0m-        include("<option selected=\"selected\" value=\"active\">Active</option>"),
[0m[32m32[0m-        {},
[0m[32m33[0m:        {onchange: "this.[0m[1m[31mform[0m.submit();"}
[0m[32m34[0m-      )
[0m[32m35[0m-      expect(rendered).to include('<select name="status"></select>')
--
[0m[32m37[0m-
[0m[32m38[0m-    it "includes label when provided" do
[0m[32m39[0m:      render "[0m[1m[31mform[0m/auto_submit_select",
[0m[32m40[0m-        field: field,
[0m[32m41[0m-        options: options,
[0m[32m42[0m:        [0m[1m[31mform[0m: [0m[1m[31mform[0m_builder,
[0m[32m43[0m-        label: "Choose Status"
[0m[32m44[0m-
[0m[32m45[0m:      expect([0m[1m[31mform[0m_builder).to have_received(:label).with(field, "Choose Status")
[0m[32m46[0m-    end
[0m[32m47[0m-
[0m[32m48[0m-    it "skips label when not provided" do
[0m[32m49[0m:      render "[0m[1m[31mform[0m/auto_submit_select",
[0m[32m50[0m-        field: field,
[0m[32m51[0m-        options: options,
[0m[32m52[0m:        [0m[1m[31mform[0m: [0m[1m[31mform[0m_builder
[0m[32m53[0m-
[0m[32m54[0m:      expect([0m[1m[31mform[0m_builder).not_to have_received(:label)
[0m[32m55[0m-    end
[0m[32m56[0m-
[0m[32m57[0m-    it "includes blank option when requested" do
[0m[32m58[0m:      render "[0m[1m[31mform[0m/auto_submit_select",
[0m[32m59[0m-        field: field,
[0m[32m60[0m-        options: options,
[0m[32m61[0m:        [0m[1m[31mform[0m: [0m[1m[31mform[0m_builder,
[0m[32m62[0m-        include_blank: true
[0m[32m63[0m-
[0m[32m64[0m:      expect([0m[1m[31mform[0m_builder).to have_received(:select).with(
[0m[32m65[0m-        field,
[0m[32m66[0m-        include("<option selected=\"selected\" value=\"active\">Active</option>"),
[0m[32m67[0m-        {include_blank: "All"},
[0m[32m68[0m:        {onchange: "this.[0m[1m[31mform[0m.submit();"}
[0m[32m69[0m-      )
[0m[32m70[0m-    end
[0m[32m71[0m-
[0m[32m72[0m-    it "uses custom blank text" do
[0m[32m73[0m:      render "[0m[1m[31mform[0m/auto_submit_select",
[0m[32m74[0m-        field: field,
[0m[32m75[0m-        options: options,
[0m[32m76[0m:        [0m[1m[31mform[0m: [0m[1m[31mform[0m_builder,
[0m[32m77[0m-        include_blank: true,
[0m[32m78[0m-        blank_text: "Choose..."
[0m[32m79[0m-
[0m[32m80[0m:      expect([0m[1m[31mform[0m_builder).to have_received(:select).with(
[0m[32m81[0m-        field,
[0m[32m82[0m-        include("<option selected=\"selected\" value=\"active\">Active</option>"),
[0m[32m83[0m-        {include_blank: "Choose..."},
[0m[32m84[0m:        {onchange: "this.[0m[1m[31mform[0m.submit();"}
[0m[32m85[0m-      )
[0m[32m86[0m-    end
--
[0m[32m94[0m-        # We can't easily test the options_for_select output directly,
[0m[32m95[0m-        # but we can verify the select method was called
[0m[32m96[0m:        render "[0m[1m[31mform[0m/auto_submit_select",
[0m[32m97[0m-          field: field,
[0m[32m98[0m-          options: options,
[0m[32m99[0m:          [0m[1m[31mform[0m: [0m[1m[31mform[0m_builder
[0m[32m100[0m-
[0m[32m101[0m:        expect([0m[1m[31mform[0m_builder).to have_received(:select)
[0m[32m102[0m-      end
[0m[32m103[0m-    end
--
[0m[32m107[0m-    let(:url) { "/filter" }
[0m[32m108[0m-
[0m[32m109[0m:    it "renders standalone [0m[1m[31mform[0m with select" do
[0m[32m110[0m:      render "[0m[1m[31mform[0m/auto_submit_select",
[0m[32m111[0m-        field: field,
[0m[32m112[0m-        options: options,
--
[0m[32m116[0m-      expect(rendered).to include('method="get"')
[0m[32m117[0m-      expect(rendered).to include('data-turbo="false"')
[0m[32m118[0m:      expect(rendered).to include('onchange="this.[0m[1m[31mform[0m.submit();"')
[0m[32m119[0m-    end
[0m[32m120[0m-
[0m[32m121[0m-    it "includes label when provided" do
[0m[32m122[0m:      render "[0m[1m[31mform[0m/auto_submit_select",
[0m[32m123[0m-        field: field,
[0m[32m124[0m-        options: options,
--
[0m[32m132[0m-      allow(view).to receive(:params).and_return({search: "test", page: "2"})
[0m[32m133[0m-
[0m[32m134[0m:      render "[0m[1m[31mform[0m/auto_submit_select",
[0m[32m135[0m-        field: field,
[0m[32m136[0m-        options: options,
--
[0m[32m144[0m-
[0m[32m145[0m-    it "can enable turbo" do
[0m[32m146[0m:      render "[0m[1m[31mform[0m/auto_submit_select",
[0m[32m147[0m-        field: field,
[0m[32m148[0m-        options: options,
--
[0m[32m159[0m-
[0m[32m160[0m-      it "preserves the selected value" do
[0m[32m161[0m:        render "[0m[1m[31mform[0m/auto_submit_select",
[0m[32m162[0m-          field: field,
[0m[32m163[0m-          options: options,
--
[0m[32m165[0m-
[0m[32m166[0m-        # The selected option should be preserved in the options_for_select
[0m[32m167[0m:        expect(rendered).to include('onchange="this.[0m[1m[31mform[0m.submit();"')
[0m[32m168[0m-      end
[0m[32m169[0m-    end
--
[0m[32m173[0m-    it "requires field parameter" do
[0m[32m174[0m-      expect {
[0m[32m175[0m:        render "[0m[1m[31mform[0m/auto_submit_select", options: options
[0m[32m176[0m-      }.to raise_error(ActionView::Template::Error, /field is required/)
[0m[32m177[0m-    end
--
[0m[32m179[0m-    it "requires options parameter" do
[0m[32m180[0m-      expect {
[0m[32m181[0m:        render "[0m[1m[31mform[0m/auto_submit_select", field: field
[0m[32m182[0m-      }.to raise_error(ActionView::Template::Error, /options is required/)
[0m[32m183[0m-    end
--
[0m[32m185[0m-    it "requires url for standalone usage" do
[0m[32m186[0m-      expect {
[0m[32m187[0m:        render "[0m[1m[31mform[0m/auto_submit_select", field: field, options: options
[0m[32m188[0m-      }.to raise_error(ActionView::Template::Error, /url is required for standalone/)
[0m[32m189[0m-    end
--
[0m[32m201[0m-
[0m[32m202[0m-    it "handles complex option arrays" do
[0m[32m203[0m:      render "[0m[1m[31mform[0m/auto_submit_select",
[0m[32m204[0m-        field: field,
[0m[32m205[0m-        options: complex_options,
[0m[32m206[0m-        url: "/test"
[0m[32m207[0m-
[0m[32m208[0m:      expect(rendered).to include('onchange="this.[0m[1m[31mform[0m.submit();"')
[0m[32m209[0m-    end
[0m[32m210[0m-  end

[0m[35mspec/features/safety_standards/safety_standards_turbo_spec.rb[0m
[0m[32m6[0m-  describe "anchor calculator" do
[0m[32m7[0m-    it "updates results without page reload via Turbo" do
[0m[32m8[0m:      within(".calculator-[0m[1m[31mform[0m", text: I18n.t("[0m[1m[31mform[0ms.safety_standards_anchors.header")) do
[0m[32m9[0m:        fill_in I18n.t("[0m[1m[31mform[0ms.safety_standards_anchors.fields.length"), with: 5.0
[0m[32m10[0m:        fill_in I18n.t("[0m[1m[31mform[0ms.safety_standards_anchors.fields.width"), with: 5.0
[0m[32m11[0m:        fill_in I18n.t("[0m[1m[31mform[0ms.safety_standards_anchors.fields.height"), with: 3.0
[0m[32m12[0m:        click_button I18n.t("[0m[1m[31mform[0ms.safety_standards_anchors.submit")
[0m[32m13[0m-      end
[0m[32m14[0m-
--
[0m[32m21[0m-    end
[0m[32m22[0m-
[0m[32m23[0m:    it "maintains [0m[1m[31mform[0m values after submission" do
[0m[32m24[0m:      within(".calculator-[0m[1m[31mform[0m", text: I18n.t("[0m[1m[31mform[0ms.safety_standards_anchors.header")) do
[0m[32m25[0m:        fill_in I18n.t("[0m[1m[31mform[0ms.safety_standards_anchors.fields.length"), with: 5.0
[0m[32m26[0m:        fill_in I18n.t("[0m[1m[31mform[0ms.safety_standards_anchors.fields.width"), with: 5.0
[0m[32m27[0m:        fill_in I18n.t("[0m[1m[31mform[0ms.safety_standards_anchors.fields.height"), with: 3.0
[0m[32m28[0m:        click_button I18n.t("[0m[1m[31mform[0ms.safety_standards_anchors.submit")
[0m[32m29[0m-      end
[0m[32m30[0m-
[0m[32m31[0m:      within(".calculator-[0m[1m[31mform[0m", text: I18n.t("[0m[1m[31mform[0ms.safety_standards_anchors.header")) do
[0m[32m32[0m:        expect(find_field(I18n.t("[0m[1m[31mform[0ms.safety_standards_anchors.fields.length")).value).to eq("5.0")
[0m[32m33[0m:        expect(find_field(I18n.t("[0m[1m[31mform[0ms.safety_standards_anchors.fields.width")).value).to eq("5.0")
[0m[32m34[0m:        expect(find_field(I18n.t("[0m[1m[31mform[0ms.safety_standards_anchors.fields.height")).value).to eq("3.0")
[0m[32m35[0m-      end
[0m[32m36[0m-    end
--
[0m[32m41[0m-      click_link "Slides"
[0m[32m42[0m-
[0m[32m43[0m:      within(".calculator-[0m[1m[31mform[0m", text: I18n.t("[0m[1m[31mform[0ms.safety_standards_slide_runout.header")) do
[0m[32m44[0m:        fill_in I18n.t("[0m[1m[31mform[0ms.safety_standards_slide_runout.fields.plat[0m[1m[31mform[0m_height"), with: 2.5
[0m[32m45[0m:        click_button I18n.t("[0m[1m[31mform[0ms.safety_standards_slide_runout.submit")
[0m[32m46[0m-      end
[0m[32m47[0m-
--
[0m[32m58[0m-      click_link "Wall Heights"
[0m[32m59[0m-
[0m[32m60[0m:      within(".calculator-[0m[1m[31mform[0m", text: I18n.t("[0m[1m[31mform[0ms.safety_standards_wall_height.header")) do
[0m[32m61[0m:        fill_in I18n.t("[0m[1m[31mform[0ms.safety_standards_wall_height.fields.user_height"), with: 1.5
[0m[32m62[0m:        click_button I18n.t("[0m[1m[31mform[0ms.safety_standards_wall_height.submit")
[0m[32m63[0m-      end
[0m[32m64[0m-
--
[0m[32m71[0m-  end
[0m[32m72[0m-
[0m[32m73[0m:  describe "multiple [0m[1m[31mform[0m interactions" do
[0m[32m74[0m:    it "updates each [0m[1m[31mform[0m independently" do
[0m[32m75[0m:      within(".calculator-[0m[1m[31mform[0m", text: I18n.t("[0m[1m[31mform[0ms.safety_standards_anchors.header")) do
[0m[32m76[0m:        fill_in I18n.t("[0m[1m[31mform[0ms.safety_standards_anchors.fields.length"), with: 5.0
[0m[32m77[0m:        fill_in I18n.t("[0m[1m[31mform[0ms.safety_standards_anchors.fields.width"), with: 5.0
[0m[32m78[0m:        fill_in I18n.t("[0m[1m[31mform[0ms.safety_standards_anchors.fields.height"), with: 3.0
[0m[32m79[0m:        click_button I18n.t("[0m[1m[31mform[0ms.safety_standards_anchors.submit")
[0m[32m80[0m-      end
[0m[32m81[0m-
--
[0m[32m86[0m-      click_link "Slides"
[0m[32m87[0m-
[0m[32m88[0m:      within(".calculator-[0m[1m[31mform[0m", text: I18n.t("[0m[1m[31mform[0ms.safety_standards_slide_runout.header")) do
[0m[32m89[0m:        fill_in I18n.t("[0m[1m[31mform[0ms.safety_standards_slide_runout.fields.plat[0m[1m[31mform[0m_height"), with: 2.5
[0m[32m90[0m:        click_button I18n.t("[0m[1m[31mform[0ms.safety_standards_slide_runout.submit")
[0m[32m91[0m-      end
[0m[32m92[0m-

[0m[35mspec/features/safety_standards/safety_standards_interactive_forms_spec.rb[0m
[0m[32m5[0m-    visit safety_standards_path
[0m[32m6[0m-
[0m[32m7[0m:    fill_anchor_[0m[1m[31mform[0m(length: 5.0, width: 5.0, height: 3.0)
[0m[32m8[0m:    submit_anchor_[0m[1m[31mform[0m
[0m[32m9[0m-
[0m[32m10[0m-    expect_anchor_result(8)
--
[0m[32m21[0m-    visit safety_standards_path
[0m[32m22[0m-
[0m[32m23[0m:    fill_runout_[0m[1m[31mform[0m(height: 2.5)
[0m[32m24[0m:    submit_runout_[0m[1m[31mform[0m
[0m[32m25[0m-
[0m[32m26[0m-    expect_runout_result(required_runout: 1.25)
[0m[32m27[0m-
[0m[32m28[0m-    within("#slide-runout-result") do
[0m[32m29[0m:      expect(page).to have_content("Plat[0m[1m[31mform[0m Height: 2.5m")
[0m[32m30[0m-      expect(page).to have_content("50% of 2.5m = 1.25m, minimum 0.3m = 1.25m")
[0m[32m31[0m-    end
--
[0m[32m35[0m-    visit safety_standards_path
[0m[32m36[0m-
[0m[32m37[0m:    fill_wall_height_[0m[1m[31mform[0m(height: 1.0)
[0m[32m38[0m:    submit_wall_height_[0m[1m[31mform[0m
[0m[32m39[0m-    expect_wall_height_result("Walls must be at least 1.0m (equal to user height)")
[0m[32m40[0m-
[0m[32m41[0m:    fill_wall_height_[0m[1m[31mform[0m(height: 1.5)
[0m[32m42[0m:    submit_wall_height_[0m[1m[31mform[0m
[0m[32m43[0m-    expect_wall_height_result("Walls must be at least 1.5m (equal to user height)")
[0m[32m44[0m-
[0m[32m45[0m:    fill_wall_height_[0m[1m[31mform[0m(height: 4.0)
[0m[32m46[0m:    submit_wall_height_[0m[1m[31mform[0m
[0m[32m47[0m-    expect_wall_height_result("Walls must be at least 5.0m (1.25× user height)")
[0m[32m48[0m-
[0m[32m49[0m:    fill_wall_height_[0m[1m[31mform[0m(height: 7.0)
[0m[32m50[0m:    submit_wall_height_[0m[1m[31mform[0m
[0m[32m51[0m-
[0m[32m52[0m-    within("#wall-height-result") do
--
[0m[32m59[0m-    visit safety_standards_path
[0m[32m60[0m-
[0m[32m61[0m:    fill_runout_[0m[1m[31mform[0m(height: 1.0)
[0m[32m62[0m:    submit_runout_[0m[1m[31mform[0m
[0m[32m63[0m-
[0m[32m64[0m-    expected_runout = SafetyStandard.calculate_required_runout(1.0)
--
[0m[32m71[0m-
[0m[32m72[0m-    expect(page).to have_content("((Area × 114.0 × 1.5) ÷ 1600.0)")
[0m[32m73[0m:    expect(page).to have_content("50% of plat[0m[1m[31mform[0m height, minimum 300mm")
[0m[32m74[0m-
[0m[32m75[0m-    expect(page).to have_content("For 25.0m² area: 3 anchors required")
[0m[32m76[0m:    expect(page).to have_content("For 2.5m plat[0m[1m[31mform[0m: 1.25m runout required")
[0m[32m77[0m-
[0m[32m78[0m-    expect(page).to have_content("Ruby Source Code")
--
[0m[32m80[0m-    expect(page).to have_content("Source: app/services/safety_standard.rb")
[0m[32m81[0m-
[0m[32m82[0m:    fill_anchor_[0m[1m[31mform[0m(length: 4.0, width: 4.0, height: 3.0)
[0m[32m83[0m:    submit_anchor_[0m[1m[31mform[0m
[0m[32m84[0m-
[0m[32m85[0m-    expect_anchor_result(8)
--
[0m[32m94[0m-    visit safety_standards_path
[0m[32m95[0m-
[0m[32m96[0m:    fill_anchor_[0m[1m[31mform[0m(length: 1.0, width: 1.0, height: 1.0)
[0m[32m97[0m:    submit_anchor_[0m[1m[31mform[0m
[0m[32m98[0m-
[0m[32m99[0m-    expect_anchor_result(4)
--
[0m[32m106[0m-      visit safety_standards_path
[0m[32m107[0m-
[0m[32m108[0m:      fill_anchor_[0m[1m[31mform[0m(length: length, width: width, height: height)
[0m[32m109[0m:      submit_anchor_[0m[1m[31mform[0m
[0m[32m110[0m-
[0m[32m111[0m-      expected = SafetyStandard.build_anchor_result(

[0m[35mspec/features/safety_standards/safety_standards_unified_spec.rb[0m
[0m[32m24[0m-      {
[0m[32m25[0m-        type: "slide_runout",
[0m[32m26[0m:        plat[0m[1m[31mform[0m_height: 2.5
[0m[32m27[0m-      }
[0m[32m28[0m-    end
--
[0m[32m39[0m-    include_context "safety standards test data"
[0m[32m40[0m-
[0m[32m41[0m:    describe "HTML [0m[1m[31mform[0mat" do
[0m[32m42[0m-      context "anchor calculation" do
[0m[32m43[0m-        it "redirects with calculation params" do
--
[0m[32m57[0m-    end
[0m[32m58[0m-
[0m[32m59[0m:    describe "JSON [0m[1m[31mform[0mat" do
[0m[32m60[0m-      it "accepts and processes JSON requests" do
[0m[32m61[0m-        post safety_standards_path,
--
[0m[32m96[0m-    end
[0m[32m97[0m-
[0m[32m98[0m:    describe "Turbo Stream [0m[1m[31mform[0mat" do
[0m[32m99[0m-      let(:turbo_headers) { {Accept: "text/vnd.turbo-stream.html"} }
[0m[32m100[0m-
--
[0m[32m117[0m-    describe "anchor calculator" do
[0m[32m118[0m-      it "submits via Turbo without page reload" do
[0m[32m119[0m:        within_[0m[1m[31mform[0m("safety_standards_anchors") do
[0m[32m120[0m:          fill_in_[0m[1m[31mform[0m("safety_standards_anchors", :length, 5.0)
[0m[32m121[0m:          fill_in_[0m[1m[31mform[0m("safety_standards_anchors", :width, 5.0)
[0m[32m122[0m:          fill_in_[0m[1m[31mform[0m("safety_standards_anchors", :height, 3.0)
[0m[32m123[0m:          submit_[0m[1m[31mform[0m("safety_standards_anchors")
[0m[32m124[0m-        end
[0m[32m125[0m-

[0m[35mspec/requests/api/inspections_json_spec.rb[0m
[0m[32m63[0m-          user_height = json["assessments"]["user_height_assessment"]
[0m[32m64[0m-          expect(user_height["containing_wall_height"]).to be_present
[0m[32m65[0m:          expect(user_height["plat[0m[1m[31mform[0m_height"]).to be_present
[0m[32m66[0m-          expect(user_height).not_to have_key("inspection_id")
[0m[32m67[0m-          expect(user_height).not_to have_key("created_at")
--
[0m[32m93[0m-          inspection.slide_assessment.update!(runout: 2.5)
[0m[32m94[0m-
[0m[32m95[0m:          get inspection_path(inspection, [0m[1m[31mform[0mat: :json)
[0m[32m96[0m-
[0m[32m97[0m-          json = JSON.parse(response.body)
--
[0m[32m112[0m-    end
[0m[32m113[0m-
[0m[32m114[0m:    context "using long URL [0m[1m[31mform[0mat" do
[0m[32m115[0m-      it "returns JSON for /inspections/:id.json" do
[0m[32m116[0m-        get "/inspections/#{inspection.id}.json"

[0m[35mspec/views/form/_text_area.html.erb_spec.rb[0m
[0m[32m1[0m-require "rails_helper"
[0m[32m2[0m-
[0m[32m3[0m:RSpec.describe "[0m[1m[31mform[0m/_text_area.html.erb", type: :view do
[0m[32m4[0m:  let(:mock_[0m[1m[31mform[0m) { double("FormBuilder") }
[0m[32m5[0m-  let(:field) { :description }
[0m[32m6[0m-
[0m[32m7[0m-  before do
[0m[32m8[0m:    # Set up [0m[1m[31mform[0m field setup mock
[0m[32m9[0m:    allow(view).to receive(:[0m[1m[31mform[0m_field_setup).and_return({
[0m[32m10[0m:      [0m[1m[31mform[0m_object: mock_[0m[1m[31mform[0m,
[0m[32m11[0m:      i18n_base: "test.[0m[1m[31mform[0ms",
[0m[32m12[0m-      field_label: "Description",
[0m[32m13[0m-      field_hint: "Provide details",
--
[0m[32m15[0m-    })
[0m[32m16[0m-
[0m[32m17[0m:    # Mock [0m[1m[31mform[0m builder methods
[0m[32m18[0m:    allow(mock_[0m[1m[31mform[0m).to receive(:label).and_return('<label for="description">Description</label>'.html_safe)
[0m[32m19[0m:    allow(mock_[0m[1m[31mform[0m).to receive(:text_area).and_return('<textarea name="description" id="description"></textarea>'.html_safe)
[0m[32m20[0m-
[0m[32m21[0m-    # Set current i18n base for the partial
[0m[32m22[0m:    view.instance_variable_set(:@_current_i18n_base, "test.[0m[1m[31mform[0ms")
[0m[32m23[0m-  end
[0m[32m24[0m-
[0m[32m25[0m-  context "with default options" do
[0m[32m26[0m-    it "renders text area with label" do
[0m[32m27[0m:      render partial: "[0m[1m[31mform[0m/text_area", locals: {field: field}
[0m[32m28[0m-
[0m[32m29[0m-      expect(rendered).to include('<label for="description">Description</label>')
--
[0m[32m32[0m-
[0m[32m33[0m-    it "displays hint when present" do
[0m[32m34[0m:      render partial: "[0m[1m[31mform[0m/text_area", locals: {field: field}
[0m[32m35[0m-
[0m[32m36[0m-      expect(rendered).to have_css("small", text: "Provide details")
--
[0m[32m38[0m-
[0m[32m39[0m-    it "uses default rows of 4" do
[0m[32m40[0m:      allow(mock_[0m[1m[31mform[0m).to receive(:text_area).with(field, hash_including(rows: 4)).and_return('<textarea rows="4"></textarea>'.html_safe)
[0m[32m41[0m-
[0m[32m42[0m:      render partial: "[0m[1m[31mform[0m/text_area", locals: {field: field}
[0m[32m43[0m-
[0m[32m44[0m:      expect(mock_[0m[1m[31mform[0m).to have_received(:text_area).with(field, hash_including(rows: 4))
[0m[32m45[0m-    end
[0m[32m46[0m-
[0m[32m47[0m-    it "includes placeholder when provided" do
[0m[32m48[0m:      allow(mock_[0m[1m[31mform[0m).to receive(:text_area).with(field, hash_including(placeholder: "Enter description here...")).and_return('<textarea placeholder="Enter description here..."></textarea>'.html_safe)
[0m[32m49[0m-
[0m[32m50[0m:      render partial: "[0m[1m[31mform[0m/text_area", locals: {field: field}
[0m[32m51[0m-
[0m[32m52[0m:      expect(mock_[0m[1m[31mform[0m).to have_received(:text_area).with(field, hash_including(placeholder: "Enter description here..."))
[0m[32m53[0m-    end
[0m[32m54[0m-  end
--
[0m[32m56[0m-  context "with custom options" do
[0m[32m57[0m-    it "uses custom rows value" do
[0m[32m58[0m:      allow(mock_[0m[1m[31mform[0m).to receive(:text_area).with(field, hash_including(rows: 10)).and_return('<textarea rows="10"></textarea>'.html_safe)
[0m[32m59[0m-
[0m[32m60[0m:      render partial: "[0m[1m[31mform[0m/text_area", locals: {field: field, rows: 10}
[0m[32m61[0m-
[0m[32m62[0m:      expect(mock_[0m[1m[31mform[0m).to have_received(:text_area).with(field, hash_including(rows: 10))
[0m[32m63[0m-    end
[0m[32m64[0m-
[0m[32m65[0m-    it "respects required parameter" do
[0m[32m66[0m:      allow(mock_[0m[1m[31mform[0m).to receive(:text_area).with(field, hash_including(required: true)).and_return("<textarea required></textarea>".html_safe)
[0m[32m67[0m-
[0m[32m68[0m:      render partial: "[0m[1m[31mform[0m/text_area", locals: {field: field, required: true}
[0m[32m69[0m-
[0m[32m70[0m:      expect(mock_[0m[1m[31mform[0m).to have_received(:text_area).with(field, hash_including(required: true))
[0m[32m71[0m-    end
[0m[32m72[0m-  end
--
[0m[32m74[0m-  context "without hint" do
[0m[32m75[0m-    before do
[0m[32m76[0m:      allow(view).to receive(:[0m[1m[31mform[0m_field_setup).and_return({
[0m[32m77[0m:        [0m[1m[31mform[0m_object: mock_[0m[1m[31mform[0m,
[0m[32m78[0m:        i18n_base: "test.[0m[1m[31mform[0ms",
[0m[32m79[0m-        field_label: "Description",
[0m[32m80[0m-        field_hint: nil,
--
[0m[32m84[0m-
[0m[32m85[0m-    it "does not render hint text" do
[0m[32m86[0m:      render partial: "[0m[1m[31mform[0m/text_area", locals: {field: field}
[0m[32m87[0m-
[0m[32m88[0m-      expect(rendered).not_to have_css("small")
--
[0m[32m92[0m-  context "without placeholder" do
[0m[32m93[0m-    before do
[0m[32m94[0m:      allow(view).to receive(:[0m[1m[31mform[0m_field_setup).and_return({
[0m[32m95[0m:        [0m[1m[31mform[0m_object: mock_[0m[1m[31mform[0m,
[0m[32m96[0m:        i18n_base: "test.[0m[1m[31mform[0ms",
[0m[32m97[0m-        field_label: "Description",
[0m[32m98[0m-        field_hint: "Provide details",
--
[0m[32m102[0m-
[0m[32m103[0m-    it "does not include placeholder attribute" do
[0m[32m104[0m:      allow(mock_[0m[1m[31mform[0m).to receive(:text_area).with(field, hash_excluding(:placeholder)).and_return("<textarea></textarea>".html_safe)
[0m[32m105[0m-
[0m[32m106[0m:      render partial: "[0m[1m[31mform[0m/text_area", locals: {field: field}
[0m[32m107[0m-
[0m[32m108[0m:      expect(mock_[0m[1m[31mform[0m).to have_received(:text_area).with(field, hash_excluding(:placeholder))
[0m[32m109[0m-    end
[0m[32m110[0m-  end
[0m[32m111[0m-
[0m[32m112[0m:  context "[0m[1m[31mform[0m object handling" do
[0m[32m113[0m:    let(:other_[0m[1m[31mform[0m) { double("OtherFormBuilder") }
[0m[32m114[0m-
[0m[32m115[0m-    before do
[0m[32m116[0m:      allow(view).to receive(:[0m[1m[31mform[0m_field_setup).and_return({
[0m[32m117[0m:        [0m[1m[31mform[0m_object: other_[0m[1m[31mform[0m,
[0m[32m118[0m:        i18n_base: "test.[0m[1m[31mform[0ms",
[0m[32m119[0m-        field_label: "Description",
[0m[32m120[0m-        field_hint: "Provide details",
[0m[32m121[0m-        field_placeholder: "Enter description here..."
[0m[32m122[0m-      })
[0m[32m123[0m:      allow(other_[0m[1m[31mform[0m).to receive(:label).and_return("<label>Description</label>".html_safe)
[0m[32m124[0m:      allow(other_[0m[1m[31mform[0m).to receive(:text_area).and_return("<textarea></textarea>".html_safe)
[0m[32m125[0m-    end
[0m[32m126[0m-
[0m[32m127[0m:    it "uses the [0m[1m[31mform[0m object returned by [0m[1m[31mform[0m_field_setup" do
[0m[32m128[0m:      render partial: "[0m[1m[31mform[0m/text_area", locals: {field: field, [0m[1m[31mform[0m: other_[0m[1m[31mform[0m}
[0m[32m129[0m-
[0m[32m130[0m:      expect(other_[0m[1m[31mform[0m).to have_received(:label)
[0m[32m131[0m:      expect(other_[0m[1m[31mform[0m).to have_received(:text_area)
[0m[32m132[0m-    end
[0m[32m133[0m-  end
--
[0m[32m135[0m-  context "HTML structure" do
[0m[32m136[0m-    it "has proper semantic structure" do
[0m[32m137[0m:      render partial: "[0m[1m[31mform[0m/text_area", locals: {field: field}
[0m[32m138[0m-
[0m[32m139[0m-      doc = Nokogiri::HTML::DocumentFragment.parse(rendered)

[0m[35mspec/views/form/_file_field.html.erb_spec.rb[0m
[0m[32m1[0m-require "rails_helper"
[0m[32m2[0m-
[0m[32m3[0m:RSpec.describe "[0m[1m[31mform[0m/_file_field.html.erb", type: :view do
[0m[32m4[0m:  let(:[0m[1m[31mform[0m_builder) { double("[0m[1m[31mform[0m_builder") }
[0m[32m5[0m-  let(:mock_object) { double("model") }
[0m[32m6[0m-  let(:field) { :photo }
[0m[32m7[0m:  let(:i18n_base) { "units.[0m[1m[31mform[0ms" }
[0m[32m8[0m-
[0m[32m9[0m-  before do
[0m[32m10[0m:    allow([0m[1m[31mform[0m_builder).to receive(:object).and_return(mock_object)
[0m[32m11[0m:    allow([0m[1m[31mform[0m_builder).to receive(:label).and_return("Photo")
[0m[32m12[0m:    allow([0m[1m[31mform[0m_builder).to receive(:file_field).and_return('<input type="file" name="photo">'.html_safe)
[0m[32m13[0m-
[0m[32m14[0m:    # Mock the [0m[1m[31mform[0m_field_setup helper
[0m[32m15[0m:    allow(view).to receive(:[0m[1m[31mform[0m_field_setup).and_return({
[0m[32m16[0m:      [0m[1m[31mform[0m_object: [0m[1m[31mform[0m_builder,
[0m[32m17[0m-      field_label: "Photo",
[0m[32m18[0m-      field_hint: nil,
--
[0m[32m33[0m-
[0m[32m34[0m-    it "renders the file field without preview" do
[0m[32m35[0m:      render "[0m[1m[31mform[0m/file_field", field: field
[0m[32m36[0m-
[0m[32m37[0m-      expect(rendered).to include("Photo")
--
[0m[32m41[0m-
[0m[32m42[0m-    it "uses custom accept attribute" do
[0m[32m43[0m:      render "[0m[1m[31mform[0m/file_field", field: field, accept: "application/pdf"
[0m[32m44[0m-
[0m[32m45[0m:      expect([0m[1m[31mform[0m_builder).to have_received(:file_field).with(field, accept: "application/pdf")
[0m[32m46[0m-    end
[0m[32m47[0m-  end
--
[0m[32m68[0m-        allow(view).to receive(:image_tag).and_return('<img src="test.jpg">'.html_safe)
[0m[32m69[0m-
[0m[32m70[0m:        render "[0m[1m[31mform[0m/file_field", field: field
[0m[32m71[0m-
[0m[32m72[0m-        expect(rendered).to include("file-preview")
--
[0m[32m78[0m-        allow(view).to receive(:image_tag).and_return('<img src="test.jpg" style="max-width: 150px; height: auto;">'.html_safe)
[0m[32m79[0m-
[0m[32m80[0m:        render "[0m[1m[31mform[0m/file_field", field: field, preview_size: 150
[0m[32m81[0m-
[0m[32m82[0m-        expect(ImageProcessorService).to have_received(:thumbnail).with(attachment)
--
[0m[32m85[0m-
[0m[32m86[0m-      it "can disable preview" do
[0m[32m87[0m:        render "[0m[1m[31mform[0m/file_field", field: field, show_preview: false
[0m[32m88[0m-
[0m[32m89[0m-        expect(rendered).to include("Photo")
--
[0m[32m101[0m-
[0m[32m102[0m-      it "does not show image preview by default" do
[0m[32m103[0m:        render "[0m[1m[31mform[0m/file_field", field: field
[0m[32m104[0m-
[0m[32m105[0m-        expect(rendered).not_to include("<img")
--
[0m[32m108[0m-
[0m[32m109[0m-      it "shows filename when enabled" do
[0m[32m110[0m:        render "[0m[1m[31mform[0m/file_field", field: field, show_filename: true
[0m[32m111[0m-
[0m[32m112[0m-        expect(rendered).to include("document.pdf")
--
[0m[32m122[0m-
[0m[32m123[0m-    it "renders without errors or preview" do
[0m[32m124[0m:      render "[0m[1m[31mform[0m/file_field", field: field
[0m[32m125[0m-
[0m[32m126[0m-      expect(rendered).to include("Photo")
--
[0m[32m132[0m-  context "with field hint" do
[0m[32m133[0m-    before do
[0m[32m134[0m:      allow(view).to receive(:[0m[1m[31mform[0m_field_setup).and_return({
[0m[32m135[0m:        [0m[1m[31mform[0m_object: [0m[1m[31mform[0m_builder,
[0m[32m136[0m-        field_label: "Photo",
[0m[32m137[0m-        field_hint: "Upload an image file",
--
[0m[32m146[0m-
[0m[32m147[0m-    it "displays the hint text" do
[0m[32m148[0m:      render "[0m[1m[31mform[0m/file_field", field: field
[0m[32m149[0m-
[0m[32m150[0m-      expect(rendered).to include("Upload an image file")
[0m[32m151[0m:      expect(rendered).to include("[0m[1m[31mform[0m-text")
[0m[32m152[0m-    end
[0m[32m153[0m-  end

[0m[35mspec/features/inspections/inspection_creation_from_unit_spec.rb[0m
[0m[32m8[0m-
[0m[32m9[0m-  before do
[0m[32m10[0m:    login_user_via_[0m[1m[31mform[0m(user)
[0m[32m11[0m-  end
[0m[32m12[0m-

[0m[35mspec/views/form/_form_context_spec.rb[0m
[0m[32m1[0m-require "rails_helper"
[0m[32m2[0m-
[0m[32m3[0m:RSpec.describe "[0m[1m[31mform[0m/_[0m[1m[31mform[0m_context", type: :view do
[0m[32m4[0m-  let(:user) { create(:user) }
[0m[32m5[0m-  let(:inspection) { create(:inspection, user: user) }
--
[0m[32m21[0m-  context "when i18n header key exists" do
[0m[32m22[0m-    it "renders the page header" do
[0m[32m23[0m:      render partial: "[0m[1m[31mform[0m/[0m[1m[31mform[0m_context", locals: render_options
[0m[32m24[0m-
[0m[32m25[0m-      expect(rendered).to have_css("header")
--
[0m[32m34[0m-
[0m[32m35[0m-    it "does not render the page header" do
[0m[32m36[0m:      # The [0m[1m[31mform[0m_context always tries to render header, so if translation is missing, it will fail
[0m[32m37[0m-      expect {
[0m[32m38[0m:        render partial: "[0m[1m[31mform[0m/[0m[1m[31mform[0m_context", locals: render_options
[0m[32m39[0m-      }.to raise_error(ActionView::Template::Error)
[0m[32m40[0m-    end
[0m[32m41[0m-  end
[0m[32m42[0m-
[0m[32m43[0m:  it "renders the [0m[1m[31mform[0m with correct attributes" do
[0m[32m44[0m:    render partial: "[0m[1m[31mform[0m/[0m[1m[31mform[0m_context", locals: render_options
[0m[32m45[0m-
[0m[32m46[0m:    expect(rendered).to have_css("[0m[1m[31mform[0m[action='#{inspection_path(inspection)}']")
[0m[32m47[0m:    expect(rendered).to have_css("[0m[1m[31mform[0m[method='post']")
[0m[32m48[0m:    expect(rendered).to have_css("[0m[1m[31mform[0m[data-turbo-stream]")
[0m[32m49[0m-  end
[0m[32m50[0m-
[0m[32m51[0m-  it "yields control to the block" do
[0m[32m52[0m:    render partial: "[0m[1m[31mform[0m/[0m[1m[31mform[0m_context", locals: render_options
[0m[32m53[0m-
[0m[32m54[0m-    # The block content would be passed in the actual view usage

[0m[35mspec/requests/users/users_spec.rb[0m
[0m[32m3[0m-
[0m[32m4[0m-RSpec.describe "Users", type: :request do
[0m[32m5[0m:  # Helper to fill in multiple [0m[1m[31mform[0m fields at once
[0m[32m6[0m:  def fill_in_[0m[1m[31mform[0m_fields([0m[1m[31mform[0m_name, fields)
[0m[32m7[0m-    fields.each do |field, value|
[0m[32m8[0m:      fill_in_[0m[1m[31mform[0m([0m[1m[31mform[0m_name, field, value) if value.present?
[0m[32m9[0m-    end
[0m[32m10[0m-  end
[0m[32m11[0m-
[0m[32m12[0m:  # Helper to fill and submit a [0m[1m[31mform[0m in one go
[0m[32m13[0m:  def fill_and_submit_[0m[1m[31mform[0m([0m[1m[31mform[0m_name, fields)
[0m[32m14[0m:    fill_in_[0m[1m[31mform[0m_fields([0m[1m[31mform[0m_name, fields)
[0m[32m15[0m:    submit_[0m[1m[31mform[0m([0m[1m[31mform[0m_name)
[0m[32m16[0m-  end
[0m[32m17[0m-  describe "GET /signup" do
--
[0m[32m21[0m-    end
[0m[32m22[0m-
[0m[32m23[0m:    it "displays registration [0m[1m[31mform[0m" do
[0m[32m24[0m-      visit "/signup"
[0m[32m25[0m-      expect(page).to have_content(I18n.t("users.titles.register"))
[0m[32m26[0m:      expect_[0m[1m[31mform[0m_fields_present("[0m[1m[31mform[0ms.user_new")
[0m[32m27[0m-      expect(page).to have_button(I18n.t("users.buttons.register"))
[0m[32m28[0m-    end
--
[0m[32m34[0m-
[0m[32m35[0m-      user_data = SeedData.user_fields.merge(rpii_inspector_number: "RPII123")
[0m[32m36[0m:      fill_and_submit_[0m[1m[31mform[0m(:user_new, user_data)
[0m[32m37[0m-
[0m[32m38[0m-      expect(page).to have_current_path(root_path)
--
[0m[32m56[0m-    context "when logged in as the user" do
[0m[32m57[0m-      before do
[0m[32m58[0m:        login_user_via_[0m[1m[31mform[0m(user)
[0m[32m59[0m-      end
[0m[32m60[0m-
--
[0m[32m67[0m-      it "updates the user's password when current password is correct" do
[0m[32m68[0m-        visit change_password_user_path(user)
[0m[32m69[0m:        fill_and_submit_[0m[1m[31mform[0m(:user_change_password, {
[0m[32m70[0m-          current_password: I18n.t("test.password"),
[0m[32m71[0m-          password: "newpassword",
--
[0m[32m79[0m-      it "does not update the password when current password is incorrect" do
[0m[32m80[0m-        visit change_password_user_path(user)
[0m[32m81[0m:        fill_and_submit_[0m[1m[31mform[0m(:user_change_password, {
[0m[32m82[0m-          current_password: I18n.t("test.invalid_password"),
[0m[32m83[0m-          password: "newpassword",
--
[0m[32m248[0m-
[0m[32m249[0m-  describe "user creation" do
[0m[32m250[0m:    it "renders new user [0m[1m[31mform[0m when validation fails" do
[0m[32m251[0m-      post "/signup", params: valid_user_params(email: "")
[0m[32m252[0m-      expect_validation_error(:email)

[0m[35mapp/views/sessions/new.html.erb[0m
[0m[32m1[0m:<%= render '[0m[1m[31mform[0m/[0m[1m[31mform[0m_context', model: nil, i18n_base: '[0m[1m[31mform[0ms.session_new', url: login_path, scope: :session do |[0m[1m[31mform[0m| %>
[0m[32m2[0m:  <%= render '[0m[1m[31mform[0m/fieldset', legend_key: 'credentials' do %>
[0m[32m3[0m:    <%= render '[0m[1m[31mform[0m/text_field',
[0m[32m4[0m-      field: :email,
[0m[32m5[0m-      type: :email_field,
--
[0m[32m7[0m-    %>
[0m[32m8[0m-
[0m[32m9[0m:    <%= render '[0m[1m[31mform[0m/text_field',
[0m[32m10[0m-      field: :password,
[0m[32m11[0m-      type: :password_field,
--
[0m[32m13[0m-    %>
[0m[32m14[0m-
[0m[32m15[0m:    <%= render '[0m[1m[31mform[0m/checkbox',
[0m[32m16[0m-      field: :remember_me
[0m[32m17[0m-    %>

[0m[35mapp/assets/stylesheets/equipment.css[0m
[0m[32m5[0m-}
[0m[32m6[0m-
[0m[32m7[0m:.equipment [0m[1m[31mform[0m label {
[0m[32m8[0m-  display: block;
[0m[32m9[0m-  margin-top: 1rem;
--
[0m[32m11[0m-}
[0m[32m12[0m-
[0m[32m13[0m:.equipment [0m[1m[31mform[0m input[type="text"] {
[0m[32m14[0m-  width: 100%;
[0m[32m15[0m-  padding: 0.5rem;
--
[0m[32m18[0m-}
[0m[32m19[0m-
[0m[32m20[0m:.equipment [0m[1m[31mform[0m select {
[0m[32m21[0m-  width: 100%;
[0m[32m22[0m-  padding: 0.5rem;
--
[0m[32m47[0m-}
[0m[32m48[0m-
[0m[32m49[0m:.search-[0m[1m[31mform[0m {
[0m[32m50[0m-  display: flex;
[0m[32m51[0m-  align-items: center;
--
[0m[32m54[0m-}
[0m[32m55[0m-
[0m[32m56[0m:.search-[0m[1m[31mform[0m input[type="text"] {
[0m[32m57[0m-  flex: 1;
[0m[32m58[0m-  min-width: 200px;

[0m[35mspec/views/form/_assessment_status.html.erb_spec.rb[0m
[0m[32m2[0m-require_relative "../../../db/seeds/seed_data"
[0m[32m3[0m-
[0m[32m4[0m:RSpec.describe "[0m[1m[31mform[0m/_assessment_status.html.erb", type: :view do
[0m[32m5[0m-  let(:user) { create(:user) }
[0m[32m6[0m-  let(:unit) { create(:unit, user: user) }
--
[0m[32m13[0m-  end
[0m[32m14[0m-
[0m[32m15[0m:  def render_assessment_status(assessment:, i18n_base: "[0m[1m[31mform[0ms.slide")
[0m[32m16[0m:    render partial: "[0m[1m[31mform[0m/assessment_status",
[0m[32m17[0m-      locals: {assessment: assessment, i18n_base: i18n_base}
[0m[32m18[0m-  end
--
[0m[32m34[0m-      slide_assessment.update!(SeedData.slide_fields(passed: true))
[0m[32m35[0m-
[0m[32m36[0m:      render_assessment_status(assessment: slide_assessment, i18n_base: "[0m[1m[31mform[0ms.slide")
[0m[32m37[0m-
[0m[32m38[0m-      expect_safety_header_present
[0m[32m39[0m:      expect(rendered).to include(I18n.t("[0m[1m[31mform[0ms.slide.status.runout_requirement"))
[0m[32m40[0m:      expect(rendered).to include(I18n.t("[0m[1m[31mform[0ms.slide.status.checks_passed"))
[0m[32m41[0m-      expect(rendered).not_to include("incomplete-fields")
[0m[32m42[0m-    end
--
[0m[32m45[0m-      slide_assessment.update!(
[0m[32m46[0m-        SeedData.slide_fields(passed: false).merge(
[0m[32m47[0m:          slide_plat[0m[1m[31mform[0m_height: 4.0,  # Requires 2.0m runout
[0m[32m48[0m-          runout: 1.5,                 # Only has 1.5m
[0m[32m49[0m-          runout_pass: false
--
[0m[32m51[0m-      )
[0m[32m52[0m-
[0m[32m53[0m:      render_assessment_status(assessment: slide_assessment, i18n_base: "[0m[1m[31mform[0ms.slide")
[0m[32m54[0m-
[0m[32m55[0m:      expect(rendered).to include(I18n.t("[0m[1m[31mform[0ms.slide.status.runout_requirement"))
[0m[32m56[0m-      expect_status_displayed("runout_requirement", pass: false)
[0m[32m57[0m-    end
--
[0m[32m69[0m-      )
[0m[32m70[0m-
[0m[32m71[0m:      render_assessment_status(assessment: user_height_assessment, i18n_base: "[0m[1m[31mform[0ms.user_height")
[0m[32m72[0m-
[0m[32m73[0m-      expect_safety_header_present
[0m[32m74[0m:      expect(rendered).to include(I18n.t("[0m[1m[31mform[0ms.user_height.status.height_requirement"))
[0m[32m75[0m-      expect_status_displayed("height_requirement", pass: true)
[0m[32m76[0m-    end
--
[0m[32m80[0m-        SeedData.user_height_fields(passed: false).merge(
[0m[32m81[0m-          containing_wall_height: 1.0,
[0m[32m82[0m:          plat[0m[1m[31mform[0m_height: 0.8,
[0m[32m83[0m-          tallest_user_height: 1.9
[0m[32m84[0m-        )
[0m[32m85[0m-      )
[0m[32m86[0m-
[0m[32m87[0m:      render_assessment_status(assessment: user_height_assessment, i18n_base: "[0m[1m[31mform[0ms.user_height")
[0m[32m88[0m-
[0m[32m89[0m-      expect_status_displayed("height_requirement", pass: false)
--
[0m[32m97[0m-      materials_assessment.update!(SeedData.materials_fields(passed: true))
[0m[32m98[0m-
[0m[32m99[0m:      render_assessment_status(assessment: materials_assessment, i18n_base: "[0m[1m[31mform[0ms.materials")
[0m[32m100[0m-
[0m[32m101[0m:      expect(rendered).to include(I18n.t("[0m[1m[31mform[0ms.materials.status.checks_passed"))
[0m[32m102[0m-
[0m[32m103[0m-      passed = materials_assessment.passed_checks_count
--
[0m[32m110[0m-    it "requires i18n_base" do
[0m[32m111[0m-      expect {
[0m[32m112[0m:        render partial: "[0m[1m[31mform[0m/assessment_status", locals: {assessment: inspection.slide_assessment}
[0m[32m113[0m-      }.to raise_error(ActionView::Template::Error, /i18n_base is required/)
[0m[32m114[0m-    end
--
[0m[32m121[0m-      slide_assessment.update!(SeedData.slide_fields(passed: true))
[0m[32m122[0m-
[0m[32m123[0m:      render_assessment_status(assessment: slide_assessment, i18n_base: "[0m[1m[31mform[0ms.slide")
[0m[32m124[0m-
[0m[32m125[0m-      expect_safety_header_present

[0m[35mspec/views/form/_submit_button.html.erb_spec.rb[0m
[0m[32m1[0m-require "rails_helper"
[0m[32m2[0m-
[0m[32m3[0m:RSpec.describe "[0m[1m[31mform[0m/_submit_button.html.erb", type: :view do
[0m[32m4[0m-  let(:default_button_text) { "Save Form" }
[0m[32m5[0m:  let(:i18n_base) { "[0m[1m[31mform[0ms.test_[0m[1m[31mform[0m" }
[0m[32m6[0m-
[0m[32m7[0m-  # Helper to setup submit button with custom text and i18n base
[0m[32m8[0m-  def setup_submit_button(text: default_button_text, base: i18n_base)
[0m[32m9[0m:    @mock_[0m[1m[31mform[0m = mock_[0m[1m[31mform[0m_builder
[0m[32m10[0m:    setup_[0m[1m[31mform[0m_field_config(field: :submit, i18n_base: base)
[0m[32m11[0m-
[0m[32m12[0m-    # Override the submit method specifically
[0m[32m13[0m:    allow(@mock_[0m[1m[31mform[0m).to receive(:submit) do |button_text|
[0m[32m14[0m-      %(<input type="submit" value="#{button_text}" />).html_safe
[0m[32m15[0m-    end
--
[0m[32m19[0m-      .and_return(text)
[0m[32m20[0m-
[0m[32m21[0m:    view.instance_variable_set(:@_current_[0m[1m[31mform[0m, @mock_[0m[1m[31mform[0m)
[0m[32m22[0m-    view.instance_variable_set(:@_current_i18n_base, base)
[0m[32m23[0m-  end
--
[0m[32m25[0m-  # Helper to render and check basic submit button structure
[0m[32m26[0m-  def expect_submit_button_with_text(expected_text)
[0m[32m27[0m:    render_[0m[1m[31mform[0m_partial("submit_button")
[0m[32m28[0m-    expect(rendered).to have_css('input[type="submit"]')
[0m[32m29[0m-    expect(rendered).to include(%(value="#{expected_text}"))
[0m[32m30[0m:    expect(@mock_[0m[1m[31mform[0m).to have_received(:submit).with(expected_text)
[0m[32m31[0m-  end
[0m[32m32[0m-
--
[0m[32m38[0m-    end
[0m[32m39[0m-
[0m[32m40[0m:    it "uses the [0m[1m[31mform[0m object from @_current_[0m[1m[31mform[0m when no [0m[1m[31mform[0m provided" do
[0m[32m41[0m-      expect_submit_button_with_text("Save Form")
[0m[32m42[0m-    end
--
[0m[32m46[0m-    it "uses the i18n base to find submit text" do
[0m[32m47[0m-      expect_submit_button_with_text("Save Form")
[0m[32m48[0m:      expect(view).to have_received(:t).with("[0m[1m[31mform[0ms.test_[0m[1m[31mform[0m.submit", raise: true)
[0m[32m49[0m-    end
[0m[32m50[0m-
[0m[32m51[0m-    it "works with different i18n bases" do
[0m[32m52[0m:      setup_submit_button(text: "Update User", base: "[0m[1m[31mform[0ms.users")
[0m[32m53[0m-      expect_submit_button_with_text("Update User")
[0m[32m54[0m-    end
--
[0m[32m58[0m-    it "raises error when translation is missing (uses raise: true)" do
[0m[32m59[0m-      allow(view).to receive(:t)
[0m[32m60[0m:        .with("[0m[1m[31mform[0ms.test_[0m[1m[31mform[0m.submit", raise: true)
[0m[32m61[0m:        .and_raise(I18n::MissingTranslationData.new(:en, "[0m[1m[31mform[0ms.test_[0m[1m[31mform[0m.submit"))
[0m[32m62[0m-
[0m[32m63[0m:      expect { render_[0m[1m[31mform[0m_partial("submit_button") }.to raise_error(ActionView::Template::Error)
[0m[32m64[0m-    end
[0m[32m65[0m-  end
[0m[32m66[0m-
[0m[32m67[0m:  describe "different [0m[1m[31mform[0m types" do
[0m[32m68[0m-    {
[0m[32m69[0m-      "inspector_companies" => "Save Company",
--
[0m[32m71[0m-      "session_new" => "Sign In",
[0m[32m72[0m-      "units" => "Save Unit"
[0m[32m73[0m:    }.each do |[0m[1m[31mform[0m_type, expected_text|
[0m[32m74[0m:      it "renders #{[0m[1m[31mform[0m_type} [0m[1m[31mform[0m submit button" do
[0m[32m75[0m:        setup_submit_button(text: expected_text, base: "[0m[1m[31mform[0ms.#{[0m[1m[31mform[0m_type}")
[0m[32m76[0m-        expect_submit_button_with_text(expected_text)
[0m[32m77[0m-      end
--
[0m[32m79[0m-  end
[0m[32m80[0m-
[0m[32m81[0m:  describe "[0m[1m[31mform[0m object handling" do
[0m[32m82[0m:    it "uses @_current_[0m[1m[31mform[0m to render submit button" do
[0m[32m83[0m-      expect_submit_button_with_text("Save Form")
[0m[32m84[0m-    end
[0m[32m85[0m-
[0m[32m86[0m:    it "raises error when no [0m[1m[31mform[0m object available" do
[0m[32m87[0m:      view.instance_variable_set(:@_current_[0m[1m[31mform[0m, nil)
[0m[32m88[0m:      expect { render_[0m[1m[31mform[0m_partial("submit_button") }.to raise_error(ActionView::Template::Error, /undefined method.*submit.*for nil/)
[0m[32m89[0m-    end
[0m[32m90[0m-
[0m[32m91[0m-    it "raises error when no i18n base available" do
[0m[32m92[0m-      view.instance_variable_set(:@_current_i18n_base, nil)
[0m[32m93[0m:      expect { render_[0m[1m[31mform[0m_partial("submit_button") }.to raise_error(RSpec::Mocks::MockExpectationError)
[0m[32m94[0m-    end
[0m[32m95[0m-  end
--
[0m[32m115[0m-
[0m[32m116[0m-    it "does not add extra wrapper elements" do
[0m[32m117[0m:      render_[0m[1m[31mform[0m_partial("submit_button")
[0m[32m118[0m-      expect(rendered.strip).to eq('<input type="submit" value="Save Form" />')
[0m[32m119[0m-    end

[0m[35mapp/views/inspector_companies/edit.html.erb[0m
[0m[32m2[0m-
[0m[32m3[0m-<article>
[0m[32m4[0m:  <%= render '[0m[1m[31mform[0m' %>
[0m[32m5[0m-</article>

[0m[35mspec/views/form/_text_field.html.erb_spec.rb[0m
[0m[32m10[0m-end
[0m[32m11[0m-
[0m[32m12[0m:RSpec.describe "[0m[1m[31mform[0m/_text_field.html.erb", type: :view do
[0m[32m13[0m-  let(:test_model) { TextFieldTestModel.new }
[0m[32m14[0m-  let(:field) { :name }
[0m[32m15[0m-
[0m[32m16[0m-  before do
[0m[32m17[0m:    view.[0m[1m[31mform[0m_with(model: test_model, url: "/", local: true) do |f|
[0m[32m18[0m:      @_current_[0m[1m[31mform[0m = f
[0m[32m19[0m-      ""
[0m[32m20[0m-    end
[0m[32m21[0m:    @_current_i18n_base = "test.[0m[1m[31mform[0ms"
[0m[32m22[0m-
[0m[32m23[0m-    I18n.backend.store_translations(:en, {
[0m[32m24[0m-      test: {
[0m[32m25[0m:        [0m[1m[31mform[0ms: {
[0m[32m26[0m-          fields: {
[0m[32m27[0m-            name: "Name",
--
[0m[32m44[0m-
[0m[32m45[0m-  def render_text_field(locals = {})
[0m[32m46[0m:    render partial: "[0m[1m[31mform[0m/text_field", locals: {field:}.merge(locals)
[0m[32m47[0m-  end
[0m[32m48[0m-
--
[0m[32m66[0m-      it "renders #{field_type} as #{input_type} input" do
[0m[32m67[0m-        locals = {field: field_name, type: field_type}
[0m[32m68[0m:        render partial: "[0m[1m[31mform[0m/text_field", locals: locals
[0m[32m69[0m-        expect(rendered).to have_css(%(label input[type="#{input_type}"]))
[0m[32m70[0m-      end
--
[0m[32m103[0m-      it "adds accept attribute to file input" do
[0m[32m104[0m-        locals = {field: :document, type: :file_field, accept: "image/*"}
[0m[32m105[0m:        render partial: "[0m[1m[31mform[0m/text_field", locals: locals
[0m[32m106[0m-        expect(rendered).to have_css('label input[type="file"][accept="image/*"]')
[0m[32m107[0m-      end
--
[0m[32m109[0m-
[0m[32m110[0m-    context "with additional HTML attributes" do
[0m[32m111[0m:      it "[0m[1m[31mform[0m_field_setup raises error for data parameter" do
[0m[32m112[0m-        expect {
[0m[32m113[0m-          render_text_field(data: {validate: "presence"})
--
[0m[32m115[0m-      end
[0m[32m116[0m-
[0m[32m117[0m:      it "[0m[1m[31mform[0m_field_setup raises error for class parameter" do
[0m[32m118[0m-        expect {
[0m[32m119[0m:          render_text_field(class: "[0m[1m[31mform[0m-control custom-input")
[0m[32m120[0m-        }.to raise_error(ActionView::Template::Error, /local_assigns contains \[:class\]/)
[0m[32m121[0m-      end
--
[0m[32m123[0m-  end
[0m[32m124[0m-
[0m[32m125[0m:  describe "[0m[1m[31mform[0m object handling" do
[0m[32m126[0m:    it "uses the [0m[1m[31mform[0m object from @_current_[0m[1m[31mform[0m" do
[0m[32m127[0m-      render_text_field
[0m[32m128[0m-      expected_name = 'input[name="text_field_test_model[name]"]'
--
[0m[32m141[0m-
[0m[32m142[0m-  describe "help text" do
[0m[32m143[0m:    it "[0m[1m[31mform[0m_field_setup raises error for help_text parameter" do
[0m[32m144[0m-      expect {
[0m[32m145[0m-        render_text_field(help_text: "Enter your full name")

[0m[35mapp/views/inspector_companies/_filter_form.html.erb[0m
[0m[32m1[0m:<%= [0m[1m[31mform[0m_with url: inspector_companies_path, method: :get, data: { turbo: false }, id: "search-box" do |[0m[1m[31mform[0m| %>
[0m[32m2[0m:    <%= [0m[1m[31mform[0m.text_field :search, 
[0m[32m3[0m-        placeholder: t('inspector_companies.search.placeholder'), 
[0m[32m4[0m-        value: params[:search],
[0m[32m5[0m:        onkeyup: "if(event.key === 'Enter') this.[0m[1m[31mform[0m.submit();" %>
[0m[32m6[0m-    
[0m[32m7[0m:    <%= [0m[1m[31mform[0m.select :active, 
[0m[32m8[0m-        options_for_select([
[0m[32m9[0m-          [t('inspector_companies.filters.all_companies'), "all"],
--
[0m[32m11[0m-          [t('inspector_companies.status.archived'), "archived"]
[0m[32m12[0m-        ], params[:active]),
[0m[32m13[0m:        {}, { onchange: "this.[0m[1m[31mform[0m.submit();" } %>
[0m[32m14[0m-    
[0m[32m15[0m-    <% if params[:active].present? && params[:active] != "all" || params[:search].present? %>

[0m[35mapp/views/assessments/_slide_safety_results.html.erb[0m
[0m[32m1[0m-<%# Slide Safety Standards Results Partial %>
[0m[32m2[0m:<% if @assessment&.slide_plat[0m[1m[31mform[0m_height.present? %>
[0m[32m3[0m:  <% plat[0m[1m[31mform[0m_height = @assessment.slide_plat[0m[1m[31mform[0m_height %>
[0m[32m4[0m-  <% runout_length = @assessment.required_runout_length&.round(2) if @assessment&.persisted? %>
[0m[32m5[0m-  
--
[0m[32m8[0m-      content: -> do %>
[0m[32m9[0m-    <strong><%= t('safety_standards.slide_requirements.wall_height_requirements') %></strong>
[0m[32m10[0m:    <% if plat[0m[1m[31mform[0m_height < 0.6 %>
[0m[32m11[0m-      <%= t('safety_standards.slide_requirements.no_walls_required') %>
[0m[32m12[0m:    <% elsif plat[0m[1m[31mform[0m_height <= 3.0 %>
[0m[32m13[0m:      <%= t('safety_standards.slide_requirements.walls_equal_height', height: plat[0m[1m[31mform[0m_height) %>
[0m[32m14[0m:    <% elsif plat[0m[1m[31mform[0m_height <= 6.0 %>
[0m[32m15[0m:      <%= t('safety_standards.slide_requirements.walls_125_height', height: (plat[0m[1m[31mform[0m_height * 1.25).round(2)) %>
[0m[32m16[0m-    <% else %>
[0m[32m17[0m:      <%= t('safety_standards.slide_requirements.walls_125_plus_roof', height: (plat[0m[1m[31mform[0m_height * 1.25).round(2)) %>
[0m[32m18[0m-    <% end %>
[0m[32m19[0m-    
[0m[32m20[0m-    <% if runout_length %>
[0m[32m21[0m-      <br><br>
[0m[32m22[0m:      <strong><%= t('safety_standards.slide_requirements.plat[0m[1m[31mform[0m_height_requirement') %></strong>
[0m[32m23[0m:      <%= t('safety_standards.slide_requirements.minimum_runout') %> <%= runout_length %>m <%= t('safety_standards.slide_requirements.runout_[0m[1m[31mform[0mula') %>
[0m[32m24[0m-      <br><br>
[0m[32m25[0m-      <%= render 'shared/pass_fail_string', passed: @assessment.meets_runout_requirements? %>

[0m[35mapp/views/users/edit.html.erb[0m
[0m[32m1[0m:<%= render '[0m[1m[31mform[0m/[0m[1m[31mform[0m_context', model: @user, i18n_base: '[0m[1m[31mform[0ms.user_edit' do |[0m[1m[31mform[0m| %>
[0m[32m2[0m:  <%= render '[0m[1m[31mform[0m/fieldset', legend_key: 'account_details' do %>
[0m[32m3[0m:    <%= render '[0m[1m[31mform[0m/text_field', field: :name %>
[0m[32m4[0m:    <%= render '[0m[1m[31mform[0m/text_field', field: :email, type: :email_field %>
[0m[32m5[0m:    <%= render '[0m[1m[31mform[0m/text_field', field: :password, type: :password_field %>
[0m[32m6[0m:    <%= render '[0m[1m[31mform[0m/text_field', field: :password_confirmation, type: :password_field %>
[0m[32m7[0m:    <%= render '[0m[1m[31mform[0m/text_field', field: :rpii_inspector_number %>
[0m[32m8[0m:    <%= render '[0m[1m[31mform[0m/date_field', field: :active_until %>
[0m[32m9[0m:    <%= render '[0m[1m[31mform[0m/select',
[0m[32m10[0m-        field: :inspection_company_id,
[0m[32m11[0m-        options: options_for_select(
[0m[32m12[0m:          [[t('users.[0m[1m[31mform[0ms.no_company'), ""]] +
[0m[32m13[0m-          InspectorCompany.active.order(:name).map { |c| [c.name, c.id] },
[0m[32m14[0m-          @user.inspection_company_id || ""
--
[0m[32m28[0m-    <div id="rpii_verification_result">
[0m[32m29[0m-      <% if @user.rpii_verified? %>
[0m[32m30[0m:        <p style="color: green;">✓ <%= t('users.messages.rpii_verified_on', date: l(@user.rpii_verified_date, [0m[1m[31mform[0mat: :short)) %></p>
[0m[32m31[0m-      <% end %>
[0m[32m32[0m-    </div>

[0m[35mspec/requests/exports/pdf_i18n_coverage_spec.rb[0m
[0m[32m93[0m-      inspection = create(:inspection, user:, unit:)
[0m[32m94[0m-
[0m[32m95[0m:      get inspection_path(inspection, [0m[1m[31mform[0mat: :pdf)
[0m[32m96[0m-
[0m[32m97[0m-      expect(response).to have_http_status(:success)
--
[0m[32m121[0m-      end
[0m[32m122[0m-
[0m[32m123[0m:      get unit_path(unit, [0m[1m[31mform[0mat: :pdf)
[0m[32m124[0m-      pdf_text = pdf_text_content(response.body)
[0m[32m125[0m-

[0m[35mspec/requests/turbo/turbo_streams_spec.rb[0m
[0m[32m86[0m-  end
[0m[32m87[0m-
[0m[32m88[0m:  # RPII verification uses [0m[1m[31mform[0mat.turbo_stream instead of Accept headers
[0m[32m89[0m-  # It's tested separately in spec/features/users/rpii_verification_with_turbo_spec.rb
[0m[32m90[0m-end

[0m[35mapp/views/form/_form_context.html.erb[0m
[0m[32m1[0m-<%
[0m[32m2[0m:  # Form wrapper that handles all [0m[1m[31mform[0m setup and context
[0m[32m3[0m-  # Required parameters:
[0m[32m4[0m-  #   i18n_base: The i18n base path for translations
[0m[32m5[0m-  # Optional parameters:
[0m[32m6[0m:  #   model: The model object (e.g., @inspection, @unit) - nil for non-model [0m[1m[31mform[0ms
[0m[32m7[0m:  #   scope: The [0m[1m[31mform[0m scope for non-model [0m[1m[31mform[0ms (e.g., :session)
[0m[32m8[0m-  #   url: Form submission URL (defaults to model's update path)
[0m[32m9[0m:  #   method: HTTP method (defaults to :patch for models, :post for scoped [0m[1m[31mform[0ms)
[0m[32m10[0m-
[0m[32m11[0m-  if model
--
[0m[32m13[0m-    method ||= model.persisted? ? :patch : :post
[0m[32m14[0m-  else
[0m[32m15[0m:    # Non-model [0m[1m[31mform[0ms need explicit URL and default to POST
[0m[32m16[0m-    method ||= :post
[0m[32m17[0m-  end
[0m[32m18[0m-%>
[0m[32m19[0m-
[0m[32m20[0m:<% [0m[1m[31mform[0m_options = {
[0m[32m21[0m-  url: url,
[0m[32m22[0m-  method: method,
--
[0m[32m26[0m-
[0m[32m27[0m-<% if model
[0m[32m28[0m:  [0m[1m[31mform[0m_options[:model] = model
[0m[32m29[0m-  model_class_name = model.class.name
[0m[32m30[0m-  if model_class_name.include?('::')
[0m[32m31[0m:    [0m[1m[31mform[0m_options[:as] = model_class_name.demodulize.underscore.to_sym
[0m[32m32[0m-  end
[0m[32m33[0m-elsif scope
[0m[32m34[0m:  [0m[1m[31mform[0m_options[:scope] = scope
[0m[32m35[0m-end %>
[0m[32m36[0m-
[0m[32m37[0m:<%= [0m[1m[31mform[0m_with(**[0m[1m[31mform[0m_options) do |[0m[1m[31mform[0m| %>
[0m[32m38[0m-  <%= render "shared/page_header",
[0m[32m39[0m-    title: I18n.t("#{i18n_base}.header")
[0m[32m40[0m-  %>
[0m[32m41[0m-
[0m[32m42[0m:  <% @_current_[0m[1m[31mform[0m = [0m[1m[31mform[0m %>
[0m[32m43[0m-  <% @_current_i18n_base = i18n_base %>
[0m[32m44[0m-
--
[0m[32m59[0m-  <% end %>
[0m[32m60[0m-
[0m[32m61[0m:  <%= yield [0m[1m[31mform[0m %>
[0m[32m62[0m-
[0m[32m63[0m-  <% if model && model.respond_to?(:errors) && model.errors.any? %>
[0m[32m64[0m:    <%= render '[0m[1m[31mform[0m/errors', model: model %>
[0m[32m65[0m-  <% end %>
[0m[32m66[0m-
[0m[32m67[0m-  <fieldset>
[0m[32m68[0m:    <%= render '[0m[1m[31mform[0m/submit_button' %>
[0m[32m69[0m-  </fieldset>
[0m[32m70[0m-
[0m[32m71[0m-  <%# Save message display for Turbo Streams %>
[0m[32m72[0m:  <div id="[0m[1m[31mform[0m_save_message"></div>
[0m[32m73[0m-<% end %>

[0m[35mapp/views/users/change_password.html.erb[0m
[0m[32m1[0m:<%= render '[0m[1m[31mform[0m/[0m[1m[31mform[0m_context', model: @user, i18n_base: '[0m[1m[31mform[0ms.user_change_password', url: update_password_user_path(@user), method: :patch do |[0m[1m[31mform[0m| %>
[0m[32m2[0m:  <%= render '[0m[1m[31mform[0m/fieldset', legend_key: 'password_change' do %>
[0m[32m3[0m:    <%= render '[0m[1m[31mform[0m/text_field', 
[0m[32m4[0m-        field: :current_password, 
[0m[32m5[0m-        type: :password_field,
[0m[32m6[0m-        required: true %>
[0m[32m7[0m-
[0m[32m8[0m:    <%= render '[0m[1m[31mform[0m/text_field', 
[0m[32m9[0m-        field: :password, 
[0m[32m10[0m-        type: :password_field,
[0m[32m11[0m-        required: true %>
[0m[32m12[0m-
[0m[32m13[0m:    <%= render '[0m[1m[31mform[0m/text_field', 
[0m[32m14[0m-        field: :password_confirmation, 
[0m[32m15[0m-        type: :password_field,

[0m[35mapp/views/form/_search_field.html.erb[0m
[0m[32m1[0m-<%
[0m[32m2[0m:  # Search [0m[1m[31mform[0m options
[0m[32m3[0m-  url = local_assigns[:url] or raise ArgumentError, "url is required for search field"
[0m[32m4[0m-  placeholder = local_assigns[:placeholder] || "Search..."
[0m[32m5[0m-  field_name = local_assigns[:field_name] || :query
[0m[32m6[0m-  submit_text = local_assigns[:submit_text] || "Search"
[0m[32m7[0m:  css_class = local_assigns[:css_class] || "search-[0m[1m[31mform[0m"
[0m[32m8[0m-%>
[0m[32m9[0m-
[0m[32m10[0m-<div class="<%= css_class %>">
[0m[32m11[0m:  <%= [0m[1m[31mform[0m_with url: url, method: :get do |[0m[1m[31mform[0m| %>
[0m[32m12[0m:    <%= [0m[1m[31mform[0m.text_field field_name, placeholder: placeholder, value: params[field_name] %>
[0m[32m13[0m:    <%= [0m[1m[31mform[0m.submit submit_text %>
[0m[32m14[0m-  <% end %>
[0m[32m15[0m-</div>

[0m[35mspec/requests/exports/units_pdf_spec.rb[0m
[0m[32m8[0m-
[0m[32m9[0m-  before do
[0m[32m10[0m:    login_user_via_[0m[1m[31mform[0m(user)
[0m[32m11[0m-  end
[0m[32m12[0m-

[0m[35mapp/views/form/_assessment_status.html.erb[0m
[0m[32m1[0m-<%
[0m[32m2[0m:  # Use inherited i18n_base from [0m[1m[31mform[0m context, or explicit parameter
[0m[32m3[0m-  i18n_base = local_assigns[:i18n_base] || @_current_i18n_base
[0m[32m4[0m-  raise ArgumentError, "i18n_base is required for assessment status" if i18n_base.nil?

[0m[35mspec/requests/turbo/assessment_calculations_spec.rb[0m
[0m[32m23[0m-
[0m[32m24[0m-    it "updates slide runout calculations" do
[0m[32m25[0m:      inspection.slide_assessment.update!(slide_plat[0m[1m[31mform[0m_height: 2.0)
[0m[32m26[0m-
[0m[32m27[0m-      patch inspection_slide_assessment_path(inspection),

[0m[35mapp/views/units/index.html.erb[0m
[0m[32m10[0m-
[0m[32m11[0m-<% if current_user.units.any? %>
[0m[32m12[0m:  <%= render "filter_[0m[1m[31mform[0m" %>
[0m[32m13[0m-<% end %>
[0m[32m14[0m-
--
[0m[32m17[0m-  <div class="center">
[0m[32m18[0m-    <p>
[0m[32m19[0m:      <%= link_to units_path([0m[1m[31mform[0mat: :csv) do %>
[0m[32m20[0m-        <strong>Export CSV</strong>
[0m[32m21[0m-      <% end %>

[0m[35mspec/requests/users/user_name_editing_security_spec.rb[0m
[0m[32m22[0m-    end
[0m[32m23[0m-
[0m[32m24[0m:    it "prevents regular users from changing name via admin edit [0m[1m[31mform[0m tampering" do
[0m[32m25[0m-      patch user_path(regular_user), params: {
[0m[32m26[0m-        user: {

[0m[35mapp/views/inspector_companies/show.html.erb[0m
[0m[32m10[0m-<table>
[0m[32m11[0m-  <tr>
[0m[32m12[0m:    <th><%= t('inspector_companies.[0m[1m[31mform[0ms.name') %></th>
[0m[32m13[0m-    <td><%= @inspector_company.name %></td>
[0m[32m14[0m-  </tr>
--
[0m[32m16[0m-  <!-- Credentials are now validated at the inspector level, not company level -->
[0m[32m17[0m-  <tr>
[0m[32m18[0m:    <th><%= t('inspector_companies.[0m[1m[31mform[0ms.email') %></th>
[0m[32m19[0m-    <td>
[0m[32m20[0m-      <% if @inspector_company.email.present? %>
--
[0m[32m26[0m-  </tr>
[0m[32m27[0m-  <tr>
[0m[32m28[0m:    <th><%= t('inspector_companies.[0m[1m[31mform[0ms.phone') %></th>
[0m[32m29[0m-    <td><%= @inspector_company.phone %></td>
[0m[32m30[0m-  </tr>
[0m[32m31[0m-  <tr>
[0m[32m32[0m:    <th><%= t('inspector_companies.[0m[1m[31mform[0ms.address') %></th>
[0m[32m33[0m-    <td><%= @inspector_company.full_address %></td>
[0m[32m34[0m-  </tr>
[0m[32m35[0m-  <tr>
[0m[32m36[0m:    <th><%= t('inspector_companies.[0m[1m[31mform[0ms.country') %></th>
[0m[32m37[0m-    <td><%= @inspector_company.country %></td>
[0m[32m38[0m-  </tr>
--
[0m[32m43[0m-  <% if current_user&.admin? && @inspector_company.notes.present? %>
[0m[32m44[0m-    <tr>
[0m[32m45[0m:      <th><%= t('inspector_companies.[0m[1m[31mform[0ms.notes') %></th>
[0m[32m46[0m:      <td><%= simple_[0m[1m[31mform[0mat(@inspector_company.notes) %></td>
[0m[32m47[0m-    </tr>
[0m[32m48[0m-  <% end %>
--
[0m[32m52[0m-
[0m[32m53[0m-<% if @inspector_company.logo.attached? %>
[0m[32m54[0m:  <header><h3><%= t('inspector_companies.[0m[1m[31mform[0ms.logo') %></h3></header>
[0m[32m55[0m-  <p><%= image_tag @inspector_company.logo, alt: "#{@inspector_company.name} logo" %></p>
[0m[32m56[0m-  <hr>

[0m[35mapp/views/form/_text_area.html.erb[0m
[0m[32m1[0m-<%
[0m[32m2[0m:  setup = [0m[1m[31mform[0m_field_setup(field, local_assigns)
[0m[32m3[0m-
[0m[32m4[0m-  rows ||= 4
--
[0m[32m16[0m-%>
[0m[32m17[0m-
[0m[32m18[0m:<%= setup[:[0m[1m[31mform[0m_object].label field, setup[:field_label] %>
[0m[32m19[0m:<%= setup[:[0m[1m[31mform[0m_object].text_area field, field_options %>
[0m[32m20[0m-<% if setup[:field_hint].present? %>
[0m[32m21[0m-  <small><%= setup[:field_hint] %></small>

[0m[35mapp/views/form/_checkbox.html.erb[0m
[0m[32m1[0m-<%
[0m[32m2[0m-  # Get i18n_base from section (already validated there)
[0m[32m3[0m:  setup = [0m[1m[31mform[0m_field_setup(field, local_assigns)
[0m[32m4[0m-%>
[0m[32m5[0m-
[0m[32m6[0m:<%= setup[:[0m[1m[31mform[0m_object].label field do %>
[0m[32m7[0m:  <%= setup[:[0m[1m[31mform[0m_object].check_box field %>
[0m[32m8[0m-  <%= setup[:field_label] %>
[0m[32m9[0m-  <% if setup[:field_hint].present? %>

[0m[35mspec/seeds/slide_seed_data_spec.rb[0m
[0m[32m8[0m-        10.times do
[0m[32m9[0m-          fields = SeedData.slide_fields(passed: true)
[0m[32m10[0m:          plat[0m[1m[31mform[0m_height = fields[:slide_plat[0m[1m[31mform[0m_height]
[0m[32m11[0m-          runout = fields[:runout]
[0m[32m12[0m-
[0m[32m13[0m:          meets_requirements = SafetyStandard.meets_runout_requirements?(runout, plat[0m[1m[31mform[0m_height)
[0m[32m14[0m:          required_runout = SafetyStandard.calculate_required_runout(plat[0m[1m[31mform[0m_height)
[0m[32m15[0m-
[0m[32m16[0m-          expect(meets_requirements).to be(true),
[0m[32m17[0m:            "Expected runout #{runout}m to meet requirements for plat[0m[1m[31mform[0m height #{plat[0m[1m[31mform[0m_height}m (required: #{required_runout}m)"
[0m[32m18[0m-        end
[0m[32m19[0m-      end
--
[0m[32m24[0m-        10.times do
[0m[32m25[0m-          fields = SeedData.slide_fields(passed: false)
[0m[32m26[0m:          plat[0m[1m[31mform[0m_height = fields[:slide_plat[0m[1m[31mform[0m_height]
[0m[32m27[0m-          runout = fields[:runout]
[0m[32m28[0m-
[0m[32m29[0m:          meets_requirements = SafetyStandard.meets_runout_requirements?(runout, plat[0m[1m[31mform[0m_height)
[0m[32m30[0m:          required_runout = SafetyStandard.calculate_required_runout(plat[0m[1m[31mform[0m_height)
[0m[32m31[0m-
[0m[32m32[0m-          expect(meets_requirements).to be(false),
[0m[32m33[0m:            "Expected runout #{runout}m to fail requirements for plat[0m[1m[31mform[0m height #{plat[0m[1m[31mform[0m_height}m (required: #{required_runout}m)"
[0m[32m34[0m-        end
[0m[32m35[0m-      end

[0m[35mapp/views/form/_radio_pass_fail.html.erb[0m
[0m[32m1[0m-<%
[0m[32m2[0m:  [0m[1m[31mform[0m = @_current_[0m[1m[31mform[0m
[0m[32m3[0m-  yes_no ||= false
[0m[32m4[0m-%>
--
[0m[32m7[0m-  <label>
[0m[32m8[0m-    <%= t("shared.#{yes_no ? "yes" : "pass"}") %>
[0m[32m9[0m:    <%= [0m[1m[31mform[0m.radio_button field,
[0m[32m10[0m-      true,
[0m[32m11[0m-      radio_button_options(prefilled, checked_value, true)
--
[0m[32m13[0m-  </label>
[0m[32m14[0m-  <label>
[0m[32m15[0m:    <%= [0m[1m[31mform[0m.radio_button field,
[0m[32m16[0m-      false,
[0m[32m17[0m-      radio_button_options(prefilled, checked_value, false)

[0m[35mapp/views/units/edit.html.erb[0m
[0m[32m5[0m-<hr>
[0m[32m6[0m-<%= render 'unit_details', unit: @unit %>
[0m[32m7[0m:<hr id="[0m[1m[31mform[0m">
[0m[32m8[0m:<%= render '[0m[1m[31mform[0m' %>
[0m[32m9[0m-<% if @unit.deletable? %>
[0m[32m10[0m-  <%= button_to t('units.buttons.delete'),

[0m[35mapp/views/users/new.html.erb[0m
[0m[32m1[0m:<%= render '[0m[1m[31mform[0m/[0m[1m[31mform[0m_context', model: @user, i18n_base: '[0m[1m[31mform[0ms.user_new', url: signup_path do |[0m[1m[31mform[0m| %>
[0m[32m2[0m:  <%= render '[0m[1m[31mform[0m/fieldset', legend_key: 'account_details' do %>
[0m[32m3[0m:    <%= render '[0m[1m[31mform[0m/text_field',
[0m[32m4[0m-      field: :email,
[0m[32m5[0m-      type: :email_field,
[0m[32m6[0m-      required: true %>
[0m[32m7[0m-
[0m[32m8[0m:    <%= render '[0m[1m[31mform[0m/text_field',
[0m[32m9[0m-      field: :name,
[0m[32m10[0m-      required: true %>
[0m[32m11[0m-
[0m[32m12[0m:    <%= render '[0m[1m[31mform[0m/text_field',
[0m[32m13[0m-      field: :rpii_inspector_number
[0m[32m14[0m-    %>
[0m[32m15[0m-
[0m[32m16[0m:    <%= render '[0m[1m[31mform[0m/text_field',
[0m[32m17[0m-      field: :password,
[0m[32m18[0m-      type: :password_field,
[0m[32m19[0m-      required: true %>
[0m[32m20[0m-
[0m[32m21[0m:    <%= render '[0m[1m[31mform[0m/text_field',
[0m[32m22[0m-      field: :password_confirmation,
[0m[32m23[0m-      type: :password_field,

[0m[35mspec/requests/inspections/inspections_spec.rb[0m
[0m[32m53[0m-        get path
[0m[32m54[0m-        expect(response).to redirect_to(login_path)
[0m[32m55[0m:        expect(flash[:alert]).to eq(I18n.t("[0m[1m[31mform[0ms.session_new.status.login_required"))
[0m[32m56[0m-      end
[0m[32m57[0m-    end
--
[0m[32m74[0m-        end
[0m[32m75[0m-        expect(response).to redirect_to(login_path)
[0m[32m76[0m:        expect(flash[:alert]).to eq(I18n.t("[0m[1m[31mform[0ms.session_new.status.login_required"))
[0m[32m77[0m-      end
[0m[32m78[0m-    end
--
[0m[32m164[0m-      it "inspection_path helper generates correct PDF URL" do
[0m[32m165[0m-        # Verify that the Rails path helper generates the expected URL
[0m[32m166[0m:        expect(inspection_path(inspection, [0m[1m[31mform[0mat: :pdf)).to eq("/inspections/#{inspection.id}.pdf")
[0m[32m167[0m-      end
[0m[32m168[0m-    end
--
[0m[32m273[0m-      end
[0m[32m274[0m-
[0m[32m275[0m:      %w[json turbo_stream].each do |[0m[1m[31mform[0mat|
[0m[32m276[0m:        context "#{[0m[1m[31mform[0mat} [0m[1m[31mform[0mat" do
[0m[32m277[0m-          let(:headers) do
[0m[32m278[0m:            case [0m[1m[31mform[0mat
[0m[32m279[0m-            when "json" then {"Accept" => "application/json"}
[0m[32m280[0m-            when "turbo_stream" then {"Accept" => "text/vnd.turbo-stream.html"}
--
[0m[32m288[0m-
[0m[32m289[0m-            expect(response).to have_http_status(:success)
[0m[32m290[0m:            expect(response.content_type).to include(([0m[1m[31mform[0mat == "json") ? "json" : "turbo-stream")
[0m[32m291[0m-          end
[0m[32m292[0m-
--
[0m[32m301[0m-            expect(response).to have_http_status(:success)
[0m[32m302[0m-
[0m[32m303[0m:            if [0m[1m[31mform[0mat == "json"
[0m[32m304[0m-              json = JSON.parse(response.body)
[0m[32m305[0m-              expect(json["status"]).to eq("error")
--
[0m[32m437[0m-    let(:inspection) { create(:inspection, user: user, unit: unit) }
[0m[32m438[0m-
[0m[32m439[0m:    describe "show action with different [0m[1m[31mform[0mats" do
[0m[32m440[0m:      it "serves PDF via .pdf [0m[1m[31mform[0mat" do
[0m[32m441[0m-        allow(PdfGeneratorService).to receive(:generate_inspection_report).and_return(double(render: "PDF"))
[0m[32m442[0m-
--
[0m[32m446[0m-      end
[0m[32m447[0m-
[0m[32m448[0m:      it "serves JSON via .json [0m[1m[31mform[0mat" do
[0m[32m449[0m-        allow(JsonSerializerService).to receive(:serialize_inspection).and_return({id: inspection.id})
[0m[32m450[0m-
--
[0m[32m454[0m-      end
[0m[32m455[0m-
[0m[32m456[0m:      it "serves QR code via .png [0m[1m[31mform[0mat" do
[0m[32m457[0m-        allow(QrCodeService).to receive(:generate_qr_code).and_return("QR PNG")
[0m[32m458[0m-

[0m[35mapp/views/form/_number.html.erb[0m
[0m[32m1[0m-<%
[0m[32m2[0m-  # Get i18n_base from section (already validated there)
[0m[32m3[0m:  setup = [0m[1m[31mform[0m_field_setup(field, local_assigns)
[0m[32m4[0m-
[0m[32m5[0m-  step ||= 0.01
--
[0m[32m22[0m-
[0m[32m23[0m-<div class="number-field" id="<%= field %>">
[0m[32m24[0m:  <%= setup[:[0m[1m[31mform[0m_object].label field, setup[:field_label] %>
[0m[32m25[0m:  <%= setup[:[0m[1m[31mform[0m_object].number_field field, field_options.compact %>
[0m[32m26[0m-  <% if setup[:field_hint].present? %>
[0m[32m27[0m:    <small class="[0m[1m[31mform[0m-text"><%= setup[:field_hint] %></small>
[0m[32m28[0m-  <% end %>
[0m[32m29[0m-</div>

[0m[35mapp/views/safety_standards/index.html.erb[0m
[0m[32m20[0m-    <article id="anchorage" class="tab-panel">
[0m[32m21[0m-      <h2>Anchor Requirements</h2>
[0m[32m22[0m:      <%= render 'calculator_[0m[1m[31mform[0m', type: :anchors %>
[0m[32m23[0m-    </article>
[0m[32m24[0m-
--
[0m[32m26[0m-    <article id="wall-heights" class="tab-panel">
[0m[32m27[0m-      <h2>Wall Height Requirements</h2>
[0m[32m28[0m:      <%= render 'calculator_[0m[1m[31mform[0m', type: :wall_height %>
[0m[32m29[0m-      
[0m[32m30[0m-      <h3>Requirements by User Height</h3>
--
[0m[32m62[0m-      
[0m[32m63[0m-      <h3>Runout Requirements</h3>
[0m[32m64[0m:      <%= render 'calculator_[0m[1m[31mform[0m', type: :slide_runout %>
[0m[32m65[0m-      
[0m[32m66[0m-      <ul>
[0m[32m67[0m:        <li>Minimum length: 50% of highest plat[0m[1m[31mform[0m height</li>
[0m[32m68[0m-        <li>Absolute minimum: 300mm in any case</li>
[0m[32m69[0m-        <li>Maximum inclination: Not more than 10°</li>
--
[0m[32m76[0m-        <thead>
[0m[32m77[0m-          <tr>
[0m[32m78[0m:            <th>Plat[0m[1m[31mform[0m Height</th>
[0m[32m79[0m-            <th>Requirement</th>
[0m[32m80[0m-          </tr>
--
[0m[32m87[0m-          <tr>
[0m[32m88[0m-            <td>600mm - 3000mm</td>
[0m[32m89[0m:            <td>Containing walls equal to plat[0m[1m[31mform[0m height</td>
[0m[32m90[0m-          </tr>
[0m[32m91[0m-          <tr>
[0m[32m92[0m-            <td>3000mm - 6000mm</td>
[0m[32m93[0m:            <td>Containing walls 1.25 times plat[0m[1m[31mform[0m height</td>
[0m[32m94[0m-          </tr>
[0m[32m95[0m-          <tr>

[0m[35mapp/views/units/new.html.erb[0m
[0m[32m1[0m-<%= render 'shared/page_header', title: t('units.titles.new') %>
[0m[32m2[0m:<%= render '[0m[1m[31mform[0m' %>

[0m[35mapp/views/units/show.html.erb[0m
[0m[32m23[0m-<h4><%= t('units.headers.unit_report') %></h4>
[0m[32m24[0m-<%= render 'shared/pdf_embed',
[0m[32m25[0m:  url: unit_path(@unit, [0m[1m[31mform[0mat: :pdf),
[0m[32m26[0m-  title: "Unit #{@unit.serial} Report" %>

[0m[35mapp/views/form/_display_field.html.erb[0m
[0m[32m1[0m-<%
[0m[32m2[0m-  # Get i18n_base from section (already validated there)
[0m[32m3[0m:  setup = [0m[1m[31mform[0m_field_setup(field, local_assigns)
[0m[32m4[0m-
[0m[32m5[0m-  # Get value from model object automatically
[0m[32m6[0m:  model_object = setup[:[0m[1m[31mform[0m_object].object
[0m[32m7[0m-  value = model_object.send(field) if model_object.respond_to?(field)
[0m[32m8[0m-%>
[0m[32m9[0m-
[0m[32m10[0m:<%= setup[:[0m[1m[31mform[0m_object].label field, setup[:field_label] %>
[0m[32m11[0m-<p><%= value %></p>

[0m[35mspec/requests/exports/pdf_viewer_template_spec.rb[0m
[0m[32m13[0m-        expect(response).to have_http_status(:success)
[0m[32m14[0m-        expect(response.body).to include("<iframe")
[0m[32m15[0m:        expect(response.body).to include(inspection_path(inspection, [0m[1m[31mform[0mat: :pdf))
[0m[32m16[0m-        expect(response.body).to include("<title>")
[0m[32m17[0m-        expect(response.body).to include("#{inspection.unit&.serial || inspection.id}.pdf")
--
[0m[32m38[0m-        expect(response).to have_http_status(:success)
[0m[32m39[0m-        expect(response.body).to include("<iframe")
[0m[32m40[0m:        expect(response.body).to include(unit_path(unit, [0m[1m[31mform[0mat: :pdf))
[0m[32m41[0m-        expect(response.body).to include("<title>")
[0m[32m42[0m-        expect(response.body).to include("#{unit.serial}.pdf")
--
[0m[32m84[0m-        expect(response).to have_http_status(:success)
[0m[32m85[0m-        expect(response.body).to include("<iframe")
[0m[32m86[0m:        expect(response.body).to include(inspection_path(inspection, [0m[1m[31mform[0mat: :pdf))
[0m[32m87[0m-        expect(response.body).to include("#{inspection.unit&.serial || inspection.id}.pdf")
[0m[32m88[0m-
--
[0m[32m97[0m-        expect(response).to have_http_status(:success)
[0m[32m98[0m-        expect(response.body).to include("<iframe")
[0m[32m99[0m:        expect(response.body).to include(unit_path(unit, [0m[1m[31mform[0mat: :pdf))
[0m[32m100[0m-        expect(response.body).to include("#{unit.serial}.pdf")
[0m[32m101[0m-
--
[0m[32m106[0m-    end
[0m[32m107[0m-
[0m[32m108[0m:    context "when accessing other [0m[1m[31mform[0mats" do
[0m[32m109[0m-      it "returns PDF directly for inspection PDF requests" do
[0m[32m110[0m:        get inspection_path(inspection, [0m[1m[31mform[0mat: :pdf)
[0m[32m111[0m-
[0m[32m112[0m-        expect(response).to have_http_status(:success)
--
[0m[32m115[0m-
[0m[32m116[0m-      it "returns PDF directly for unit PDF requests" do
[0m[32m117[0m:        get unit_path(unit, [0m[1m[31mform[0mat: :pdf)
[0m[32m118[0m-
[0m[32m119[0m-        expect(response).to have_http_status(:success)
--
[0m[32m122[0m-
[0m[32m123[0m-      it "returns JSON for inspection JSON requests" do
[0m[32m124[0m:        get inspection_path(inspection, [0m[1m[31mform[0mat: :json)
[0m[32m125[0m-
[0m[32m126[0m-        expect(response).to have_http_status(:success)
--
[0m[32m129[0m-
[0m[32m130[0m-      it "returns PNG for inspection QR code requests" do
[0m[32m131[0m:        get inspection_path(inspection, [0m[1m[31mform[0mat: :png)
[0m[32m132[0m-
[0m[32m133[0m-        expect(response).to have_http_status(:success)
--
[0m[32m138[0m-
[0m[32m139[0m-  describe "404 handling for non-existent resources" do
[0m[32m140[0m:    it "returns 404 for non-existent inspection regardless of [0m[1m[31mform[0mat" do
[0m[32m141[0m-      get "/inspections/NONEXISTENT"
[0m[32m142[0m-      expect(response).to have_http_status(:not_found)
--
[0m[32m149[0m-    end
[0m[32m150[0m-
[0m[32m151[0m:    it "returns 404 for non-existent unit regardless of [0m[1m[31mform[0mat" do
[0m[32m152[0m-      get "/units/NONEXISTENT"
[0m[32m153[0m-      expect(response).to have_http_status(:not_found)

[0m[35mapp/views/units/_form.html.erb[0m
[0m[32m1[0m:<%= render '[0m[1m[31mform[0m/[0m[1m[31mform[0m_context',
[0m[32m2[0m-  model: @unit,
[0m[32m3[0m:  i18n_base: '[0m[1m[31mform[0ms.units' do |[0m[1m[31mform[0m|
[0m[32m4[0m-%>
[0m[32m5[0m:  <%= render 'shared/unit_details_[0m[1m[31mform[0m',
[0m[32m6[0m:    [0m[1m[31mform[0m: [0m[1m[31mform[0m,
[0m[32m7[0m-    object: @unit,
[0m[32m8[0m:    i18n_base: '[0m[1m[31mform[0ms.units',
[0m[32m9[0m-    show_photo: true
[0m[32m10[0m-  %>

[0m[35mapp/views/form/_fieldset.html.erb[0m
[0m[32m1[0m-<%
[0m[32m2[0m:  # Set [0m[1m[31mform[0m and i18n context for child [0m[1m[31mform[0m controls
[0m[32m3[0m:  @_current_[0m[1m[31mform[0m = local_assigns[:[0m[1m[31mform[0m] || @_current_[0m[1m[31mform[0m
[0m[32m4[0m-  i18n_base = @_current_i18n_base || local_assigns[:i18n_base]
[0m[32m5[0m:  raise ArgumentError, "i18n_base is required for [0m[1m[31mform[0m fieldsets" if i18n_base.nil?
[0m[32m6[0m-  @_current_i18n_base = i18n_base
[0m[32m7[0m-  

[0m[35mapp/views/form/_autocomplete_field.html.erb[0m
[0m[32m1[0m-<%
[0m[32m2[0m:  setup = [0m[1m[31mform[0m_field_setup(field, local_assigns)
[0m[32m3[0m-
[0m[32m4[0m-  field_options = {
[0m[32m5[0m-    required: field_options&.dig(:required),
[0m[32m6[0m:    list: "#{field}_autocomplete_#{setup[:[0m[1m[31mform[0m_object].object.object_id}",
[0m[32m7[0m-    value: setup[:value]
[0m[32m8[0m-  }
[0m[32m9[0m-%>
[0m[32m10[0m-
[0m[32m11[0m:<%= setup[:[0m[1m[31mform[0m_object].label field, setup[:field_label] %>
[0m[32m12[0m:<%= setup[:[0m[1m[31mform[0m_object].text_field field, field_options %>
[0m[32m13[0m-<datalist id="<%= field_options[:list] %>">
[0m[32m14[0m-  <% options&.each do |option| %>

[0m[35mapp/views/form/_submit_button.html.erb[0m
[0m[32m1[0m:<%= @_current_[0m[1m[31mform[0m.submit t("#{@_current_i18n_base}.submit", raise: true) %>

[0m[35mapp/views/form/_yes_no_radio.html.erb[0m
[0m[32m1[0m-<%
[0m[32m2[0m:  [0m[1m[31mform[0m = @_current_[0m[1m[31mform[0m
[0m[32m3[0m:  field_data = [0m[1m[31mform[0m_field_setup(field, local_assigns)
[0m[32m4[0m-  checked_value = field_data[:prefilled] ? field_data[:value] : nil
[0m[32m5[0m-%>
[0m[32m6[0m-
[0m[32m7[0m:<div class="[0m[1m[31mform[0m-grid radio-comment" id="<%= field %>">
[0m[32m8[0m-  <label class="label"><%= field_data[:field_label] %></label>
[0m[32m9[0m:  <%= render '[0m[1m[31mform[0m/radio_pass_fail',
[0m[32m10[0m-    field: field,
[0m[32m11[0m-    prefilled: field_data[:prefilled],

[0m[35mapp/views/units/new_from_inspection.html.erb[0m
[0m[32m1[0m-<%= render 'shared/page_header', title: t("units.titles.new_from_inspection") %>
[0m[32m2[0m-
[0m[32m3[0m:<%= render '[0m[1m[31mform[0m/[0m[1m[31mform[0m_context',
[0m[32m4[0m-  model: @unit,
[0m[32m5[0m:  i18n_base: '[0m[1m[31mform[0ms.units',
[0m[32m6[0m:  url: create_unit_from_inspection_path(@inspection) do |[0m[1m[31mform[0m|
[0m[32m7[0m-%>
[0m[32m8[0m:  <%= render 'shared/unit_details_[0m[1m[31mform[0m',
[0m[32m9[0m:    [0m[1m[31mform[0m: [0m[1m[31mform[0m,
[0m[32m10[0m-    object: @unit,
[0m[32m11[0m:    i18n_base: '[0m[1m[31mform[0ms.units',
[0m[32m12[0m-    show_photo: true
[0m[32m13[0m-  %>

[0m[35mspec/requests/exports/inspections_csv_completeness_spec.rb[0m
[0m[32m12[0m-  describe "CSV export completeness" do
[0m[32m13[0m-    it "includes all inspection database columns (except excluded ones)" do
[0m[32m14[0m:      get inspections_path([0m[1m[31mform[0mat: :csv)
[0m[32m15[0m-
[0m[32m16[0m-      expect(response).to have_http_status(:success)
--
[0m[32m30[0m-
[0m[32m31[0m-    it "includes all expected related model fields" do
[0m[32m32[0m:      get inspections_path([0m[1m[31mform[0mat: :csv)
[0m[32m33[0m-
[0m[32m34[0m-      csv_content = response.body
--
[0m[32m46[0m-
[0m[32m47[0m-    it "exports data for all header columns" do
[0m[32m48[0m:      get inspections_path([0m[1m[31mform[0mat: :csv)
[0m[32m49[0m-
[0m[32m50[0m-      csv_content = response.body
--
[0m[32m68[0m-      # without requiring manual updates to the CSV export code
[0m[32m69[0m-
[0m[32m70[0m:      get inspections_path([0m[1m[31mform[0mat: :csv)
[0m[32m71[0m-      csv_content = response.body
[0m[32m72[0m-      headers = CSV.parse(csv_content).first
--
[0m[32m83[0m-      inspection_without_unit = create(:inspection, :completed, user: user, unit: nil)
[0m[32m84[0m-
[0m[32m85[0m:      get inspections_path([0m[1m[31mform[0mat: :csv)
[0m[32m86[0m-
[0m[32m87[0m-      csv_content = response.body

[0m[35mapp/views/users/change_settings.html.erb[0m
[0m[32m1[0m-<%= render 'shared/page_header', title: t('users.titles.settings') %>
[0m[32m2[0m-
[0m[32m3[0m:<%= render '[0m[1m[31mform[0m/[0m[1m[31mform[0m_context', model: @user, i18n_base: '[0m[1m[31mform[0ms.user_settings',
[0m[32m4[0m-  url: update_settings_user_path(@user),
[0m[32m5[0m:  method: :patch do |[0m[1m[31mform[0m| %>
[0m[32m6[0m-
[0m[32m7[0m:  <%= render '[0m[1m[31mform[0m/fieldset', legend_key: 'contact_details' do %>
[0m[32m8[0m-    <% if @user.has_company? %>
[0m[32m9[0m:      <%= render '[0m[1m[31mform[0m/display_field', field: :name %>
[0m[32m10[0m:      <%= render '[0m[1m[31mform[0m/display_field', field: :phone %>
[0m[32m11[0m:      <%= render '[0m[1m[31mform[0m/display_field', field: :address %>
[0m[32m12[0m:      <%= render '[0m[1m[31mform[0m/display_field', field: :country %>
[0m[32m13[0m:      <%= render '[0m[1m[31mform[0m/display_field', field: :postal_code %>
[0m[32m14[0m-      <p><%= t('users.messages.inherited_from_company') %></p>
[0m[32m15[0m-    <% else %>
[0m[32m16[0m:      <%= render '[0m[1m[31mform[0m/display_field', field: :name %>
[0m[32m17[0m:      <%= render '[0m[1m[31mform[0m/text_field', field: :phone %>
[0m[32m18[0m:      <%= render '[0m[1m[31mform[0m/text_area', field: :address %>
[0m[32m19[0m:      <%= render '[0m[1m[31mform[0m/text_field', field: :country %>
[0m[32m20[0m:      <%= render '[0m[1m[31mform[0m/text_field', field: :postal_code %>
[0m[32m21[0m-    <% end %>
[0m[32m22[0m-  <% end %>
[0m[32m23[0m-
[0m[32m24[0m:  <%= render '[0m[1m[31mform[0m/fieldset', legend_key: 'preferences' do %>
[0m[32m25[0m:    <%= render '[0m[1m[31mform[0m/text_field', field: :default_inspection_location %>
[0m[32m26[0m-
[0m[32m27[0m:    <%= render '[0m[1m[31mform[0m/select',
[0m[32m28[0m-      field: :theme,
[0m[32m29[0m-      options: options_for_select([

[0m[35mapp/views/units/_filter_form.html.erb[0m
[0m[32m1[0m:<%= [0m[1m[31mform[0m_with url: units_path, method: :get, data: { turbo: false }, id: "search-box" do |[0m[1m[31mform[0m| %>
[0m[32m2[0m:    <%= [0m[1m[31mform[0m.text_field :query, 
[0m[32m3[0m-        placeholder: t('units.search.placeholder'), 
[0m[32m4[0m-        value: params[:query],
[0m[32m5[0m:        onkeyup: "if(event.key === 'Enter') this.[0m[1m[31mform[0m.submit();" %>
[0m[32m6[0m-    
[0m[32m7[0m:    <%= [0m[1m[31mform[0m.select :status, 
[0m[32m8[0m-        options_for_select([["All", ""], ["Overdue", "overdue"]], params[:status]),
[0m[32m9[0m:        {}, { onchange: "this.[0m[1m[31mform[0m.submit();" } %>
[0m[32m10[0m-    
[0m[32m11[0m:    <%= [0m[1m[31mform[0m.select :manufacturer, 
[0m[32m12[0m-        options_for_select([["All Manufacturers", ""]] + manufacturer_options(current_user).map { |m| [m, m] }, params[:manufacturer]),
[0m[32m13[0m:        {}, { onchange: "this.[0m[1m[31mform[0m.submit();" } %>
[0m[32m14[0m-    
[0m[32m15[0m:    <%= [0m[1m[31mform[0m.select :owner, 
[0m[32m16[0m-        options_for_select([["All Owners", ""]] + owner_options(current_user).map { |o| [o, o] }, params[:owner]),
[0m[32m17[0m:        {}, { onchange: "this.[0m[1m[31mform[0m.submit();" } %>
[0m[32m18[0m-    
[0m[32m19[0m-    <% if params[:status].present? || params[:manufacturer].present? || params[:owner].present? || params[:query].present? %>

[0m[35mspec/requests/exports/pdf_api_spec.rb[0m
[0m[32m47[0m-
[0m[32m48[0m-    describe "GET /inspections/:id.pdf" do
[0m[32m49[0m:      it "returns PDF via .pdf [0m[1m[31mform[0mat" do
[0m[32m50[0m:        get inspection_path(inspection, [0m[1m[31mform[0mat: :pdf)
[0m[32m51[0m-
[0m[32m52[0m-        expect(response).to have_http_status(:success)
--
[0m[32m58[0m-        draft_inspection = create(:inspection, user: user, complete_date: nil)
[0m[32m59[0m-
[0m[32m60[0m:        get inspection_path(draft_inspection, [0m[1m[31mform[0mat: :pdf)
[0m[32m61[0m-
[0m[32m62[0m-        # Draft inspections can generate PDFs
--
[0m[32m78[0m-      end
[0m[32m79[0m-
[0m[32m80[0m:      it "allows public access to PDF [0m[1m[31mform[0mat" do
[0m[32m81[0m-        # Clear authentication for public access test
[0m[32m82[0m-        logout
--
[0m[32m159[0m-      end
[0m[32m160[0m-
[0m[32m161[0m:      it "allows public access to PDF [0m[1m[31mform[0mat" do
[0m[32m162[0m-        logout
[0m[32m163[0m-

[0m[35mapp/views/form/_date_field.html.erb[0m
[0m[32m1[0m-<%
[0m[32m2[0m:  setup = [0m[1m[31mform[0m_field_setup(field, local_assigns)
[0m[32m3[0m-  required ||= false
[0m[32m4[0m-  field_options = {
--
[0m[32m9[0m-%>
[0m[32m10[0m-
[0m[32m11[0m:<%= setup[:[0m[1m[31mform[0m_object].label field, setup[:field_label] %>
[0m[32m12[0m:<%= setup[:[0m[1m[31mform[0m_object].send(:date_field, field, field_options) %>
[0m[32m13[0m-<% if setup[:field_hint].present? %>
[0m[32m14[0m-  <small><%= setup[:field_hint] %></small>

[0m[35mapp/views/users/_rpii_verification_result.html.erb[0m
[0m[32m15[0m-      </dl>
[0m[32m16[0m-      <p style="color: #155724; margin-bottom: 0;">
[0m[32m17[0m:        ✓ <%= t('users.messages.rpii_verified_on', date: l(user.rpii_verified_date, [0m[1m[31mform[0mat: :short)) %>
[0m[32m18[0m-      </p>
[0m[32m19[0m-    </div>

[0m[35mapp/views/safety_standards/_calculator_form.html.erb[0m
[0m[32m1[0m-<%
[0m[32m2[0m-  metadata = SafetyStandard.calculation_metadata[type]
[0m[32m3[0m:  i18n_base = "[0m[1m[31mform[0ms.safety_standards_#{type}"
[0m[32m4[0m-  result_id = "#{type.to_s.dasherize}-result"
[0m[32m5[0m-%>
--
[0m[32m7[0m-<p><%= metadata[:description] %></p>
[0m[32m8[0m-
[0m[32m9[0m:<div class="calculator-[0m[1m[31mform[0m">
[0m[32m10[0m:  <%= render '[0m[1m[31mform[0m/[0m[1m[31mform[0m_context',
[0m[32m11[0m-    model: nil,
[0m[32m12[0m-    scope: :calculation,
--
[0m[32m14[0m-    method: :post,
[0m[32m15[0m-    local: false,
[0m[32m16[0m:    i18n_base: i18n_base do |[0m[1m[31mform[0m| %>
[0m[32m17[0m-    
[0m[32m18[0m:    <%= [0m[1m[31mform[0m.hidden_field :type, value: type.to_s %>
[0m[32m19[0m-    
[0m[32m20[0m-    <% case type %>
[0m[32m21[0m-    <% when :anchors %>
[0m[32m22[0m:      <%= render '[0m[1m[31mform[0m/fieldset', legend_key: 'unit_dimensions' do %>
[0m[32m23[0m:        <%= render '[0m[1m[31mform[0m/number', field: :length, min: 1.0, required: true %>
[0m[32m24[0m:        <%= render '[0m[1m[31mform[0m/number', field: :width, min: 1.0, required: true %>
[0m[32m25[0m:        <%= render '[0m[1m[31mform[0m/number', field: :height, min: 1.0, required: true %>
[0m[32m26[0m-      <% end %>
[0m[32m27[0m-      
[0m[32m28[0m-    <% when :slide_runout %>
[0m[32m29[0m:      <%= render '[0m[1m[31mform[0m/number', field: :plat[0m[1m[31mform[0m_height, min: 1.0, required: true %>
[0m[32m30[0m-      
[0m[32m31[0m-    <% when :wall_height %>
[0m[32m32[0m:      <%= render '[0m[1m[31mform[0m/number', field: :user_height, min: 1.0, required: true %>
[0m[32m33[0m-    <% end %>
[0m[32m34[0m-    
--
[0m[32m45[0m-</div>
[0m[32m46[0m-
[0m[32m47[0m:<details class="[0m[1m[31mform[0mula-box">
[0m[32m48[0m-  <summary><strong>Calculation Formula</strong></summary>
[0m[32m49[0m-  <div>
[0m[32m50[0m:    <code><%= metadata[:[0m[1m[31mform[0mula_text] %></code>
[0m[32m51[0m-    <p>Example: <%= SafetyStandard.generate_example(type) %></p>
[0m[32m52[0m-  </div>

[0m[35mapp/views/form/_pass_fail.html.erb[0m
[0m[32m1[0m-<%
[0m[32m2[0m:  [0m[1m[31mform[0m = @_current_[0m[1m[31mform[0m
[0m[32m3[0m:  field_data = [0m[1m[31mform[0m_field_setup(field, local_assigns)
[0m[32m4[0m-  checked_value = field_data[:prefilled] ? field_data[:value] : nil
[0m[32m5[0m-%>
[0m[32m6[0m-
[0m[32m7[0m:<div class="[0m[1m[31mform[0m-grid radio-comment" id="<%= field %>">
[0m[32m8[0m-  <label class=label><%= field_data[:field_label] %></label>
[0m[32m9[0m:  <%= render '[0m[1m[31mform[0m/radio_pass_fail',
[0m[32m10[0m-    field: field,
[0m[32m11[0m-    prefilled: field_data[:prefilled],

[0m[35mapp/views/form/_radio_comment.html.erb[0m
[0m[32m11[0m-  comment_field = "#{field}_comment".to_sym
[0m[32m12[0m-
[0m[32m13[0m:  [0m[1m[31mform[0m = @_current_[0m[1m[31mform[0m
[0m[32m14[0m:  model = [0m[1m[31mform[0m.object
[0m[32m15[0m-
[0m[32m16[0m:  field_data = [0m[1m[31mform[0m_field_setup(field, local_assigns)
[0m[32m17[0m-
[0m[32m18[0m-  comment_info = comment_field_options(
[0m[32m19[0m:    [0m[1m[31mform[0m,
[0m[32m20[0m-    comment_field,
[0m[32m21[0m-    field_data[:field_label]
--
[0m[32m25[0m-%>
[0m[32m26[0m-
[0m[32m27[0m:<div class="[0m[1m[31mform[0m-grid radio-comment">
[0m[32m28[0m-  <label class="wrapper">
[0m[32m29[0m-    <%= field_data[:field_label] %>
[0m[32m30[0m-  </label>
[0m[32m31[0m-
[0m[32m32[0m:  <%= render '[0m[1m[31mform[0m/radio_pass_fail',
[0m[32m33[0m-    field: radio_field,
[0m[32m34[0m-    prefilled: field_data[:prefilled],
--
[0m[32m36[0m-  %>
[0m[32m37[0m-
[0m[32m38[0m:  <%= render '[0m[1m[31mform[0m/comment_checkbox',
[0m[32m39[0m-    comment_field: comment_field,
[0m[32m40[0m-    checkbox_id: comment_info[:checkbox_id],
--
[0m[32m44[0m-  %>
[0m[32m45[0m-
[0m[32m46[0m:  <%= [0m[1m[31mform[0m.text_area comment_field, comment_info[:options] %>
[0m[32m47[0m-</div>

[0m[35mapp/views/form/_number_pass_fail_comment.html.erb[0m
[0m[32m2[0m-  # Composite partial for number + pass/fail + comment fields
[0m[32m3[0m-  # Required parameters:
[0m[32m4[0m:  #   field: Base field name (e.g., 'slide_plat[0m[1m[31mform[0m_height')
[0m[32m5[0m-  # Optional parameters (passed through to number field):
[0m[32m6[0m-  #   step: Step value for number input (default: 0.01)
--
[0m[32m10[0m-  #
[0m[32m11[0m-  # This will render:
[0m[32m12[0m:  #   - Number field: field (e.g., 'slide_plat[0m[1m[31mform[0m_height')
[0m[32m13[0m:  #   - Pass/fail field: field + '_pass' (e.g., 'slide_plat[0m[1m[31mform[0m_height_pass')
[0m[32m14[0m:  #   - Comment field: field + '_comment' (e.g., 'slide_plat[0m[1m[31mform[0m_height_comment')
[0m[32m15[0m-
[0m[32m16[0m-  number_field = field
--
[0m[32m20[0m-  number_options = local_assigns.slice(:step, :min, :max, :required)
[0m[32m21[0m-
[0m[32m22[0m:  [0m[1m[31mform[0m = @_current_[0m[1m[31mform[0m
[0m[32m23[0m:  model = [0m[1m[31mform[0m.object
[0m[32m24[0m-
[0m[32m25[0m:  field_data = [0m[1m[31mform[0m_field_setup(field, local_assigns)
[0m[32m26[0m-  number_options[:value] = field_data[:value]
[0m[32m27[0m-
[0m[32m28[0m-  pass_fail_value, pass_fail_prefilled = get_field_value_and_prefilled_status(
[0m[32m29[0m:    [0m[1m[31mform[0m,
[0m[32m30[0m-    pass_fail_field
[0m[32m31[0m-  )
--
[0m[32m33[0m-
[0m[32m34[0m-  comment_info = comment_field_options(
[0m[32m35[0m:    [0m[1m[31mform[0m,
[0m[32m36[0m-    comment_field,
[0m[32m37[0m-    field_data[:field_label]
--
[0m[32m39[0m-%>
[0m[32m40[0m-
[0m[32m41[0m:<div class="[0m[1m[31mform[0m-grid number-radio-comment" id="<%= number_field %>">
[0m[32m42[0m:  <label for="<%= [0m[1m[31mform[0m.field_id(number_field) %>" class="label">
[0m[32m43[0m-    <%= field_data[:field_label] %>
[0m[32m44[0m-  </label>
[0m[32m45[0m-
[0m[32m46[0m:  <%= [0m[1m[31mform[0m.number_field number_field,
[0m[32m47[0m:    id: [0m[1m[31mform[0m.field_id(number_field),
[0m[32m48[0m-    step: number_options[:step] || 0.1,
[0m[32m49[0m-    min: number_options[:min],
--
[0m[32m55[0m-  %>
[0m[32m56[0m-
[0m[32m57[0m:  <%= render '[0m[1m[31mform[0m/radio_pass_fail',
[0m[32m58[0m-    field: pass_fail_field,
[0m[32m59[0m-    prefilled: pass_fail_prefilled,
--
[0m[32m61[0m-  %>
[0m[32m62[0m-
[0m[32m63[0m:  <%= render '[0m[1m[31mform[0m/comment_checkbox',
[0m[32m64[0m-      comment_field: comment_field,
[0m[32m65[0m-      checkbox_id: comment_info[:checkbox_id],
--
[0m[32m68[0m-      prefilled: comment_info[:prefilled] %>
[0m[32m69[0m-
[0m[32m70[0m:  <%= [0m[1m[31mform[0m.text_area comment_field,
[0m[32m71[0m-    comment_info[:options]
[0m[32m72[0m-  %>

[0m[35mapp/views/inspector_companies/index.html.erb[0m
[0m[32m9[0m-
[0m[32m10[0m-<% if @inspector_companies.any? || params[:search].present? || params[:active].present? %>
[0m[32m11[0m:  <%= render "filter_[0m[1m[31mform[0m" %>
[0m[32m12[0m-<% end %>
[0m[32m13[0m-
--
[0m[32m16[0m-    <thead>
[0m[32m17[0m-      <tr>
[0m[32m18[0m:        <th><%= t('inspector_companies.[0m[1m[31mform[0ms.name') %></th>
[0m[32m19[0m:        <th><%= t('inspector_companies.[0m[1m[31mform[0ms.phone') %></th>
[0m[32m20[0m-        <th><%= t('inspector_companies.status.active') %></th>
[0m[32m21[0m-        <th><%= t('ui.actions') %></th>

[0m[35mapp/views/form/_decimal_comment.html.erb[0m
[0m[32m2[0m-  # Composite partial for decimal + comment fields with grid layout
[0m[32m3[0m-  # Required parameters:
[0m[32m4[0m:  #   field: Base field name (e.g., 'plat[0m[1m[31mform[0m_height')
[0m[32m5[0m-  # Optional parameters:
[0m[32m6[0m-  #   min: Minimum value
--
[0m[32m10[0m-  #
[0m[32m11[0m-  # This will render:
[0m[32m12[0m:  #   - Decimal field: field (e.g., 'plat[0m[1m[31mform[0m_height')
[0m[32m13[0m:  #   - Comment field: field + '_comment' (e.g., 'plat[0m[1m[31mform[0m_height_comment')
[0m[32m14[0m-
[0m[32m15[0m-  decimal_field = field
[0m[32m16[0m-  comment_field = "#{field}_comment".to_sym
[0m[32m17[0m-
[0m[32m18[0m:  [0m[1m[31mform[0m = @_current_[0m[1m[31mform[0m
[0m[32m19[0m:  model = [0m[1m[31mform[0m.object
[0m[32m20[0m-
[0m[32m21[0m:  field_data = [0m[1m[31mform[0m_field_setup(field, local_assigns)
[0m[32m22[0m-
[0m[32m23[0m-  decimal_options = {
--
[0m[32m38[0m-
[0m[32m39[0m-  comment_info = comment_field_options(
[0m[32m40[0m:    [0m[1m[31mform[0m,
[0m[32m41[0m-    comment_field,
[0m[32m42[0m-    field_data[:field_label]
--
[0m[32m44[0m-%>
[0m[32m45[0m-
[0m[32m46[0m:<div class="[0m[1m[31mform[0m-grid number-comment" id="<%= decimal_field %>">
[0m[32m47[0m:  <%= [0m[1m[31mform[0m.label decimal_field, field_data[:field_label], class: "label" %>
[0m[32m48[0m:  <%= [0m[1m[31mform[0m.text_field decimal_field, decimal_options %>
[0m[32m49[0m-
[0m[32m50[0m:  <%= render '[0m[1m[31mform[0m/comment_checkbox',
[0m[32m51[0m-      comment_field: comment_field,
[0m[32m52[0m-      checkbox_id: comment_info[:checkbox_id],
--
[0m[32m55[0m-      prefilled: comment_info[:prefilled] %>
[0m[32m56[0m-
[0m[32m57[0m:  <%= [0m[1m[31mform[0m.text_area comment_field, comment_info[:options] %>
[0m[32m58[0m-</div>

[0m[35mapp/views/form/_errors.html.erb[0m
[0m[32m2[0m-  # Form errors component - displays validation errors for any model object
[0m[32m3[0m-  model_object = local_assigns[:model] || local_assigns[:object]
[0m[32m4[0m:  raise ArgumentError, "model object is required for [0m[1m[31mform[0m errors" if model_object.nil?
[0m[32m5[0m-  
[0m[32m6[0m:  # Use inherited i18n_base from [0m[1m[31mform[0m context
[0m[32m7[0m-  i18n_base = @_current_i18n_base
[0m[32m8[0m:  raise ArgumentError, "i18n_base is required for [0m[1m[31mform[0m errors" if i18n_base.nil?
[0m[32m9[0m-  
[0m[32m10[0m-  # Custom header text or use i18n lookup - no fallbacks
--
[0m[32m16[0m-
[0m[32m17[0m-<% if model_object.errors.any? %>
[0m[32m18[0m:  <aside class="[0m[1m[31mform[0m-errors" role="alert">
[0m[32m19[0m-    <h3><%= header_text %></h3>
[0m[32m20[0m-    <ul>

[0m[35mapp/views/safety_standards/_anchor_result.html.erb[0m
[0m[32m7[0m-    <h3>Breakdown:</h3>
[0m[32m8[0m-    <ul>
[0m[32m9[0m:      <% @anchor_result[:[0m[1m[31mform[0mula_breakdown].each do |line| %>
[0m[32m10[0m-        <li>
[0m[32m11[0m-          <strong><%= line[0] %>:</strong> <%= line[1] %>

[0m[35mapp/views/form/_auto_submit_select.html.erb[0m
[0m[32m4[0m-  options = local_assigns[:options] or raise ArgumentError, "options is required for auto submit select"
[0m[32m5[0m-  
[0m[32m6[0m:  # Check if we're in a [0m[1m[31mform[0m context with [0m[1m[31mform[0m object or need standalone
[0m[32m7[0m:  if local_assigns[:[0m[1m[31mform[0m]
[0m[32m8[0m:    [0m[1m[31mform[0m_object = local_assigns[:[0m[1m[31mform[0m]
[0m[32m9[0m:    selected_value = params[field] || [0m[1m[31mform[0m_object.object.send(field) rescue nil
[0m[32m10[0m-  else
[0m[32m11[0m-    # Standalone usage - must provide url
--
[0m[32m22[0m-%>
[0m[32m23[0m-
[0m[32m24[0m:<% if local_assigns[:[0m[1m[31mform[0m] %>
[0m[32m25[0m-  <% if label %>
[0m[32m26[0m:    <%= [0m[1m[31mform[0m_object.label field, label %>
[0m[32m27[0m-  <% end %>
[0m[32m28[0m-  
[0m[32m29[0m:  <%= [0m[1m[31mform[0m_object.select field,
[0m[32m30[0m-      options_for_select(options, selected_value),
[0m[32m31[0m-      include_blank ? { include_blank: blank_text } : {},
[0m[32m32[0m:      { onchange: "this.[0m[1m[31mform[0m.submit();" } %>
[0m[32m33[0m-      
[0m[32m34[0m-<% else %>
[0m[32m35[0m:  <!-- Standalone auto-submit select [0m[1m[31mform[0m -->
[0m[32m36[0m:  <%= [0m[1m[31mform[0m_with url: url, method: :get, data: (turbo_disabled ? { turbo: false } : {}) do |[0m[1m[31mform[0m| %>
[0m[32m37[0m-    
[0m[32m38[0m-    <!-- Preserve other parameters -->
[0m[32m39[0m-    <% preserve_params.each do |param| %>
[0m[32m40[0m-      <% if params[param].present? %>
[0m[32m41[0m:        <%= [0m[1m[31mform[0m.hidden_field param, value: params[param] %>
[0m[32m42[0m-      <% end %>
[0m[32m43[0m-    <% end %>
[0m[32m44[0m-    
[0m[32m45[0m-    <% if label %>
[0m[32m46[0m:      <%= [0m[1m[31mform[0m.label field, label %>
[0m[32m47[0m-    <% end %>
[0m[32m48[0m-    
[0m[32m49[0m:    <%= [0m[1m[31mform[0m.select field,
[0m[32m50[0m-        options_for_select(options, selected_value),
[0m[32m51[0m-        include_blank ? { include_blank: blank_text } : {},
[0m[32m52[0m:        { onchange: "this.[0m[1m[31mform[0m.submit();" } %>
[0m[32m53[0m-        
[0m[32m54[0m-  <% end %>

[0m[35mapp/views/form/_file_field.html.erb[0m
[0m[32m1[0m-<%
[0m[32m2[0m-  # Get i18n_base from section (already validated there)
[0m[32m3[0m:  setup = [0m[1m[31mform[0m_field_setup(field, local_assigns)
[0m[32m4[0m-
[0m[32m5[0m-  # Form field options
--
[0m[32m8[0m-  show_preview = local_assigns.has_key?(:show_preview) ? local_assigns[:show_preview] : true
[0m[32m9[0m-  show_filename = local_assigns[:show_filename] || false
[0m[32m10[0m:  model = setup[:[0m[1m[31mform[0m_object].object
[0m[32m11[0m-  current_file = model.send(field) if model.respond_to?(field)
[0m[32m12[0m-%>
[0m[32m13[0m-
[0m[32m14[0m:<%= setup[:[0m[1m[31mform[0m_object].label field, setup[:field_label] %>
[0m[32m15[0m:<%= setup[:[0m[1m[31mform[0m_object].file_field field, accept: accept %>
[0m[32m16[0m-
[0m[32m17[0m-<% if current_file&.attached? %>
--
[0m[32m32[0m-
[0m[32m33[0m-<% if setup[:field_hint].present? %>
[0m[32m34[0m:  <small class="[0m[1m[31mform[0m-text"><%= setup[:field_hint] %></small>
[0m[32m35[0m-<% end %>

[0m[35mapp/views/form/_select.html.erb[0m
[0m[32m1[0m-<%
[0m[32m2[0m-  # Get i18n_base from section (already validated there)
[0m[32m3[0m:  setup = [0m[1m[31mform[0m_field_setup(field, local_assigns)
[0m[32m4[0m-
[0m[32m5[0m-  # Form field options
--
[0m[32m24[0m-%>
[0m[32m25[0m-
[0m[32m26[0m:<%= setup[:[0m[1m[31mform[0m_object].label field, setup[:field_label] %>
[0m[32m27[0m-<% if collection_select_params %>
[0m[32m28[0m:  <%= setup[:[0m[1m[31mform[0m_object].collection_select(
[0m[32m29[0m-        field,
[0m[32m30[0m-        collection_select_params[:collection],
--
[0m[32m35[0m-      ) %>
[0m[32m36[0m-<% else %>
[0m[32m37[0m:  <%= setup[:[0m[1m[31mform[0m_object].select field, options, select_options, field_options %>
[0m[32m38[0m-<% end %>
[0m[32m39[0m-<% if setup[:field_hint].present? %>

[0m[35mapp/views/inspector_companies/_form.html.erb[0m
[0m[32m1[0m:<%= render '[0m[1m[31mform[0m/[0m[1m[31mform[0m_context', model: @inspector_company, i18n_base: '[0m[1m[31mform[0ms.inspector_companies' do |[0m[1m[31mform[0m| %>
[0m[32m2[0m:  <%= render '[0m[1m[31mform[0m/fieldset', legend_key: 'company_details' do %>
[0m[32m3[0m:    <%= render '[0m[1m[31mform[0m/text_field', field: :name, required: true %>
[0m[32m4[0m:    <%= render '[0m[1m[31mform[0m/text_field', field: :email, type: :email_field %>
[0m[32m5[0m:    <%= render '[0m[1m[31mform[0m/text_field', field: :phone, type: :telephone_field, required: true %>
[0m[32m6[0m-  <% end %>
[0m[32m7[0m-
[0m[32m8[0m:  <%= render '[0m[1m[31mform[0m/fieldset', legend_key: 'contact_in[0m[1m[31mform[0mation' do %>
[0m[32m9[0m:    <%= render '[0m[1m[31mform[0m/text_area', field: :address, rows: 3, required: true %>
[0m[32m10[0m:    <%= render '[0m[1m[31mform[0m/text_field', field: :city %>
[0m[32m11[0m:    <%= render '[0m[1m[31mform[0m/text_field', field: :state %>
[0m[32m12[0m:    <%= render '[0m[1m[31mform[0m/text_field', field: :postal_code %>
[0m[32m13[0m:    <%= render '[0m[1m[31mform[0m/text_field', field: :country %>
[0m[32m14[0m-  <% end %>
[0m[32m15[0m-
[0m[32m16[0m:  <%= render '[0m[1m[31mform[0m/fieldset', legend_key: 'company_status' do %>
[0m[32m17[0m:    <%= render '[0m[1m[31mform[0m/checkbox', field: :active %>
[0m[32m18[0m-
[0m[32m19[0m-    <% if current_user&.admin? %>
[0m[32m20[0m:      <%= render '[0m[1m[31mform[0m/text_area', field: :notes, rows: 4 %>
[0m[32m21[0m-    <% end %>
[0m[32m22[0m-
[0m[32m23[0m:    <%= render '[0m[1m[31mform[0m/file_field', field: :logo %>
[0m[32m24[0m-  <% end %>
[0m[32m25[0m-<% end %>

[0m[35mapp/javascript/application.js[0m
[0m[32m3[0m-import "comment_toggles";
[0m[32m4[0m-import "details_links";
[0m[32m5[0m:import "dirty_[0m[1m[31mform[0ms";
[0m[32m6[0m-import "share_buttons";
[0m[32m7[0m-import "safety_standards_tabs";
--
[0m[32m9[0m-// Initialize features on Turbo navigation
[0m[32m10[0m-function initializeFeatures() {
[0m[32m11[0m:	// Handle unit selection in inspection [0m[1m[31mform[0m
[0m[32m12[0m-	const unitSelect = document.querySelector(
[0m[32m13[0m-		'select[name="inspection[unit_id]"]',
--
[0m[32m19[0m-
[0m[32m20[0m-			if (selectedUnitId) {
[0m[32m21[0m:				// Trigger [0m[1m[31mform[0m refresh to show unit details
[0m[32m22[0m-				// This could be enhanced with AJAX to avoid page refresh
[0m[32m23[0m:				const [0m[1m[31mform[0m = this.closest("[0m[1m[31mform[0m");
[0m[32m24[0m-				const currentUrl = new URL(window.location);
[0m[32m25[0m-				currentUrl.searchParams.set("unit_id", selectedUnitId);

[0m[35mapp/views/form/_comment.html.erb[0m
[0m[32m10[0m-  placeholder ||= nil
[0m[32m11[0m-
[0m[32m12[0m:  [0m[1m[31mform[0m = @_current_[0m[1m[31mform[0m
[0m[32m13[0m:  checkbox_id = "toggle_#{field}_#{[0m[1m[31mform[0m.object.object_id}"
[0m[32m14[0m:  textarea_id = "#{[0m[1m[31mform[0m.object_name}_#{field}"
[0m[32m15[0m-
[0m[32m16[0m-  # Check if there's existing content
[0m[32m17[0m:  has_content = [0m[1m[31mform[0m.object.send(field).present?
[0m[32m18[0m-%>
[0m[32m19[0m-
--
[0m[32m31[0m-    style="display: <%= has_content ? 'block' : 'none' %>"
[0m[32m32[0m-  >
[0m[32m33[0m:    <%= [0m[1m[31mform[0m.text_field field,
[0m[32m34[0m-        maxlength: maxlength,
[0m[32m35[0m-        placeholder: placeholder,

[0m[35mapp/views/form/_text_field.html.erb[0m
[0m[32m1[0m-<%
[0m[32m2[0m:  setup = [0m[1m[31mform[0m_field_setup(field, local_assigns)
[0m[32m3[0m-
[0m[32m4[0m-  field_type = local_assigns[:type] || :text_field
--
[0m[32m12[0m-%>
[0m[32m13[0m-
[0m[32m14[0m:<%= setup[:[0m[1m[31mform[0m_object].label field, id: field do %>
[0m[32m15[0m-  <%= setup[:field_label] %>
[0m[32m16[0m:  <%= setup[:[0m[1m[31mform[0m_object].send(field_type, field, field_options) %>
[0m[32m17[0m-  <% if local_assigns[:help_text] %>
[0m[32m18[0m-    <small class="help-text"><%= local_assigns[:help_text] %></small>

[0m[35mapp/views/form/_pass_fail_comment.html.erb[0m
[0m[32m11[0m-  comment_field = "#{base_field}_comment".to_sym
[0m[32m12[0m-
[0m[32m13[0m:  [0m[1m[31mform[0m = @_current_[0m[1m[31mform[0m
[0m[32m14[0m:  model = [0m[1m[31mform[0m.object
[0m[32m15[0m-
[0m[32m16[0m:  field_data = [0m[1m[31mform[0m_field_setup(field, local_assigns)
[0m[32m17[0m-
[0m[32m18[0m-  comment_info = comment_field_options(
[0m[32m19[0m:    [0m[1m[31mform[0m,
[0m[32m20[0m-    comment_field,
[0m[32m21[0m-    field_data[:field_label]
--
[0m[32m25[0m-%>
[0m[32m26[0m-
[0m[32m27[0m:<div class="[0m[1m[31mform[0m-grid radio-comment" id="<%= field %>">
[0m[32m28[0m-  <label class="label">
[0m[32m29[0m-    <%= field_data[:field_label] %>
[0m[32m30[0m-  </label>
[0m[32m31[0m-
[0m[32m32[0m:  <%= render '[0m[1m[31mform[0m/radio_pass_fail',
[0m[32m33[0m-    field: field,
[0m[32m34[0m-    prefilled: field_data[:prefilled],
--
[0m[32m36[0m-  %>
[0m[32m37[0m-
[0m[32m38[0m:  <%= render '[0m[1m[31mform[0m/comment_checkbox',
[0m[32m39[0m-    comment_field: comment_field,
[0m[32m40[0m-    checkbox_id: comment_info[:checkbox_id],
--
[0m[32m44[0m-  %>
[0m[32m45[0m-
[0m[32m46[0m:  <%= [0m[1m[31mform[0m.text_area comment_field, comment_info[:options] %>
[0m[32m47[0m-</div>

[0m[35mapp/views/shared/_unit_details.html.erb[0m
[0m[32m1[0m-<% 
[0m[32m2[0m:  # This partial displays unit details in a responsive [0m[1m[31mform[0mat
[0m[32m3[0m-  # Uses the new unit-details-list pattern for better mobile experience
[0m[32m4[0m-  # 
--
[0m[32m118[0m-        <strong><%= t("units.fields.reports") %>:</strong>
[0m[32m119[0m-        <span>
[0m[32m120[0m:          <%= link_to "PDF", unit_path(unit, [0m[1m[31mform[0mat: :pdf), target: "_blank" %>
[0m[32m121[0m-          <%= render 'shared/share_button', 
[0m[32m122[0m:                     url: unit_url(unit, [0m[1m[31mform[0mat: :pdf),
[0m[32m123[0m-                     title: "Unit #{unit.serial} Report",
[0m[32m124[0m-                     copied_text: t("shared.messages.link_copied"),
[0m[32m125[0m-                     button_text: t("shared.buttons.share") %>
[0m[32m126[0m-          /
[0m[32m127[0m:          <%= link_to t("units.fields.qr_code"), unit_path(unit, [0m[1m[31mform[0mat: :png), target: "_blank" %>
[0m[32m128[0m-          /
[0m[32m129[0m:          <%= link_to "JSON", unit_path(unit, [0m[1m[31mform[0mat: :json), target: "_blank" %>
[0m[32m130[0m-        </span>
[0m[32m131[0m-      </li>
--
[0m[32m135[0m-          <strong><%= t("units.fields.latest_inspection") %>:</strong>
[0m[32m136[0m-          <span>
[0m[32m137[0m:            <%= link_to "PDF", inspection_path(last_inspection, [0m[1m[31mform[0mat: :pdf), target: "_blank" %>
[0m[32m138[0m-            <%= render 'shared/share_button', 
[0m[32m139[0m:                       url: inspection_url(last_inspection, [0m[1m[31mform[0mat: :pdf),
[0m[32m140[0m-                       title: "Inspection #{last_inspection.id} Report",
[0m[32m141[0m-                       copied_text: t("shared.messages.link_copied"),
[0m[32m142[0m-                       button_text: t("shared.buttons.share") %>
[0m[32m143[0m-            /
[0m[32m144[0m:            <%= link_to t("units.fields.qr_code"), inspection_path(last_inspection, [0m[1m[31mform[0mat: :png), target: "_blank" %>
[0m[32m145[0m-            /
[0m[32m146[0m:            <%= link_to "JSON", inspection_path(last_inspection, [0m[1m[31mform[0mat: :json), target: "_blank" %>
[0m[32m147[0m-          </span>
[0m[32m148[0m-        </li>

[0m[35mapp/views/safety_standards/_runout_result.html.erb[0m
[0m[32m2[0m-  <div class="calculation-result">
[0m[32m3[0m-    <h2><%= t('safety_standards.calculators.runout.result_title') %></h2>
[0m[32m4[0m:    <p><strong><%= t('safety_standards.calculators.runout.plat[0m[1m[31mform[0m_height_result') %></strong> <%= @runout_result[:plat[0m[1m[31mform[0m_height] %>m</p>
[0m[32m5[0m-    <p><strong><%= t('safety_standards.calculators.runout.required_runout_result') %></strong> <%= @runout_result[:required_runout] %>m</p>
[0m[32m6[0m-    <p><strong><%= t('safety_standards.calculators.runout.calculation_breakdown') %></strong> <%= @runout_result[:calculation] %></p>

[0m[35mapp/views/shared/_unit_photo.html.erb[0m
[0m[32m27[0m-    <% end %>
[0m[32m28[0m-  <% rescue ActiveStorage::InvariableError %>
[0m[32m29[0m:    <p><small><%= t('shared.messages.invalid_image_[0m[1m[31mform[0mat') %></small></p>
[0m[32m30[0m-  <% end %>
[0m[32m31[0m-</div>

[0m[35mapp/views/inspector_companies/new.html.erb[0m
[0m[32m1[0m-<%= render 'shared/page_header', title: t('inspector_companies.titles.new') %>
[0m[32m2[0m-
[0m[32m3[0m:<%= render '[0m[1m[31mform[0m' %>
[0m[32m4[0m-
[0m[32m5[0m-<p><%= link_to t('inspector_companies.titles.index'), inspector_companies_path %></p>

[0m[35mapp/javascript/dirty_forms.js[0m
[0m[32m1[0m:// DirtyForms - tracks [0m[1m[31mform[0m changes and shows unsaved indicator
[0m[32m2[0m-class DirtyForms {
[0m[32m3[0m-  constructor() {
--
[0m[32m12[0m-
[0m[32m13[0m-  createIndicator() {
[0m[32m14[0m:    const existingIndicator = document.getElementById("dirty-[0m[1m[31mform[0m-indicator");
[0m[32m15[0m-    if (existingIndicator) {
[0m[32m16[0m-      this.indicator = existingIndicator;
--
[0m[32m25[0m-
[0m[32m26[0m-    this.indicator = document.createElement("div");
[0m[32m27[0m:    this.indicator.id = "dirty-[0m[1m[31mform[0m-indicator";
[0m[32m28[0m-    this.indicator.innerHTML = `
[0m[32m29[0m:      <div class="dirty-[0m[1m[31mform[0m-content">
[0m[32m30[0m-        <span>Unsaved changes</span>
[0m[32m31[0m-        <button type="button">Save</button>
--
[0m[32m41[0m-
[0m[32m42[0m-  trackForms() {
[0m[32m43[0m:    const [0m[1m[31mform[0ms = document.querySelectorAll("[0m[1m[31mform[0m");
[0m[32m44[0m:    [0m[1m[31mform[0ms.forEach(([0m[1m[31mform[0m, index) => {
[0m[32m45[0m:      this.trackForm([0m[1m[31mform[0m);
[0m[32m46[0m-    });
[0m[32m47[0m-  }
[0m[32m48[0m-
[0m[32m49[0m:  trackForm([0m[1m[31mform[0m) {
[0m[32m50[0m:    const hasSaveMessage = [0m[1m[31mform[0m.querySelector("#[0m[1m[31mform[0m_save_message");
[0m[32m51[0m-    if (!hasSaveMessage) {
[0m[32m52[0m-      return;
[0m[32m53[0m-    }
[0m[32m54[0m-
[0m[32m55[0m:    const [0m[1m[31mform[0mAction = [0m[1m[31mform[0m.action || "";
[0m[32m56[0m-    if (
[0m[32m57[0m:      [0m[1m[31mform[0mAction.includes("/login") ||
[0m[32m58[0m:      [0m[1m[31mform[0mAction.includes("/users/new") ||
[0m[32m59[0m:      [0m[1m[31mform[0mAction.includes("/safety_standards")
[0m[32m60[0m-    ) {
[0m[32m61[0m-      return;
[0m[32m62[0m-    }
[0m[32m63[0m-
[0m[32m64[0m:    if (this.trackedForms.has([0m[1m[31mform[0m)) {
[0m[32m65[0m-      return;
[0m[32m66[0m-    }
[0m[32m67[0m-
[0m[32m68[0m:    const [0m[1m[31mform[0mData = {
[0m[32m69[0m:      initialState: this.captureState([0m[1m[31mform[0m),
[0m[32m70[0m-    };
[0m[32m71[0m-
[0m[32m72[0m-    const inputHandler = () => {
[0m[32m73[0m:      if (this.isDirty([0m[1m[31mform[0m, [0m[1m[31mform[0mData.initialState)) {
[0m[32m74[0m-        this.show();
[0m[32m75[0m-      } else {
--
[0m[32m78[0m-    };
[0m[32m79[0m-
[0m[32m80[0m:    [0m[1m[31mform[0m.addEventListener("input", inputHandler);
[0m[32m81[0m:    [0m[1m[31mform[0m.addEventListener("change", inputHandler);
[0m[32m82[0m:    [0m[1m[31mform[0m.addEventListener("submit", () => {
[0m[32m83[0m-      this.hide();
[0m[32m84[0m:      [0m[1m[31mform[0mData.initialState = this.captureState([0m[1m[31mform[0m);
[0m[32m85[0m-    });
[0m[32m86[0m-
[0m[32m87[0m:    this.trackedForms.set([0m[1m[31mform[0m, [0m[1m[31mform[0mData);
[0m[32m88[0m-  }
[0m[32m89[0m-
[0m[32m90[0m:  captureState([0m[1m[31mform[0m) {
[0m[32m91[0m:    const data = new FormData([0m[1m[31mform[0m);
[0m[32m92[0m-    const state = {};
[0m[32m93[0m-
--
[0m[32m106[0m-  }
[0m[32m107[0m-
[0m[32m108[0m:  isDirty([0m[1m[31mform[0m, initialState) {
[0m[32m109[0m:    return this.captureState([0m[1m[31mform[0m) !== initialState;
[0m[32m110[0m-  }
[0m[32m111[0m-
[0m[32m112[0m-  findDirtyForm() {
[0m[32m113[0m:    for (const [0m[1m[31mform[0m of document.querySelectorAll("[0m[1m[31mform[0m")) {
[0m[32m114[0m:      const [0m[1m[31mform[0mData = this.trackedForms.get([0m[1m[31mform[0m);
[0m[32m115[0m:      if ([0m[1m[31mform[0mData && this.isDirty([0m[1m[31mform[0m, [0m[1m[31mform[0mData.initialState)) {
[0m[32m116[0m:        return [0m[1m[31mform[0m;
[0m[32m117[0m-      }
[0m[32m118[0m-    }

[0m[35mapp/views/inspections/_materials_form.html.erb[0m
[0m[32m1[0m:<%= render '[0m[1m[31mform[0m/[0m[1m[31mform[0m_context',
[0m[32m2[0m-  model: @inspection.materials_assessment,
[0m[32m3[0m:  i18n_base: '[0m[1m[31mform[0ms.materials',
[0m[32m4[0m:  url: inspection_materials_assessment_path(@inspection) do |[0m[1m[31mform[0m|
[0m[32m5[0m-%>
[0m[32m6[0m:  <%= render '[0m[1m[31mform[0m/fieldset', legend_key: 'materials_assessment' do %>
[0m[32m7[0m:    <%= render '[0m[1m[31mform[0m/number_pass_fail_comment', field: :ropes %>
[0m[32m8[0m:    <%= render '[0m[1m[31mform[0m/pass_fail_comment', field: :clamber_netting_pass %>
[0m[32m9[0m:    <%= render '[0m[1m[31mform[0m/pass_fail_comment', field: :retention_netting_pass %>
[0m[32m10[0m:    <%= render '[0m[1m[31mform[0m/pass_fail_comment', field: :zips_pass %>
[0m[32m11[0m:    <%= render '[0m[1m[31mform[0m/pass_fail_comment', field: :windows_pass %>
[0m[32m12[0m:    <%= render '[0m[1m[31mform[0m/pass_fail_comment', field: :artwork_pass %>
[0m[32m13[0m:    <%= render '[0m[1m[31mform[0m/pass_fail_comment', field: :thread_pass %>
[0m[32m14[0m:    <%= render '[0m[1m[31mform[0m/pass_fail_comment', field: :fabric_strength_pass %>
[0m[32m15[0m:    <%= render '[0m[1m[31mform[0m/pass_fail_comment', field: :fire_retardant_pass %>
[0m[32m16[0m-  <% end %>
[0m[32m17[0m-<% end %>

[0m[35mapp/views/shared/_unit_details_form.html.erb[0m
[0m[32m1[0m:<%= render '[0m[1m[31mform[0m/fieldset', [0m[1m[31mform[0m: [0m[1m[31mform[0m, i18n_base: i18n_base, legend_key: 'unit_details' do %>
[0m[32m2[0m:  <%= render '[0m[1m[31mform[0m/text_field', field: :name, required: true %>
[0m[32m3[0m:  <%= render '[0m[1m[31mform[0m/text_field', field: :manufacturer, required: true %>
[0m[32m4[0m:  <%= render '[0m[1m[31mform[0m/text_field', field: :model %>
[0m[32m5[0m:  <%= render '[0m[1m[31mform[0m/text_field', field: :serial, required: true %>
[0m[32m6[0m:  <%= render '[0m[1m[31mform[0m/text_area', field: :description, required: true %>
[0m[32m7[0m:  <%= render '[0m[1m[31mform[0m/autocomplete_field', field: :owner, required: true, options: owner_options(current_user) %>
[0m[32m8[0m:  <%= render '[0m[1m[31mform[0m/date_field', field: :manufacture_date %>
[0m[32m9[0m:  <%= render '[0m[1m[31mform[0m/text_area', field: :notes, rows: 4 %>
[0m[32m10[0m-  
[0m[32m11[0m-  <% if show_photo %>
[0m[32m12[0m:    <%= [0m[1m[31mform[0m.label :photo, t("#{i18n_base}.fields.photo") %>
[0m[32m13[0m:    <%= [0m[1m[31mform[0m.file_field :photo, accept: "image/*" %>
[0m[32m14[0m-    <div id="unit_photo_preview">
[0m[32m15[0m-      <% if object.photo.attached? %>

[0m[35mapp/views/inspections/select_unit.html.erb[0m
[0m[32m8[0m-
[0m[32m9[0m-<section>
[0m[32m10[0m:  <div class="search-[0m[1m[31mform[0m">
[0m[32m11[0m:    <%= [0m[1m[31mform[0m_with url: select_unit_inspection_path(@inspection), method: :get do |[0m[1m[31mform[0m| %>
[0m[32m12[0m:      <%= [0m[1m[31mform[0m.text_field :search, placeholder: t("units.[0m[1m[31mform[0ms.search"), value: params[:search] %>
[0m[32m13[0m:      <%= [0m[1m[31mform[0m.submit t("ui.buttons.search") %>
[0m[32m14[0m-    <% end %>
[0m[32m15[0m-  </div>
--
[0m[32m17[0m-
[0m[32m18[0m-<section>
[0m[32m19[0m:  <%= [0m[1m[31mform[0m_with url: select_unit_inspection_path(@inspection), method: :get, data: { turbo: false } do |[0m[1m[31mform[0m| %>
[0m[32m20[0m:    <%= [0m[1m[31mform[0m.select :manufacturer, 
[0m[32m21[0m-        options_for_select([["All Manufacturers", ""]] + manufacturer_options(current_user).map { |m| [m, m] }, params[:manufacturer]),
[0m[32m22[0m:        {}, { onchange: "this.[0m[1m[31mform[0m.submit();" } %>
[0m[32m23[0m-    
[0m[32m24[0m-    <% if params[:manufacturer].present? %>

[0m[35mapp/views/inspections/edit.html.erb[0m
[0m[32m44[0m-      <% case current_tab %>
[0m[32m45[0m-      <% when 'inspection' %>
[0m[32m46[0m:        <%= render 'inspections/[0m[1m[31mform[0m' %>
[0m[32m47[0m-      <% else %>
[0m[32m48[0m:        <%= render "inspections/#{current_tab}_[0m[1m[31mform[0m" %>
[0m[32m49[0m-      <% end %>
[0m[32m50[0m-    </div>

[0m[35mapp/controllers/units_controller.rb[0m
[0m[32m14[0m-    @title = build_index_title
[0m[32m15[0m-
[0m[32m16[0m:    respond_to do |[0m[1m[31mform[0mat|
[0m[32m17[0m:      [0m[1m[31mform[0mat.html
[0m[32m18[0m:      [0m[1m[31mform[0mat.csv do
[0m[32m19[0m-        csv_data = UnitCsvExportService.new(@units).generate
[0m[32m20[0m-        send_data csv_data, filename: "units-#{Date.today}.csv"
--
[0m[32m28[0m-      .order(inspection_date: :desc)
[0m[32m29[0m-
[0m[32m30[0m:    respond_to do |[0m[1m[31mform[0mat|
[0m[32m31[0m:      [0m[1m[31mform[0mat.html { render_show_html }
[0m[32m32[0m:      [0m[1m[31mform[0mat.pdf { send_unit_pdf }
[0m[32m33[0m:      [0m[1m[31mform[0mat.png { send_unit_qr_code }
[0m[32m34[0m:      [0m[1m[31mform[0mat.json do
[0m[32m35[0m-        render json: JsonSerializerService.serialize_unit(@unit)
[0m[32m36[0m-      end
--
[0m[32m55[0m-  def update
[0m[32m56[0m-    if @unit.update(unit_params)
[0m[32m57[0m:      respond_to do |[0m[1m[31mform[0mat|
[0m[32m58[0m:        [0m[1m[31mform[0mat.html do
[0m[32m59[0m-          flash[:notice] = I18n.t("units.messages.updated")
[0m[32m60[0m-          redirect_to @unit
[0m[32m61[0m-        end
[0m[32m62[0m:        [0m[1m[31mform[0mat.turbo_stream { render_unit_update_success_stream }
[0m[32m63[0m-      end
[0m[32m64[0m-    else
[0m[32m65[0m:      respond_to do |[0m[1m[31mform[0mat|
[0m[32m66[0m:        [0m[1m[31mform[0mat.html { render :edit, status: :unprocessable_entity }
[0m[32m67[0m:        [0m[1m[31mform[0mat.json do
[0m[32m68[0m-          render json: {status: I18n.t("shared.api.error"), errors: @unit.errors.full_messages}
[0m[32m69[0m-        end
[0m[32m70[0m:        [0m[1m[31mform[0mat.turbo_stream { render_unit_update_error_stream }
[0m[32m71[0m-      end
[0m[32m72[0m-    end
--
[0m[32m189[0m-
[0m[32m190[0m-  def resource_pdf_url
[0m[32m191[0m:    unit_path(@unit, [0m[1m[31mform[0mat: :pdf)
[0m[32m192[0m-  end
[0m[32m193[0m-

[0m[35mapp/views/inspections/_enclosed_form.html.erb[0m
[0m[32m1[0m:<%= render '[0m[1m[31mform[0m/[0m[1m[31mform[0m_context',
[0m[32m2[0m-  model: @inspection.enclosed_assessment,
[0m[32m3[0m:  i18n_base: '[0m[1m[31mform[0ms.enclosed',
[0m[32m4[0m:  url: inspection_enclosed_assessment_path(@inspection) do |[0m[1m[31mform[0m|
[0m[32m5[0m-%>
[0m[32m6[0m:  <%= render '[0m[1m[31mform[0m/fieldset', legend_key: 'exit_requirements' do %>
[0m[32m7[0m:    <%= render '[0m[1m[31mform[0m/number_pass_fail_comment', field: :exit_number %>
[0m[32m8[0m:    <%= render '[0m[1m[31mform[0m/pass_fail_comment', field: :exit_sign_always_visible_pass %>
[0m[32m9[0m-  <% end %>
[0m[32m10[0m-<% end %>

[0m[35mapp/views/shared/_safety_standards_display.html.erb[0m
[0m[32m4[0m-  Parameters:
[0m[32m5[0m-  - reference_partials: Array of partials to render in the collapsible reference section
[0m[32m6[0m:  - dynamic_content: Block for dynamic safety in[0m[1m[31mform[0mation specific to each assessment
[0m[32m7[0m-  - show_reference: Whether to show the collapsible reference section (default: true)
[0m[32m8[0m-%>

[0m[35mapp/views/inspections/show.html.erb[0m
[0m[32m4[0m-
[0m[32m5[0m-    <%= render 'shared/pdf_embed', 
[0m[32m6[0m:      url: inspection_path(@inspection, [0m[1m[31mform[0mat: :pdf),
[0m[32m7[0m-      title: "Inspection #{@inspection.id} Report"
[0m[32m8[0m-    %>
--
[0m[32m48[0m-    <% end %>
[0m[32m49[0m-    <%= render 'shared/pdf_embed', 
[0m[32m50[0m:      url: inspection_path(@inspection, [0m[1m[31mform[0mat: :pdf),
[0m[32m51[0m-      title: "Inspection #{@inspection.id} Report" %>
[0m[32m52[0m-  </article>

[0m[35mapp/views/inspections/_safety_standards_summary.html.erb[0m
[0m[32m22[0m-    <% end %>
[0m[32m23[0m-
[0m[32m24[0m:    <% if inspection.assessment_applicable?(:slide_assessment) && inspection.slide_assessment&.slide_plat[0m[1m[31mform[0m_height %>
[0m[32m25[0m-      <section class="standards-section">
[0m[32m26[0m-        <h4><%= t('inspections.safety_standards.slide_requirements') %></h4>

[0m[35mapp/views/inspections/_results_form.html.erb[0m
[0m[32m1[0m:<%= render '[0m[1m[31mform[0m/[0m[1m[31mform[0m_context',
[0m[32m2[0m-  model: @inspection,
[0m[32m3[0m:  i18n_base: '[0m[1m[31mform[0ms.results' do |[0m[1m[31mform[0m|
[0m[32m4[0m-%>
[0m[32m5[0m:  <%= render '[0m[1m[31mform[0m/fieldset', legend_key: 'comments' do %>
[0m[32m6[0m-    <% comments_found = false %>
[0m[32m7[0m-    <% comment_items = [] %>
--
[0m[32m25[0m-        <% if field_name.end_with?('_comment') && value.present? %>
[0m[32m26[0m-          <% comments_found = true %>
[0m[32m27[0m:          <% [0m[1m[31mform[0m_name = assessment_key.to_s.gsub(/_assessment$/, '') %>
[0m[32m28[0m-          <% base_field = field_name.chomp('_comment') %>
[0m[32m29[0m:          <% label = @inspection.field_label([0m[1m[31mform[0m_name, base_field) %>
[0m[32m30[0m-          <% comment_items << { label: label, value: value } %>
[0m[32m31[0m-        <% end %>
--
[0m[32m43[0m-      </ul>
[0m[32m44[0m-    <% else %>
[0m[32m45[0m:      <p><em><%= t("[0m[1m[31mform[0ms.results.messages.no_comments") %></em></p>
[0m[32m46[0m-    <% end %>
[0m[32m47[0m-  <% end %>
[0m[32m48[0m-
[0m[32m49[0m:  <%= render '[0m[1m[31mform[0m/fieldset', legend_key: 'inspection_results' do %>
[0m[32m50[0m:    <%= render '[0m[1m[31mform[0m/pass_fail', field: :passed %>
[0m[32m51[0m:    <%= render '[0m[1m[31mform[0m/text_area', field: :risk_assessment, rows: 3 %>
[0m[32m52[0m-  <% end %>
[0m[32m53[0m-<% end %>

[0m[35mapp/views/inspections/_fan_form.html.erb[0m
[0m[32m1[0m:<%= render '[0m[1m[31mform[0m/[0m[1m[31mform[0m_context',
[0m[32m2[0m-  model: @inspection.fan_assessment,
[0m[32m3[0m:  i18n_base: '[0m[1m[31mform[0ms.fan',
[0m[32m4[0m:  url: inspection_fan_assessment_path(@inspection) do |[0m[1m[31mform[0m|
[0m[32m5[0m-%>
[0m[32m6[0m:  <%= render '[0m[1m[31mform[0m/fieldset', legend_key: 'fan_assessment' do %>
[0m[32m7[0m:    <%= render '[0m[1m[31mform[0m/text_field', field: :fan_size_type %>
[0m[32m8[0m:    <%= render '[0m[1m[31mform[0m/text_field', field: :blower_serial %>
[0m[32m9[0m:    <%= render '[0m[1m[31mform[0m/pass_fail_comment', field: :blower_serial_pass %>
[0m[32m10[0m:    <%= render '[0m[1m[31mform[0m/pass_fail_comment', field: :blower_flap_pass %>
[0m[32m11[0m:    <%= render '[0m[1m[31mform[0m/pass_fail_comment', field: :blower_finger_pass %>
[0m[32m12[0m:    <%= render '[0m[1m[31mform[0m/pass_fail_comment', field: :pat_pass %>
[0m[32m13[0m:    <%= render '[0m[1m[31mform[0m/pass_fail_comment', field: :blower_visual_pass %>
[0m[32m14[0m-  <% end %>
[0m[32m15[0m-<% end %>

[0m[35mapp/views/inspections/_anchorage_form.html.erb[0m
[0m[32m1[0m:<%= render '[0m[1m[31mform[0m/[0m[1m[31mform[0m_context',
[0m[32m2[0m-  model: @inspection.anchorage_assessment,
[0m[32m3[0m:  i18n_base: '[0m[1m[31mform[0ms.anchorage',
[0m[32m4[0m:  url: inspection_anchorage_assessment_path(@inspection) do |[0m[1m[31mform[0m|
[0m[32m5[0m-%>
[0m[32m6[0m:  <%= render '[0m[1m[31mform[0m/fieldset', legend_key: 'anchor_counts' do %>
[0m[32m7[0m:    <%= render '[0m[1m[31mform[0m/number_pass_fail_comment',
[0m[32m8[0m-      field: :num_low_anchors,
[0m[32m9[0m-      step:1
[0m[32m10[0m-    %>
[0m[32m11[0m:    <%= render '[0m[1m[31mform[0m/number_pass_fail_comment',
[0m[32m12[0m-      field: :num_high_anchors,
[0m[32m13[0m-      step:1
--
[0m[32m15[0m-  <% end %>
[0m[32m16[0m-
[0m[32m17[0m:  <%= render '[0m[1m[31mform[0m/fieldset', legend_key: 'anchor_quality' do %>
[0m[32m18[0m:    <%= render '[0m[1m[31mform[0m/pass_fail_comment', field: :anchor_accessories_pass %>
[0m[32m19[0m:    <%= render '[0m[1m[31mform[0m/pass_fail_comment', field: :anchor_degree_pass %>
[0m[32m20[0m:    <%= render '[0m[1m[31mform[0m/pass_fail_comment', field: :anchor_type_pass %>
[0m[32m21[0m:    <%= render '[0m[1m[31mform[0m/pass_fail_comment', field: :pull_strength_pass %>
[0m[32m22[0m-  <% end %>
[0m[32m23[0m-

[0m[35mapp/controllers/inspector_companies_controller.rb[0m
[0m[32m49[0m-
[0m[32m50[0m-  def handle_successful_update
[0m[32m51[0m:    respond_to do |[0m[1m[31mform[0mat|
[0m[32m52[0m:      [0m[1m[31mform[0mat.html do
[0m[32m53[0m-        flash[:notice] = t("inspector_companies.messages.updated")
[0m[32m54[0m-        redirect_to @inspector_company
[0m[32m55[0m-      end
[0m[32m56[0m:      [0m[1m[31mform[0mat.turbo_stream do
[0m[32m57[0m-        render turbo_stream: save_message_turbo_stream(
[0m[32m58[0m-          t("inspector_companies.messages.updated"),
--
[0m[32m64[0m-
[0m[32m65[0m-  def handle_failed_update
[0m[32m66[0m:    respond_to do |[0m[1m[31mform[0mat|
[0m[32m67[0m:      [0m[1m[31mform[0mat.html { render :edit, status: :unprocessable_entity }
[0m[32m68[0m:      [0m[1m[31mform[0mat.turbo_stream do
[0m[32m69[0m-        render turbo_stream: save_message_turbo_stream(
[0m[32m70[0m-          t("shared.messages.save_failed"),
--
[0m[32m77[0m-  def save_message_turbo_stream(message, type)
[0m[32m78[0m-    [
[0m[32m79[0m:      turbo_stream.replace("[0m[1m[31mform[0m_save_message",
[0m[32m80[0m-        partial: "shared/save_message",
[0m[32m81[0m-        locals: {
[0m[32m82[0m:          element_id: "[0m[1m[31mform[0m_save_message",
[0m[32m83[0m-          message: message,
[0m[32m84[0m-          type: type
--
[0m[32m101[0m-  def require_admin
[0m[32m102[0m-    unless current_user&.admin?
[0m[32m103[0m:      flash[:alert] = t("[0m[1m[31mform[0ms.session_new.status.admin_required")
[0m[32m104[0m-      redirect_to root_path
[0m[32m105[0m-    end

[0m[35mapp/views/shared/_image.html.erb[0m
[0m[32m29[0m-    decoding: "async" %>
[0m[32m30[0m-<% rescue ActiveStorage::InvariableError %>
[0m[32m31[0m:  <p><small>Cannot display: invalid image [0m[1m[31mform[0mat</small></p>
[0m[32m32[0m-<% end %>

[0m[35mapp/controllers/users_controller.rb[0m
[0m[32m57[0m-
[0m[32m58[0m-    if @user.update(user_params)
[0m[32m59[0m:      respond_to do |[0m[1m[31mform[0mat|
[0m[32m60[0m:        [0m[1m[31mform[0mat.html do
[0m[32m61[0m-          flash[:notice] = I18n.t("users.messages.user_updated")
[0m[32m62[0m-          redirect_to users_path
[0m[32m63[0m-        end
[0m[32m64[0m:        [0m[1m[31mform[0mat.turbo_stream do
[0m[32m65[0m-          render turbo_stream: [
[0m[32m66[0m-            turbo_stream.replace("user_edit_save_message",
--
[0m[32m75[0m-      end
[0m[32m76[0m-    else
[0m[32m77[0m:      respond_to do |[0m[1m[31mform[0mat|
[0m[32m78[0m:        [0m[1m[31mform[0mat.html { render :edit, status: :unprocessable_entity }
[0m[32m79[0m:        [0m[1m[31mform[0mat.turbo_stream do
[0m[32m80[0m-          render turbo_stream: [
[0m[32m81[0m-            turbo_stream.replace("user_edit_save_message",
--
[0m[32m128[0m-  def update_settings
[0m[32m129[0m-    if @user.update(settings_params)
[0m[32m130[0m:      respond_to do |[0m[1m[31mform[0mat|
[0m[32m131[0m:        [0m[1m[31mform[0mat.html do
[0m[32m132[0m-          flash[:notice] = I18n.t("users.messages.settings_updated")
[0m[32m133[0m-          redirect_to root_path
[0m[32m134[0m-        end
[0m[32m135[0m:        [0m[1m[31mform[0mat.turbo_stream do
[0m[32m136[0m-          render turbo_stream: [
[0m[32m137[0m-            turbo_stream.replace("user_settings_save_message",
--
[0m[32m146[0m-      end
[0m[32m147[0m-    else
[0m[32m148[0m:      respond_to do |[0m[1m[31mform[0mat|
[0m[32m149[0m:        [0m[1m[31mform[0mat.html { render :change_settings, status: :unprocessable_entity }
[0m[32m150[0m:        [0m[1m[31mform[0mat.turbo_stream do
[0m[32m151[0m-          render turbo_stream: [
[0m[32m152[0m-            turbo_stream.replace("user_settings_save_message",
--
[0m[32m166[0m-    result = @user.verify_rpii_inspector_number
[0m[32m167[0m-
[0m[32m168[0m:    respond_to do |[0m[1m[31mform[0mat|
[0m[32m169[0m:      [0m[1m[31mform[0mat.html do
[0m[32m170[0m-        if result[:valid]
[0m[32m171[0m-          flash[:notice] = I18n.t("users.messages.rpii_verified")
--
[0m[32m176[0m-      end
[0m[32m177[0m-
[0m[32m178[0m:      [0m[1m[31mform[0mat.turbo_stream do
[0m[32m179[0m-        render turbo_stream: turbo_stream.replace("rpii_verification_result",
[0m[32m180[0m-          partial: "users/rpii_verification_result",

[0m[35mapp/views/inspections/index.html.erb[0m
[0m[32m18[0m-
[0m[32m19[0m-<% if @has_any_inspections || current_user.units.any? %>
[0m[32m20[0m:  <%= render 'filter_[0m[1m[31mform[0m' %>
[0m[32m21[0m-<% end %>
[0m[32m22[0m-
--
[0m[32m34[0m-  <%= render 'inspections_table', inspections: @complete_inspections %>
[0m[32m35[0m-  <p>
[0m[32m36[0m:    <%= link_to inspections_path(request.query_parameters.merge([0m[1m[31mform[0mat: :csv)) do %>
[0m[32m37[0m-      <strong>Export CSV</strong>
[0m[32m38[0m-    <% end %>

[0m[35mapp/views/shared/safety_standards/_calculator_form.html.erb[0m
[0m[32m1[0m-<%
[0m[32m2[0m-  metadata = SafetyStandard.calculation_metadata[type]
[0m[32m3[0m:  i18n_base = "[0m[1m[31mform[0ms.safety_standards_#{type}"
[0m[32m4[0m-  result_id = "#{type.to_s.dasherize}-result"
[0m[32m5[0m-%>
--
[0m[32m7[0m-<p><%= metadata[:description] %></p>
[0m[32m8[0m-
[0m[32m9[0m:<div class="calculator-[0m[1m[31mform[0m">
[0m[32m10[0m:  <%= render '[0m[1m[31mform[0m/[0m[1m[31mform[0m_context',
[0m[32m11[0m-    model: nil,
[0m[32m12[0m-    scope: :calculation,
--
[0m[32m14[0m-    method: :post,
[0m[32m15[0m-    local: false,
[0m[32m16[0m:    i18n_base: i18n_base do |[0m[1m[31mform[0m| %>
[0m[32m17[0m-    
[0m[32m18[0m:    <%= [0m[1m[31mform[0m.hidden_field :type, value: type.to_s %>
[0m[32m19[0m-    
[0m[32m20[0m-    <% case type %>
[0m[32m21[0m-    <% when :anchors %>
[0m[32m22[0m:      <%= render '[0m[1m[31mform[0m/fieldset', legend_key: 'unit_dimensions' do %>
[0m[32m23[0m:        <%= render '[0m[1m[31mform[0m/number', field: :length, min: 1.0, required: true %>
[0m[32m24[0m:        <%= render '[0m[1m[31mform[0m/number', field: :width, min: 1.0, required: true %>
[0m[32m25[0m:        <%= render '[0m[1m[31mform[0m/number', field: :height, min: 1.0, required: true %>
[0m[32m26[0m-      <% end %>
[0m[32m27[0m-      
[0m[32m28[0m-    <% when :slide_runout %>
[0m[32m29[0m:      <%= render '[0m[1m[31mform[0m/number', field: :plat[0m[1m[31mform[0m_height, min: 1.0, required: true %>
[0m[32m30[0m-      
[0m[32m31[0m-    <% when :wall_height %>
[0m[32m32[0m:      <%= render '[0m[1m[31mform[0m/number', field: :user_height, min: 1.0, required: true %>
[0m[32m33[0m-    <% end %>
[0m[32m34[0m-    
--
[0m[32m45[0m-</div>
[0m[32m46[0m-
[0m[32m47[0m:<details class="[0m[1m[31mform[0mula-box">
[0m[32m48[0m-  <summary><strong>Calculation Formula</strong></summary>
[0m[32m49[0m-  <div>
[0m[32m50[0m:    <code><%= metadata[:[0m[1m[31mform[0mula_text] %></code>
[0m[32m51[0m-    <p>Example: <%= SafetyStandard.generate_example(type) %></p>
[0m[32m52[0m-  </div>

[0m[35mapp/controllers/concerns/unit_turbo_streams.rb[0m
[0m[32m24[0m-
[0m[32m25[0m-  def build_save_message_stream(success:, message:, errors: nil)
[0m[32m26[0m:    turbo_stream.replace("[0m[1m[31mform[0m_save_message",
[0m[32m27[0m-      partial: "shared/save_message",
[0m[32m28[0m-      locals: {
[0m[32m29[0m:        dom_id: "[0m[1m[31mform[0m_save_message",
[0m[32m30[0m-        success: success,
[0m[32m31[0m-        success_message: success ? message : nil,

[0m[35mapp/views/shared/safety_standards/_slide_safety_requirements.html.erb[0m
[0m[32m3[0m-  
[0m[32m4[0m-  <h5>Runout Requirements:</h5>
[0m[32m5[0m:  <div class="[0m[1m[31mform[0mula-box">
[0m[32m6[0m:    <strong>Formula:</strong> <code>Required Runout = max(Plat[0m[1m[31mform[0m Height × 0.5, 0.3m)</code>
[0m[32m7[0m:    <br><em>Example: 2.5m plat[0m[1m[31mform[0m requires max(2.5 × 0.5, 0.3) = 1.25m runout</em>
[0m[32m8[0m-  </div>
[0m[32m9[0m-
[0m[32m10[0m-  <ul>
[0m[32m11[0m:    <li>Minimum length: 50% of highest plat[0m[1m[31mform[0m height</li>
[0m[32m12[0m-    <li>Absolute minimum: 300mm in any case</li>
[0m[32m13[0m-    <li>Maximum inclination: Not more than 10°</li>
--
[0m[32m20[0m-    <thead>
[0m[32m21[0m-      <tr>
[0m[32m22[0m:        <th>Plat[0m[1m[31mform[0m Height</th>
[0m[32m23[0m-        <th>Requirement</th>
[0m[32m24[0m-      </tr>
--
[0m[32m31[0m-      <tr>
[0m[32m32[0m-        <td>600mm - 3000mm</td>
[0m[32m33[0m:        <td>Containing walls equal to plat[0m[1m[31mform[0m height</td>
[0m[32m34[0m-      </tr>
[0m[32m35[0m-      <tr>
[0m[32m36[0m-        <td>3000mm - 6000mm</td>
[0m[32m37[0m:        <td>Containing walls 1.25 times plat[0m[1m[31mform[0m height</td>
[0m[32m38[0m-      </tr>
[0m[32m39[0m-      <tr>

[0m[35mapp/controllers/application_controller.rb[0m
[0m[32m5[0m-  before_action :update_last_active_at
[0m[32m6[0m-
[0m[32m7[0m:  # Per[0m[1m[31mform[0mance tracking for debug info
[0m[32m8[0m-  before_action :start_debug_timer, if: :admin_debug_enabled?
[0m[32m9[0m-  after_action :check_query_limit, if: :should_check_query_limit?
--
[0m[32m50[0m-  end
[0m[32m51[0m-
[0m[32m52[0m:  def [0m[1m[31mform[0m_i18n([0m[1m[31mform[0m, key, **args)
[0m[32m53[0m:    I18n.t("[0m[1m[31mform[0ms.#{[0m[1m[31mform[0m}.#{key}", **args)
[0m[32m54[0m-  end
[0m[32m55[0m-
[0m[32m56[0m-  def require_login
[0m[32m57[0m-    unless logged_in?
[0m[32m58[0m:      flash[:alert] = [0m[1m[31mform[0m_i18n(:session_new, "status.login_required")
[0m[32m59[0m-      redirect_to login_path
[0m[32m60[0m-    end
--
[0m[32m63[0m-  def require_logged_out
[0m[32m64[0m-    if logged_in?
[0m[32m65[0m:      flash[:alert] = [0m[1m[31mform[0m_i18n(:session_new, "status.already_logged_in")
[0m[32m66[0m-      redirect_to inspections_path
[0m[32m67[0m-    end
--
[0m[32m76[0m-  def require_admin
[0m[32m77[0m-    unless current_user&.admin?
[0m[32m78[0m:      flash[:alert] = I18n.t("[0m[1m[31mform[0ms.session_new.status.admin_required")
[0m[32m79[0m-      redirect_to root_path
[0m[32m80[0m-    end

[0m[35mapp/controllers/safety_standards_controller.rb[0m
[0m[32m23[0m-  def handle_calculation_post
[0m[32m24[0m-    calculate_safety_standard
[0m[32m25[0m:    respond_to do |[0m[1m[31mform[0mat|
[0m[32m26[0m:      [0m[1m[31mform[0mat.turbo_stream
[0m[32m27[0m:      [0m[1m[31mform[0mat.json { render json: build_json_response }
[0m[32m28[0m:      [0m[1m[31mform[0mat.html { redirect_with_calculation_params }
[0m[32m29[0m-    end
[0m[32m30[0m-  end
--
[0m[32m32[0m-  def handle_calculation_get
[0m[32m33[0m-    calculate_safety_standard if params[:calculation].present?
[0m[32m34[0m:    respond_to do |[0m[1m[31mform[0mat|
[0m[32m35[0m:      [0m[1m[31mform[0mat.html
[0m[32m36[0m-    end
[0m[32m37[0m-  end
--
[0m[32m57[0m-
[0m[32m58[0m-  def calculate_slide_runout
[0m[32m59[0m:    height = param_to_float(:plat[0m[1m[31mform[0m_height)
[0m[32m60[0m-
[0m[32m61[0m-    if height.positive?
--
[0m[32m88[0m-  end
[0m[32m89[0m-
[0m[32m90[0m:  def build_runout_result(plat[0m[1m[31mform[0m_height)
[0m[32m91[0m:    required_runout = SafetyStandard.calculate_required_runout(plat[0m[1m[31mform[0m_height)
[0m[32m92[0m-    {
[0m[32m93[0m:      plat[0m[1m[31mform[0m_height: plat[0m[1m[31mform[0m_height,
[0m[32m94[0m-      required_runout: required_runout,
[0m[32m95[0m:      calculation: build_runout_calculation_text(plat[0m[1m[31mform[0m_height, required_runout)
[0m[32m96[0m-    }
[0m[32m97[0m-  end
[0m[32m98[0m-
[0m[32m99[0m:  def build_runout_calculation_text(plat[0m[1m[31mform[0m_height, required_runout)
[0m[32m100[0m:    half_height = plat[0m[1m[31mform[0m_height * 0.5
[0m[32m101[0m:    "50% of #{plat[0m[1m[31mform[0m_height}m = #{half_height}m, minimum 0.3m = #{required_runout}m"
[0m[32m102[0m-  end
[0m[32m103[0m-
--
[0m[32m154[0m-
[0m[32m155[0m-  def build_typed_json_response(type)
[0m[32m156[0m:    # Ensure calculation is per[0m[1m[31mform[0med
[0m[32m157[0m-    calculate_safety_standard
[0m[32m158[0m-

[0m[35mapp/controllers/concerns/public_viewable.rb[0m
[0m[32m9[0m-
[0m[32m10[0m-  # Access Rules:
[0m[32m11[0m:  # 1. PDF/JSON/PNG [0m[1m[31mform[0mats: Always allowed for everyone (logged in or not)
[0m[32m12[0m:  # 2. HTML [0m[1m[31mform[0mat:
[0m[32m13[0m-  #    - Not logged in: Allowed, shows minimal PDF viewer
[0m[32m14[0m-  #    - Logged in as owner: Allowed, shows full application view
[0m[32m15[0m-  #    - Logged in as non-owner: Allowed, shows minimal PDF viewer
[0m[32m16[0m:  # 3. All other actions/[0m[1m[31mform[0mats: Require ownership
[0m[32m17[0m-  def check_resource_access
[0m[32m18[0m-    # Rule 1: Always allow PDF/JSON/PNG access for everyone
[0m[32m19[0m:    return if request.[0m[1m[31mform[0mat.pdf? || request.[0m[1m[31mform[0mat.json? || request.[0m[1m[31mform[0mat.png?
[0m[32m20[0m-
[0m[32m21[0m-    # Rule 2: Always allow HTML access (show action decides the view)
[0m[32m22[0m:    return if request.[0m[1m[31mform[0mat.html? && action_name == "show"
[0m[32m23[0m-
[0m[32m24[0m-    # Rule 3: All other cases require ownership

[0m[35mapp/views/inspections/_inspection_stats.html.erb[0m
[0m[32m6[0m-    </li>
[0m[32m7[0m-    <li>
[0m[32m8[0m:      Usage: <strong><%= [0m[1m[31mform[0mat_inspection_count(current_user) %></strong>
[0m[32m9[0m-    </li>
[0m[32m10[0m-  </ul>

[0m[35mapp/views/inspections/_filter_form.html.erb[0m
[0m[32m1[0m:<%= [0m[1m[31mform[0m_with url: inspections_path, method: :get, data: { turbo: false }, id: "search-box" do |[0m[1m[31mform[0m| %>
[0m[32m2[0m:    <%= [0m[1m[31mform[0m.text_field :query, 
[0m[32m3[0m-        placeholder: t('inspections.search.placeholder'), 
[0m[32m4[0m-        value: params[:query],
[0m[32m5[0m:        onkeyup: "if(event.key === 'Enter') this.[0m[1m[31mform[0m.submit();" %>
[0m[32m6[0m-    
[0m[32m7[0m:    <%= [0m[1m[31mform[0m.select :result, 
[0m[32m8[0m-        options_for_select([
[0m[32m9[0m-          [t('inspections.filters.all_results'), ""],
--
[0m[32m11[0m-          [t('inspections.filters.failed'), "failed"]
[0m[32m12[0m-        ], params[:result]),
[0m[32m13[0m:        {}, { onchange: "this.[0m[1m[31mform[0m.submit();" } %>
[0m[32m14[0m-    
[0m[32m15[0m:    <%= [0m[1m[31mform[0m.select :unit_id, 
[0m[32m16[0m-        options_for_select([
[0m[32m17[0m-          [t('inspections.filters.all_units'), ""]
[0m[32m18[0m-        ] + current_user.units.order(:name).map { |u| [u.name, u.id] }, params[:unit_id]),
[0m[32m19[0m:        {}, { onchange: "this.[0m[1m[31mform[0m.submit();" } %>
[0m[32m20[0m-    
[0m[32m21[0m:    <%= [0m[1m[31mform[0m.select :owner, 
[0m[32m22[0m-        options_for_select([
[0m[32m23[0m-          [t('inspections.filters.all_owners'), ""]
[0m[32m24[0m-        ] + owner_options(current_user), params[:owner]),
[0m[32m25[0m:        {}, { onchange: "this.[0m[1m[31mform[0m.submit();" } %>
[0m[32m26[0m-    
[0m[32m27[0m:    <%= [0m[1m[31mform[0m.select :inspection_location, 
[0m[32m28[0m-        options_for_select([
[0m[32m29[0m-          [t('inspections.filters.all_locations'), ""]
[0m[32m30[0m-        ] + @inspection_locations, params[:inspection_location]),
[0m[32m31[0m:        {}, { onchange: "this.[0m[1m[31mform[0m.submit();" } %>
[0m[32m32[0m-    
[0m[32m33[0m-    <% if params[:result].present? || params[:unit_id].present? || params[:query].present? || params[:owner].present? || params[:inspection_location].present? %>

[0m[35mapp/views/shared/_incomplete_fields.html.erb[0m
[0m[32m1[0m-<%
[0m[32m2[0m-  incomplete_fields = @inspection.incomplete_fields
[0m[32m3[0m:  total_field_count = incomplete_fields.sum { |[0m[1m[31mform[0m| [0m[1m[31mform[0m[:fields].count }
[0m[32m4[0m-  description_key ||= "assessments.incomplete_fields.description"
[0m[32m5[0m-%>
--
[0m[32m14[0m-      <p><%= t(description_key) %></p>
[0m[32m15[0m-      <ul class="incomplete-fields-list">
[0m[32m16[0m:        <% incomplete_fields.each do |[0m[1m[31mform[0m| %>
[0m[32m17[0m-          <li>
[0m[32m18[0m-            <strong>
[0m[32m19[0m:              <%= link_to t("[0m[1m[31mform[0ms.#{[0m[1m[31mform[0m[:tab]}.header"),
[0m[32m20[0m-                edit_inspection_path(
[0m[32m21[0m-                  @inspection,
[0m[32m22[0m:                  tab: [0m[1m[31mform[0m[:tab],
[0m[32m23[0m-                  anchor: "tabs"
[0m[32m24[0m-                )
--
[0m[32m28[0m-          <li>
[0m[32m29[0m-            <ul>
[0m[32m30[0m:              <% [0m[1m[31mform[0m[:fields].each do |field| %>
[0m[32m31[0m-                <li>
[0m[32m32[0m-                  <%= link_to field[:label],
[0m[32m33[0m-                    edit_inspection_path(
[0m[32m34[0m-                      @inspection,
[0m[32m35[0m:                      tab: [0m[1m[31mform[0m[:tab],
[0m[32m36[0m-                      anchor: field[:field]
[0m[32m37[0m-                    )

[0m[35mapp/views/inspections/_form.html.erb[0m
[0m[32m1[0m:<%= render '[0m[1m[31mform[0m/[0m[1m[31mform[0m_context',
[0m[32m2[0m-  model: @inspection,
[0m[32m3[0m:  i18n_base: '[0m[1m[31mform[0ms.inspection' do |[0m[1m[31mform[0m|
[0m[32m4[0m-%>
[0m[32m5[0m:  <%= render '[0m[1m[31mform[0m/fieldset', legend_key: 'current_unit' do %>
[0m[32m6[0m-    <% if @inspection.unit.present? %>
[0m[32m7[0m-      <%= render 'shared/unit_details_display', unit: @inspection.unit %>
--
[0m[32m23[0m-
[0m[32m24[0m-  <% unless @inspection.new_record? %>
[0m[32m25[0m:    <%= render '[0m[1m[31mform[0m/fieldset', legend_key: 'public_in[0m[1m[31mform[0mation' do %>
[0m[32m26[0m:      <%= render '[0m[1m[31mform[0m/display_field', field: :id %>
[0m[32m27[0m-      <div>
[0m[32m28[0m-        <%= link_to t('inspections.buttons.download_pdf'),
[0m[32m29[0m:          inspection_path(@inspection, [0m[1m[31mform[0mat: :pdf),
[0m[32m30[0m-          target: '_blank' %> /
[0m[32m31[0m-        <%= link_to t('inspections.buttons.download_qr_code'),
[0m[32m32[0m:          inspection_path(@inspection, [0m[1m[31mform[0mat: :png),
[0m[32m33[0m-          download: "inspection-#{@inspection.id}-qr.png" %>
[0m[32m34[0m-      </div>
--
[0m[32m36[0m-  <% end %>
[0m[32m37[0m-
[0m[32m38[0m:  <%= render '[0m[1m[31mform[0m/fieldset', legend_key: 'inspection_details' do %>
[0m[32m39[0m:    <%= render '[0m[1m[31mform[0m/autocomplete_field',
[0m[32m40[0m-      field: :inspection_location,
[0m[32m41[0m-      options: @inspection_locations
[0m[32m42[0m-    %>
[0m[32m43[0m-
[0m[32m44[0m:    <%= render '[0m[1m[31mform[0m/date_field', field: :inspection_date %>
[0m[32m45[0m-
[0m[32m46[0m-    <div class="calculated-field">
--
[0m[32m53[0m-
[0m[32m54[0m-    <div id="unique_report_number_section">
[0m[32m55[0m:      <%= [0m[1m[31mform[0m.label :unique_report_number, t('inspections.fields.unique_report_number') %>
[0m[32m56[0m:      <%= [0m[1m[31mform[0m.text_field :unique_report_number %>
[0m[32m57[0m-      <% if @inspection.unique_report_number.blank? && @inspection.persisted? %>
[0m[32m58[0m-        <button type="button"
--
[0m[32m70[0m-  <% end %>
[0m[32m71[0m-
[0m[32m72[0m:  <%= render '[0m[1m[31mform[0m/fieldset', legend_key: 'unit_dimensions' do %>
[0m[32m73[0m:    <%= render '[0m[1m[31mform[0m/decimal_comment', field: :width %>
[0m[32m74[0m:    <%= render '[0m[1m[31mform[0m/decimal_comment', field: :length %>
[0m[32m75[0m:    <%= render '[0m[1m[31mform[0m/decimal_comment', field: :height %>
[0m[32m76[0m-  <% end %>
[0m[32m77[0m-
[0m[32m78[0m:  <%= render '[0m[1m[31mform[0m/fieldset', legend_key: 'unit_configuration' do %>
[0m[32m79[0m:    <%= render '[0m[1m[31mform[0m/yes_no_radio', field: :has_slide %>
[0m[32m80[0m:    <%= render '[0m[1m[31mform[0m/yes_no_radio', field: :is_totally_enclosed %>
[0m[32m81[0m-  <% end %>
[0m[32m82[0m-

[0m[35mapp/controllers/inspections_controller.rb[0m
[0m[32m22[0m-    load_inspection_locations
[0m[32m23[0m-
[0m[32m24[0m:    respond_to do |[0m[1m[31mform[0mat|
[0m[32m25[0m:      [0m[1m[31mform[0mat.html
[0m[32m26[0m:      [0m[1m[31mform[0mat.csv { send_inspections_csv }
[0m[32m27[0m-    end
[0m[32m28[0m-  end
[0m[32m29[0m-
[0m[32m30[0m-  def show
[0m[32m31[0m:    respond_to do |[0m[1m[31mform[0mat|
[0m[32m32[0m:      [0m[1m[31mform[0mat.html { render_show_html }
[0m[32m33[0m:      [0m[1m[31mform[0mat.pdf { send_inspection_pdf }
[0m[32m34[0m:      [0m[1m[31mform[0mat.png { send_inspection_qr_code }
[0m[32m35[0m:      [0m[1m[31mform[0mat.json do
[0m[32m36[0m-        render json: JsonSerializerService.serialize_inspection(@inspection)
[0m[32m37[0m-      end
--
[0m[32m306[0m-
[0m[32m307[0m-  def handle_successful_update
[0m[32m308[0m:    respond_to do |[0m[1m[31mform[0mat|
[0m[32m309[0m:      [0m[1m[31mform[0mat.html do
[0m[32m310[0m-        flash[:notice] = I18n.t("inspections.messages.updated")
[0m[32m311[0m-        redirect_to @inspection
[0m[32m312[0m-      end
[0m[32m313[0m:      [0m[1m[31mform[0mat.json do
[0m[32m314[0m-        render json: {status: I18n.t("shared.api.success"),
[0m[32m315[0m-                      inspection: @inspection}
[0m[32m316[0m-      end
[0m[32m317[0m:      [0m[1m[31mform[0mat.turbo_stream { render turbo_stream: success_turbo_streams }
[0m[32m318[0m-    end
[0m[32m319[0m-  end
[0m[32m320[0m-
[0m[32m321[0m-  def handle_failed_update
[0m[32m322[0m:    respond_to do |[0m[1m[31mform[0mat|
[0m[32m323[0m:      [0m[1m[31mform[0mat.html { render :edit, status: :unprocessable_entity }
[0m[32m324[0m:      [0m[1m[31mform[0mat.json { render json: {status: I18n.t("shared.api.error"), errors: @inspection.errors.full_messages} }
[0m[32m325[0m:      [0m[1m[31mform[0mat.turbo_stream { render turbo_stream: error_turbo_streams }
[0m[32m326[0m-    end
[0m[32m327[0m-  end
--
[0m[32m366[0m-
[0m[32m367[0m-  def resource_pdf_url
[0m[32m368[0m:    inspection_path(@inspection, [0m[1m[31mform[0mat: :pdf)
[0m[32m369[0m-  end
[0m[32m370[0m-
--
[0m[32m449[0m-    is_pass = field.end_with?("_pass")
[0m[32m450[0m-    field_base = field.gsub(/_(comment|pass)$/, "")
[0m[32m451[0m:    i18n_base = "[0m[1m[31mform[0ms.#{params[:tab]}.fields"
[0m[32m452[0m-
[0m[32m453[0m-    translated = I18n.t("#{i18n_base}.#{field_base}", default: nil)

[0m[35mapp/controllers/concerns/inspection_turbo_streams.rb[0m
[0m[32m38[0m-  def assessment_save_message_stream(success:)
[0m[32m39[0m-    turbo_stream.replace(
[0m[32m40[0m:      "[0m[1m[31mform[0m_save_message",
[0m[32m41[0m-      partial: "shared/save_message",
[0m[32m42[0m:      locals: save_message_locals(success: success, dom_id: "[0m[1m[31mform[0m_save_message")
[0m[32m43[0m-    )
[0m[32m44[0m-  end

[0m[35mapp/views/inspections/_user_height_form.html.erb[0m
[0m[32m1[0m:<%= render '[0m[1m[31mform[0m/[0m[1m[31mform[0m_context',
[0m[32m2[0m-  model: @inspection.user_height_assessment,
[0m[32m3[0m:  i18n_base: '[0m[1m[31mform[0ms.user_height',
[0m[32m4[0m:  url: inspection_user_height_assessment_path(@inspection) do |[0m[1m[31mform[0m|
[0m[32m5[0m-%>
[0m[32m6[0m:  <%= render '[0m[1m[31mform[0m/fieldset', legend_key: 'height_measurements' do %>
[0m[32m7[0m:      <%= render '[0m[1m[31mform[0m/decimal_comment', field: :containing_wall_height %>
[0m[32m8[0m:      <%= render '[0m[1m[31mform[0m/decimal_comment', field: :plat[0m[1m[31mform[0m_height %>
[0m[32m9[0m:    <%= render '[0m[1m[31mform[0m/decimal_comment', field: :tallest_user_height %>
[0m[32m10[0m-  <% end %>
[0m[32m11[0m-
[0m[32m12[0m:  <%= render '[0m[1m[31mform[0m/fieldset', legend_key: 'play_area' do %>
[0m[32m13[0m:    <%= render '[0m[1m[31mform[0m/decimal_comment', field: :play_area_length, min: 0 %>
[0m[32m14[0m:    <%= render '[0m[1m[31mform[0m/decimal_comment', field: :play_area_width, min: 0 %>
[0m[32m15[0m:    <%= render '[0m[1m[31mform[0m/decimal_comment', field: :negative_adjustment, min: 0 %>
[0m[32m16[0m-  <% end %>
[0m[32m17[0m-
[0m[32m18[0m:  <%= render '[0m[1m[31mform[0m/fieldset', legend_key: 'user_capacity' do %>
[0m[32m19[0m-    <div class="user-heights">
[0m[32m20[0m:      <%= render '[0m[1m[31mform[0m/number', field: :users_at_1000mm, min: 0, step: 1 %>
[0m[32m21[0m:      <%= render '[0m[1m[31mform[0m/number', field: :users_at_1200mm, min: 0, step: 1 %>
[0m[32m22[0m:      <%= render '[0m[1m[31mform[0m/number', field: :users_at_1500mm, min: 0, step: 1 %>
[0m[32m23[0m:      <%= render '[0m[1m[31mform[0m/number', field: :users_at_1800mm, min: 0, step: 1 %>
[0m[32m24[0m-    </div>
[0m[32m25[0m-  <% end %>

[0m[35mapp/controllers/concerns/assessment_controller.rb[0m
[0m[32m24[0m-
[0m[32m25[0m-  def handle_successful_update
[0m[32m26[0m:    respond_to do |[0m[1m[31mform[0mat|
[0m[32m27[0m:      [0m[1m[31mform[0mat.html do
[0m[32m28[0m-        flash[:notice] = I18n.t("inspections.messages.updated")
[0m[32m29[0m-        redirect_to @inspection
[0m[32m30[0m-      end
[0m[32m31[0m:      [0m[1m[31mform[0mat.json do
[0m[32m32[0m-        success_response = {
[0m[32m33[0m-          status: I18n.t("shared.api.success"),
--
[0m[32m36[0m-        render json: success_response
[0m[32m37[0m-      end
[0m[32m38[0m:      [0m[1m[31mform[0mat.turbo_stream { render turbo_stream: success_turbo_streams }
[0m[32m39[0m-    end
[0m[32m40[0m-  end
[0m[32m41[0m-
[0m[32m42[0m-  def handle_failed_update
[0m[32m43[0m:    respond_to do |[0m[1m[31mform[0mat|
[0m[32m44[0m:      [0m[1m[31mform[0mat.html { render_edit_with_errors }
[0m[32m45[0m:      [0m[1m[31mform[0mat.json do
[0m[32m46[0m-        render json: {errors: @assessment.errors}, status: :unprocessable_entity
[0m[32m47[0m-      end
[0m[32m48[0m:      [0m[1m[31mform[0mat.turbo_stream { render turbo_stream: error_turbo_streams }
[0m[32m49[0m-    end
[0m[32m50[0m-  end
--
[0m[32m71[0m-    return if @inspection.user == current_user
[0m[32m72[0m-
[0m[32m73[0m:    respond_to do |[0m[1m[31mform[0mat|
[0m[32m74[0m:      [0m[1m[31mform[0mat.html do
[0m[32m75[0m-        flash[:alert] = I18n.t("inspections.errors.access_denied")
[0m[32m76[0m-        redirect_to inspections_path
[0m[32m77[0m-      end
[0m[32m78[0m:      [0m[1m[31mform[0mat.json do
[0m[32m79[0m-        error_msg = I18n.t("inspections.errors.access_denied")
[0m[32m80[0m-        render json: {error: error_msg}, status: :forbidden
[0m[32m81[0m-      end
[0m[32m82[0m:      [0m[1m[31mform[0mat.turbo_stream do
[0m[32m83[0m-        render_error_message(I18n.t("inspections.errors.access_denied"))
[0m[32m84[0m-      end

[0m[35mapp/views/inspections/_slide_form.html.erb[0m
[0m[32m1[0m:<%= render '[0m[1m[31mform[0m/[0m[1m[31mform[0m_context',
[0m[32m2[0m-  model: @inspection.slide_assessment,
[0m[32m3[0m:  i18n_base: '[0m[1m[31mform[0ms.slide',
[0m[32m4[0m:  url: inspection_slide_assessment_path(@inspection) do |[0m[1m[31mform[0m|
[0m[32m5[0m-%>
[0m[32m6[0m:  <%= render '[0m[1m[31mform[0m/fieldset', legend_key: 'slide_dimensions' do %>
[0m[32m7[0m:    <%= render '[0m[1m[31mform[0m/decimal_comment', field: :slide_plat[0m[1m[31mform[0m_height, min: 0 %>
[0m[32m8[0m:    <%= render '[0m[1m[31mform[0m/decimal_comment', field: :slide_wall_height, min: 0 %>
[0m[32m9[0m:    <%= render '[0m[1m[31mform[0m/decimal_comment', field: :slide_first_metre_height, min: 0 %>
[0m[32m10[0m:    <%= render '[0m[1m[31mform[0m/decimal_comment', field: :slide_beyond_first_metre_height, min: 0 %>
[0m[32m11[0m:    <%= render '[0m[1m[31mform[0m/radio_comment', field: :slide_permanent_roof %>
[0m[32m12[0m:    <%= render '[0m[1m[31mform[0m/pass_fail_comment', field: :clamber_netting_pass %>
[0m[32m13[0m:    <%= render '[0m[1m[31mform[0m/number_pass_fail_comment', field: :runout, min: 0 %>
[0m[32m14[0m:    <%= render '[0m[1m[31mform[0m/pass_fail_comment', field: :slip_sheet_pass %>
[0m[32m15[0m-  <% end %>
[0m[32m16[0m-

[0m[35mapp/views/inspections/_structure_form.html.erb[0m
[0m[32m1[0m:<%= render '[0m[1m[31mform[0m/[0m[1m[31mform[0m_context',
[0m[32m2[0m-  model: @inspection.structure_assessment,
[0m[32m3[0m:  i18n_base: '[0m[1m[31mform[0ms.structure',
[0m[32m4[0m:  url: inspection_structure_assessment_path(@inspection) do |[0m[1m[31mform[0m|
[0m[32m5[0m-%>
[0m[32m6[0m:  <%= render '[0m[1m[31mform[0m/fieldset', legend_key: 'fabric_construction' do %>
[0m[32m7[0m:    <%= render '[0m[1m[31mform[0m/pass_fail_comment', field: :seam_integrity_pass %>
[0m[32m8[0m:    <%= render '[0m[1m[31mform[0m/pass_fail_comment', field: :uses_lock_stitching_pass %>
[0m[32m9[0m:    <%= render '[0m[1m[31mform[0m/number_pass_fail_comment', field: :stitch_length, step: 1 %>
[0m[32m10[0m:    <%= render '[0m[1m[31mform[0m/pass_fail_comment', field: :air_loss_pass %>
[0m[32m11[0m:    <%= render '[0m[1m[31mform[0m/pass_fail_comment', field: :straight_walls_pass %>
[0m[32m12[0m:    <%= render '[0m[1m[31mform[0m/pass_fail_comment', field: :sharp_edges_pass %>
[0m[32m13[0m-  <% end %>
[0m[32m14[0m-
[0m[32m15[0m:  <%= render '[0m[1m[31mform[0m/fieldset', legend_key: 'structural_safety' do %>
[0m[32m16[0m:    <%= render '[0m[1m[31mform[0m/number_pass_fail_comment', field: :blower_tube_length %>
[0m[32m17[0m:    <%= render '[0m[1m[31mform[0m/pass_fail_comment', field: :unit_stable_pass %>
[0m[32m18[0m:    <%= render '[0m[1m[31mform[0m/number_pass_fail_comment', field: :evacuation_time, step: 1 %>
[0m[32m19[0m:    <%= render '[0m[1m[31mform[0m/number_pass_fail_comment', field: :step_ramp_size, step: 1 %>
[0m[32m20[0m:    <%= render '[0m[1m[31mform[0m/number_pass_fail_comment', field: :critical_fall_off_height, step: 0.1 %>
[0m[32m21[0m:    <%= render '[0m[1m[31mform[0m/number_pass_fail_comment', field: :unit_pressure, step: 1 %>
[0m[32m22[0m-  <% end %>
[0m[32m23[0m-
[0m[32m24[0m:  <%= render '[0m[1m[31mform[0m/fieldset', legend_key: 'trough_assessment' do %>
[0m[32m25[0m:    <%= render '[0m[1m[31mform[0m/number_pass_fail_comment', field: :trough_depth, step: 1 %>
[0m[32m26[0m:    <%= render '[0m[1m[31mform[0m/number_pass_fail_comment', field: :trough_adjacent_panel_width, step: 0.1 %>
[0m[32m27[0m:    <%= render '[0m[1m[31mform[0m/pass_fail_comment', field: :trough_pass %>
[0m[32m28[0m-  <% end %>
[0m[32m29[0m-
[0m[32m30[0m:  <%= render '[0m[1m[31mform[0m/fieldset', legend_key: 'safety_compliance' do %>
[0m[32m31[0m:    <%= render '[0m[1m[31mform[0m/pass_fail_comment', field: :entrapment_pass %>
[0m[32m32[0m:    <%= render '[0m[1m[31mform[0m/pass_fail_comment', field: :markings_pass %>
[0m[32m33[0m:    <%= render '[0m[1m[31mform[0m/pass_fail_comment', field: :grounding_pass %>
[0m[32m34[0m-  <% end %>
[0m[32m35[0m-<% end %>
