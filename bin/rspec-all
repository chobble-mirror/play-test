#!/usr/bin/env bash
# Run ALL RSpec tests quickly with in-memory database and show full count
# Similar to bin/test but without coverage and with cleaner output

set -e

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

echo -e "${YELLOW}🧪 Running ALL tests in parallel...${NC}"
echo -e "${BLUE}Using in-memory database for speed${NC}"
echo ""

# Create a temporary file to capture the output
temp_output=$(mktemp)

# Run tests and capture all output
if DISABLE_SIMPLECOV=true IN_MEMORY_DB=true bundle exec parallel_rspec spec/ > "$temp_output" 2>&1; then
    echo -e "${GREEN}✅ Tests passed!${NC}"
    
    # Extract the final test count
    if grep -q "^[0-9]* examples, [0-9]* failures" "$temp_output"; then
        final_count=$(grep "^[0-9]* examples, [0-9]* failures" "$temp_output" | tail -1)
        if [[ "$final_count" =~ ([0-9]+)\ examples?,\ ([0-9]+)\ failures? ]]; then
            total="${BASH_REMATCH[1]}"
            failures="${BASH_REMATCH[2]}"
            echo ""
            echo -e "${GREEN}━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━${NC}"
            echo -e "${GREEN}✅ All $total tests passed!${NC}"
            echo -e "${GREEN}━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━${NC}"
        fi
    fi
    
    cleanup_result=0
else
    echo -e "${RED}❌ Tests failed!${NC}"
    
    # Show failures
    echo ""
    grep -A 50 "^Failures:" "$temp_output" || true
    
    # Extract the final test count
    if grep -q "^[0-9]* examples, [0-9]* failures" "$temp_output"; then
        final_count=$(grep "^[0-9]* examples, [0-9]* failures" "$temp_output" | tail -1)
        if [[ "$final_count" =~ ([0-9]+)\ examples?,\ ([0-9]+)\ failures? ]]; then
            total="${BASH_REMATCH[1]}"
            failures="${BASH_REMATCH[2]}"
            echo ""
            echo -e "${RED}━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━${NC}"
            echo -e "${RED}❌ $failures out of $total tests failed!${NC}"
            echo -e "${RED}━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━${NC}"
        fi
    fi
    
    cleanup_result=1
fi

# Show timing
if grep -q "^Took [0-9]* seconds" "$temp_output"; then
    timing=$(grep "^Took [0-9]* seconds" "$temp_output" | tail -1)
    echo ""
    echo "$timing"
fi

# Cleanup
rm -f "$temp_output"
exit $cleanup_result