<%
  # Form wrapper that handles all form setup and context
  # Required parameters:
  #   i18n_base: The i18n base path for translations
  # Optional parameters:
  #   model: The model object (e.g., @inspection, @unit) - nil for non-model forms
  #   scope: The form scope for non-model forms (e.g., :session)
  #   url: Form submission URL (defaults to model's update path)
  #   method: HTTP method (defaults to :patch for models, :post for scoped forms)

  if model
    url ||= url_for(model)
    method ||= model.persisted? ? :patch : :post
  else
    # Non-model forms need explicit URL and default to POST
    method ||= :post
  end
%>

<% form_options = {
  url: url,
  method: method,
  local: false,
  html: { data: { turbo_stream: true } }
} %>

<% if model
  form_options[:model] = model
  # For namespaced models like Assessments::SlideAssessment, use just the base name
  model_class_name = model.class.name
  if model_class_name.include?('::')
    form_options[:as] = model_class_name.demodulize.underscore.to_sym
  end
elsif scope
  form_options[:scope] = scope
end %>

<%= form_with(**form_options) do |form| %>
  <%= render "shared/page_header", title: I18n.t("#{i18n_base}.header") %>

  <%# Set the current form context for all child partials %>
  <% @_current_form = form %>
  <% @_current_i18n_base = i18n_base %>

  <%# Automatically render errors at the top if model has errors %>
  <% if model && model.respond_to?(:errors) && model.errors.any? %>
    <%= render 'form/errors', model: model %>
  <% end %>

  <%# Automatically render completion stats for assessments %>
  <% if model && model.persisted? && model.respond_to?(:pass_columns_count) && model.pass_columns_count > 0 %>
    <div class="assessment-summary">
      <h4><%= I18n.t("#{i18n_base}.summary.title", default: "Assessment Summary") %></h4>
      <div class="compliance-status">
        <strong><%= I18n.t("#{i18n_base}.summary.completion", default: "Completion") %>:</strong>
        <span class="completion-percentage"><%= model.completion_percentage %>%</span>
      </div>
      <div class="safety-status">
        <strong><%= I18n.t("#{i18n_base}.summary.safety_checks", default: "Safety Checks") %>:</strong>
        <span class="checks-count">
          <%= model.passed_checks_count %> / <%= model.pass_columns_count %>
        </span>
      </div>
    </div>
  <% end %>

  <%= yield form %>

  <%# Every form needs a submit button - include it automatically %>
  <fieldset>
    <%= render 'form/submit_button' %>
  </fieldset>

  <%# Save message display for Turbo Streams %>
  <div id="form_save_message"></div>
<% end %>
