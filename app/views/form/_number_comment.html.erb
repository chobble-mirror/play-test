<%
  # Composite partial for number + comment fields with grid layout
  # Required parameters:
  #   field: Base field name (e.g., 'slide_platform_height')
  # Optional parameters (passed through to number field):
  #   step: Step value for number input (default: 0.01)
  #   min: Minimum value
  #   max: Maximum value
  #   required: Whether the number field is required
  #
  # This will render:
  #   - Number field: field (e.g., 'slide_platform_height')
  #   - Comment field: field + '_comment' (e.g., 'slide_platform_height_comment')

  number_field = field
  comment_field = "#{field}_comment".to_sym

  # Extract number field options
  number_options = local_assigns.slice(:step, :min, :max, :required)
  
  # Get the form object
  form = @_current_form
  model = form.object

  # Get field label from i18n (will raise if missing)
  field_data = form_field_setup(field, local_assigns)

  # Generate unique ID for comment checkbox
  comment_checkbox_id = "#{field}_has_comment_#{model.object_id}"
  comment_textarea_id = "#{field}_comment_textarea_#{model.object_id}"
%>

<div class="form-grid number-comment">
  <label>
    <%= field_data[:field_label] %>
  </label>

  <%= form.number_field number_field, **number_options %>

  <label for="<%= comment_checkbox_id %>">
    <input type="checkbox"
      id="<%= comment_checkbox_id %>"
      <%= 'checked' if model.send(comment_field).present? %>
      onchange="document.getElementById('<%= comment_textarea_id %>').style.display = this.checked ? 'block' : 'none';"
    >
    <%= t('shared.comment') %>
  </label>

  <%= form.text_area comment_field,
      rows: 2,
      placeholder: t('shared.field_comment_placeholder', field: field_data[:field_label]),
      id: comment_textarea_id,
      style: "display: #{model.send(comment_field).present? ? 'block' : 'none'};" %>
</div>
