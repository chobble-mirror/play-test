<%
  # Partial for showing incomplete fields
  # Required locals:
  #   - object: The object with incomplete_fields method (assessment or inspection)
  #   - object_type: Type identifier for unique ID (e.g., "user_height", "structure", "inspection")
  # Optional locals:
  #   - description_key: I18n key for description (defaults to "assessments.incomplete_fields.description")

  incomplete_fields = object.incomplete_fields
  return if incomplete_fields.empty?

  # Count total number of incomplete fields across all forms
  total_field_count = incomplete_fields.sum { |form| form[:fields].count }

  details_id = "incomplete_fields_#{object_type}"
  description_key ||= "assessments.incomplete_fields.description"
%>

<details id="<%= details_id %>" class="incomplete-fields-details">
  <summary class="incomplete-fields-summary">
    <%= t("assessments.incomplete_fields.show_fields", count: total_field_count) %>
  </summary>

  <div class="incomplete-fields-content">
    <p><%= t(description_key) %></p>

    <ul class="incomplete-fields-list">
      <% incomplete_fields.each do |form| %>
        <li>
          <strong>
            <%= link_to t("forms.#{form[:tab]}.header"),
              edit_inspection_path(
                @inspection,
                tab: form[:tab],
                anchor: "tabs"
              )
            %>
          </strong>
        </li>
        <li>
          <ul>
            <% form[:fields].each do |field| %>
              <li>
                <%= link_to field[:label],
                  edit_inspection_path(
                    @inspection,
                    tab: form[:tab],
                    anchor: field[:field]
                  )
                %>
              </li>
            <% end %>
          </ul>
        </li>
      <% end %>
    </ul>
  </div>
</details>
